<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="43879"><g><title>AppKit`-[NSApplication init] (12 samples, 0.03%)</title><rect x="0.0000%" y="709" width="0.0273%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="12"/><text x="0.2500%" y="719.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (13 samples, 0.03%)</title><rect x="0.0000%" y="725" width="0.0296%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="13"/><text x="0.2500%" y="735.50"></text></g><g><title>eguitty`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (14 samples, 0.03%)</title><rect x="0.0000%" y="741" width="0.0319%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="14"/><text x="0.2500%" y="751.50"></text></g><g><title>AppKit`NSControlTrackMouse (6 samples, 0.01%)</title><rect x="0.0547%" y="533" width="0.0137%" height="15" fill="rgb(248,212,6)" fg:x="24" fg:w="6"/><text x="0.3047%" y="543.50"></text></g><g><title>AppKit`-[_NSThemeZoomWidgetCell _sendActionFrom:] (5 samples, 0.01%)</title><rect x="0.0570%" y="517" width="0.0114%" height="15" fill="rgb(208,68,35)" fg:x="25" fg:w="5"/><text x="0.3070%" y="527.50"></text></g><g><title>AppKit`-[NSButtonCell _sendActionFrom:] (5 samples, 0.01%)</title><rect x="0.0570%" y="501" width="0.0114%" height="15" fill="rgb(232,128,0)" fg:x="25" fg:w="5"/><text x="0.3070%" y="511.50"></text></g><g><title>AppKit`-[NSCell _sendActionFrom:] (5 samples, 0.01%)</title><rect x="0.0570%" y="485" width="0.0114%" height="15" fill="rgb(207,160,47)" fg:x="25" fg:w="5"/><text x="0.3070%" y="495.50"></text></g><g><title>AppKit`__26-[NSCell _sendActionFrom:]_block_invoke (5 samples, 0.01%)</title><rect x="0.0570%" y="469" width="0.0114%" height="15" fill="rgb(228,23,34)" fg:x="25" fg:w="5"/><text x="0.3070%" y="479.50"></text></g><g><title>AppKit`-[NSControl sendAction:to:] (5 samples, 0.01%)</title><rect x="0.0570%" y="453" width="0.0114%" height="15" fill="rgb(218,30,26)" fg:x="25" fg:w="5"/><text x="0.3070%" y="463.50"></text></g><g><title>AppKit`-[NSApplication(NSResponder) sendAction:to:from:] (5 samples, 0.01%)</title><rect x="0.0570%" y="437" width="0.0114%" height="15" fill="rgb(220,122,19)" fg:x="25" fg:w="5"/><text x="0.3070%" y="447.50"></text></g><g><title>AppKit`-[_NSFullScreenSpace(Transitions) startTransition:] (5 samples, 0.01%)</title><rect x="0.0570%" y="421" width="0.0114%" height="15" fill="rgb(250,228,42)" fg:x="25" fg:w="5"/><text x="0.3070%" y="431.50"></text></g><g><title>AppKit`-[_NSEnterFullScreenTransitionController start] (5 samples, 0.01%)</title><rect x="0.0570%" y="405" width="0.0114%" height="15" fill="rgb(240,193,28)" fg:x="25" fg:w="5"/><text x="0.3070%" y="415.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (8 samples, 0.02%)</title><rect x="0.0524%" y="597" width="0.0182%" height="15" fill="rgb(216,20,37)" fg:x="23" fg:w="8"/><text x="0.3024%" y="607.50"></text></g><g><title>AppKit`-[_NSThemeZoomWidgetCell trackMouse:inRect:ofView:untilMouseUp:] (7 samples, 0.02%)</title><rect x="0.0547%" y="581" width="0.0160%" height="15" fill="rgb(206,188,39)" fg:x="24" fg:w="7"/><text x="0.3047%" y="591.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (7 samples, 0.02%)</title><rect x="0.0547%" y="565" width="0.0160%" height="15" fill="rgb(217,207,13)" fg:x="24" fg:w="7"/><text x="0.3047%" y="575.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (7 samples, 0.02%)</title><rect x="0.0547%" y="549" width="0.0160%" height="15" fill="rgb(231,73,38)" fg:x="24" fg:w="7"/><text x="0.3047%" y="559.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (10 samples, 0.02%)</title><rect x="0.0501%" y="613" width="0.0228%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="10"/><text x="0.3001%" y="623.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (13 samples, 0.03%)</title><rect x="0.0456%" y="645" width="0.0296%" height="15" fill="rgb(210,31,41)" fg:x="20" fg:w="13"/><text x="0.2956%" y="655.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (12 samples, 0.03%)</title><rect x="0.0479%" y="629" width="0.0273%" height="15" fill="rgb(221,200,47)" fg:x="21" fg:w="12"/><text x="0.2979%" y="639.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager mouseMoved:] (6 samples, 0.01%)</title><rect x="0.0752%" y="581" width="0.0137%" height="15" fill="rgb(226,26,5)" fg:x="33" fg:w="6"/><text x="0.3252%" y="591.50"></text></g><g><title>AppKit`routeMouseMovedEvent (7 samples, 0.02%)</title><rect x="0.0752%" y="645" width="0.0160%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="7"/><text x="0.3252%" y="655.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (7 samples, 0.02%)</title><rect x="0.0752%" y="629" width="0.0160%" height="15" fill="rgb(235,183,28)" fg:x="33" fg:w="7"/><text x="0.3252%" y="639.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (7 samples, 0.02%)</title><rect x="0.0752%" y="613" width="0.0160%" height="15" fill="rgb(221,5,38)" fg:x="33" fg:w="7"/><text x="0.3252%" y="623.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (7 samples, 0.02%)</title><rect x="0.0752%" y="597" width="0.0160%" height="15" fill="rgb(247,18,42)" fg:x="33" fg:w="7"/><text x="0.3252%" y="607.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (25 samples, 0.06%)</title><rect x="0.0365%" y="661" width="0.0570%" height="15" fill="rgb(241,131,45)" fg:x="16" fg:w="25"/><text x="0.2865%" y="671.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (28 samples, 0.06%)</title><rect x="0.0319%" y="693" width="0.0638%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="28"/><text x="0.2819%" y="703.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app::WinitApplication::send_event (26 samples, 0.06%)</title><rect x="0.0365%" y="677" width="0.0593%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="26"/><text x="0.2865%" y="687.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (5 samples, 0.01%)</title><rect x="0.1094%" y="661" width="0.0114%" height="15" fill="rgb(238,160,17)" fg:x="48" fg:w="5"/><text x="0.3594%" y="671.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (5 samples, 0.01%)</title><rect x="0.1094%" y="645" width="0.0114%" height="15" fill="rgb(214,148,48)" fg:x="48" fg:w="5"/><text x="0.3594%" y="655.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (5 samples, 0.01%)</title><rect x="0.1094%" y="629" width="0.0114%" height="15" fill="rgb(232,36,49)" fg:x="48" fg:w="5"/><text x="0.3594%" y="639.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (5 samples, 0.01%)</title><rect x="0.1094%" y="613" width="0.0114%" height="15" fill="rgb(209,103,24)" fg:x="48" fg:w="5"/><text x="0.3594%" y="623.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (5 samples, 0.01%)</title><rect x="0.1094%" y="597" width="0.0114%" height="15" fill="rgb(229,88,8)" fg:x="48" fg:w="5"/><text x="0.3594%" y="607.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (5 samples, 0.01%)</title><rect x="0.1094%" y="581" width="0.0114%" height="15" fill="rgb(213,181,19)" fg:x="48" fg:w="5"/><text x="0.3594%" y="591.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (5 samples, 0.01%)</title><rect x="0.1094%" y="565" width="0.0114%" height="15" fill="rgb(254,191,54)" fg:x="48" fg:w="5"/><text x="0.3594%" y="575.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (5 samples, 0.01%)</title><rect x="0.1094%" y="549" width="0.0114%" height="15" fill="rgb(241,83,37)" fg:x="48" fg:w="5"/><text x="0.3594%" y="559.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (5 samples, 0.01%)</title><rect x="0.1094%" y="533" width="0.0114%" height="15" fill="rgb(233,36,39)" fg:x="48" fg:w="5"/><text x="0.3594%" y="543.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (5 samples, 0.01%)</title><rect x="0.1094%" y="517" width="0.0114%" height="15" fill="rgb(226,3,54)" fg:x="48" fg:w="5"/><text x="0.3594%" y="527.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (5 samples, 0.01%)</title><rect x="0.1094%" y="501" width="0.0114%" height="15" fill="rgb(245,192,40)" fg:x="48" fg:w="5"/><text x="0.3594%" y="511.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (5 samples, 0.01%)</title><rect x="0.1094%" y="485" width="0.0114%" height="15" fill="rgb(238,167,29)" fg:x="48" fg:w="5"/><text x="0.3594%" y="495.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (7 samples, 0.02%)</title><rect x="0.1071%" y="677" width="0.0160%" height="15" fill="rgb(232,182,51)" fg:x="47" fg:w="7"/><text x="0.3571%" y="687.50"></text></g><g><title>OpenGL`0x00000002007befd4 (5 samples, 0.01%)</title><rect x="0.1436%" y="229" width="0.0114%" height="15" fill="rgb(231,60,39)" fg:x="63" fg:w="5"/><text x="0.3936%" y="239.50"></text></g><g><title>OpenGL`0x00000002007bf23c (5 samples, 0.01%)</title><rect x="0.1436%" y="213" width="0.0114%" height="15" fill="rgb(208,69,12)" fg:x="63" fg:w="5"/><text x="0.3936%" y="223.50"></text></g><g><title>OpenGL`0x00000002007bf368 (5 samples, 0.01%)</title><rect x="0.1436%" y="197" width="0.0114%" height="15" fill="rgb(235,93,37)" fg:x="63" fg:w="5"/><text x="0.3936%" y="207.50"></text></g><g><title>GLEngine`gliInitializeLibrary (5 samples, 0.01%)</title><rect x="0.1436%" y="181" width="0.0114%" height="15" fill="rgb(213,116,39)" fg:x="63" fg:w="5"/><text x="0.3936%" y="191.50"></text></g><g><title>libGFXShared.dylib`gfxInitializeLibrary (5 samples, 0.01%)</title><rect x="0.1436%" y="165" width="0.0114%" height="15" fill="rgb(222,207,29)" fg:x="63" fg:w="5"/><text x="0.3936%" y="175.50"></text></g><g><title>eguitty`&lt;glutin::display::Display as glutin::display::GlDisplay&gt;::find_configs (6 samples, 0.01%)</title><rect x="0.1436%" y="309" width="0.0137%" height="15" fill="rgb(206,96,30)" fg:x="63" fg:w="6"/><text x="0.3936%" y="319.50"></text></g><g><title>eguitty`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs (6 samples, 0.01%)</title><rect x="0.1436%" y="293" width="0.0137%" height="15" fill="rgb(218,138,4)" fg:x="63" fg:w="6"/><text x="0.3936%" y="303.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (6 samples, 0.01%)</title><rect x="0.1436%" y="277" width="0.0137%" height="15" fill="rgb(250,191,14)" fg:x="63" fg:w="6"/><text x="0.3936%" y="287.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (6 samples, 0.01%)</title><rect x="0.1436%" y="261" width="0.0137%" height="15" fill="rgb(239,60,40)" fg:x="63" fg:w="6"/><text x="0.3936%" y="271.50"></text></g><g><title>OpenGL`0x00000002007c5cc0 (6 samples, 0.01%)</title><rect x="0.1436%" y="245" width="0.0137%" height="15" fill="rgb(206,27,48)" fg:x="63" fg:w="6"/><text x="0.3936%" y="255.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (5 samples, 0.01%)</title><rect x="0.1618%" y="181" width="0.0114%" height="15" fill="rgb(225,35,8)" fg:x="71" fg:w="5"/><text x="0.4118%" y="191.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (7 samples, 0.02%)</title><rect x="0.1618%" y="197" width="0.0160%" height="15" fill="rgb(250,213,24)" fg:x="71" fg:w="7"/><text x="0.4118%" y="207.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (10 samples, 0.02%)</title><rect x="0.1618%" y="213" width="0.0228%" height="15" fill="rgb(247,123,22)" fg:x="71" fg:w="10"/><text x="0.4118%" y="223.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (26 samples, 0.06%)</title><rect x="0.1276%" y="389" width="0.0593%" height="15" fill="rgb(231,138,38)" fg:x="56" fg:w="26"/><text x="0.3776%" y="399.50"></text></g><g><title>eguitty`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (26 samples, 0.06%)</title><rect x="0.1276%" y="373" width="0.0593%" height="15" fill="rgb(231,145,46)" fg:x="56" fg:w="26"/><text x="0.3776%" y="383.50"></text></g><g><title>eguitty`eframe::native::run::run_and_return::_{{closure}} (26 samples, 0.06%)</title><rect x="0.1276%" y="357" width="0.0593%" height="15" fill="rgb(251,118,11)" fg:x="56" fg:w="26"/><text x="0.3776%" y="367.50"></text></g><g><title>eguitty`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::on_event (26 samples, 0.06%)</title><rect x="0.1276%" y="341" width="0.0593%" height="15" fill="rgb(217,147,25)" fg:x="56" fg:w="26"/><text x="0.3776%" y="351.50"></text></g><g><title>eguitty`glutin_winit::DisplayBuilder::build (19 samples, 0.04%)</title><rect x="0.1436%" y="325" width="0.0433%" height="15" fill="rgb(247,81,37)" fg:x="63" fg:w="19"/><text x="0.3936%" y="335.50"></text></g><g><title>eguitty`glutin_winit::finalize_window (13 samples, 0.03%)</title><rect x="0.1573%" y="309" width="0.0296%" height="15" fill="rgb(209,12,38)" fg:x="69" fg:w="13"/><text x="0.4073%" y="319.50"></text></g><g><title>eguitty`winit::platform_impl::platform::window::Window::new (13 samples, 0.03%)</title><rect x="0.1573%" y="293" width="0.0296%" height="15" fill="rgb(227,1,9)" fg:x="69" fg:w="13"/><text x="0.4073%" y="303.50"></text></g><g><title>eguitty`winit::platform_impl::platform::window::WinitWindow::new (13 samples, 0.03%)</title><rect x="0.1573%" y="277" width="0.0296%" height="15" fill="rgb(248,47,43)" fg:x="69" fg:w="13"/><text x="0.4073%" y="287.50"></text></g><g><title>eguitty`winit::platform_impl::platform::window::WinitWindow::init (12 samples, 0.03%)</title><rect x="0.1595%" y="261" width="0.0273%" height="15" fill="rgb(221,10,30)" fg:x="70" fg:w="12"/><text x="0.4095%" y="271.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (12 samples, 0.03%)</title><rect x="0.1595%" y="245" width="0.0273%" height="15" fill="rgb(210,229,1)" fg:x="70" fg:w="12"/><text x="0.4095%" y="255.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (12 samples, 0.03%)</title><rect x="0.1595%" y="229" width="0.0273%" height="15" fill="rgb(222,148,37)" fg:x="70" fg:w="12"/><text x="0.4095%" y="239.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (29 samples, 0.07%)</title><rect x="0.1276%" y="661" width="0.0661%" height="15" fill="rgb(234,67,33)" fg:x="56" fg:w="29"/><text x="0.3776%" y="671.50"></text></g><g><title>AE`aeProcessAppleEvent (29 samples, 0.07%)</title><rect x="0.1276%" y="645" width="0.0661%" height="15" fill="rgb(247,98,35)" fg:x="56" fg:w="29"/><text x="0.3776%" y="655.50"></text></g><g><title>AE`0x00000001a1fc9e18 (29 samples, 0.07%)</title><rect x="0.1276%" y="629" width="0.0661%" height="15" fill="rgb(247,138,52)" fg:x="56" fg:w="29"/><text x="0.3776%" y="639.50"></text></g><g><title>AE`0x00000001a1fc9ec4 (29 samples, 0.07%)</title><rect x="0.1276%" y="613" width="0.0661%" height="15" fill="rgb(213,79,30)" fg:x="56" fg:w="29"/><text x="0.3776%" y="623.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (29 samples, 0.07%)</title><rect x="0.1276%" y="597" width="0.0661%" height="15" fill="rgb(246,177,23)" fg:x="56" fg:w="29"/><text x="0.3776%" y="607.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (29 samples, 0.07%)</title><rect x="0.1276%" y="581" width="0.0661%" height="15" fill="rgb(230,62,27)" fg:x="56" fg:w="29"/><text x="0.3776%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (29 samples, 0.07%)</title><rect x="0.1276%" y="565" width="0.0661%" height="15" fill="rgb(216,154,8)" fg:x="56" fg:w="29"/><text x="0.3776%" y="575.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (29 samples, 0.07%)</title><rect x="0.1276%" y="549" width="0.0661%" height="15" fill="rgb(244,35,45)" fg:x="56" fg:w="29"/><text x="0.3776%" y="559.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (29 samples, 0.07%)</title><rect x="0.1276%" y="533" width="0.0661%" height="15" fill="rgb(251,115,12)" fg:x="56" fg:w="29"/><text x="0.3776%" y="543.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (29 samples, 0.07%)</title><rect x="0.1276%" y="517" width="0.0661%" height="15" fill="rgb(240,54,50)" fg:x="56" fg:w="29"/><text x="0.3776%" y="527.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (29 samples, 0.07%)</title><rect x="0.1276%" y="501" width="0.0661%" height="15" fill="rgb(233,84,52)" fg:x="56" fg:w="29"/><text x="0.3776%" y="511.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (29 samples, 0.07%)</title><rect x="0.1276%" y="485" width="0.0661%" height="15" fill="rgb(207,117,47)" fg:x="56" fg:w="29"/><text x="0.3776%" y="495.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (29 samples, 0.07%)</title><rect x="0.1276%" y="469" width="0.0661%" height="15" fill="rgb(249,43,39)" fg:x="56" fg:w="29"/><text x="0.3776%" y="479.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (29 samples, 0.07%)</title><rect x="0.1276%" y="453" width="0.0661%" height="15" fill="rgb(209,38,44)" fg:x="56" fg:w="29"/><text x="0.3776%" y="463.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (29 samples, 0.07%)</title><rect x="0.1276%" y="437" width="0.0661%" height="15" fill="rgb(236,212,23)" fg:x="56" fg:w="29"/><text x="0.3776%" y="447.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (29 samples, 0.07%)</title><rect x="0.1276%" y="421" width="0.0661%" height="15" fill="rgb(242,79,21)" fg:x="56" fg:w="29"/><text x="0.3776%" y="431.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::AppState::launched (29 samples, 0.07%)</title><rect x="0.1276%" y="405" width="0.0661%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="29"/><text x="0.3776%" y="415.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (5 samples, 0.01%)</title><rect x="0.1937%" y="629" width="0.0114%" height="15" fill="rgb(253,215,40)" fg:x="85" fg:w="5"/><text x="0.4437%" y="639.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (5 samples, 0.01%)</title><rect x="0.1937%" y="613" width="0.0114%" height="15" fill="rgb(211,81,21)" fg:x="85" fg:w="5"/><text x="0.4437%" y="623.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (5 samples, 0.01%)</title><rect x="0.1937%" y="597" width="0.0114%" height="15" fill="rgb(208,190,38)" fg:x="85" fg:w="5"/><text x="0.4437%" y="607.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (5 samples, 0.01%)</title><rect x="0.1937%" y="581" width="0.0114%" height="15" fill="rgb(235,213,38)" fg:x="85" fg:w="5"/><text x="0.4437%" y="591.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (5 samples, 0.01%)</title><rect x="0.1937%" y="565" width="0.0114%" height="15" fill="rgb(237,122,38)" fg:x="85" fg:w="5"/><text x="0.4437%" y="575.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (8 samples, 0.02%)</title><rect x="0.2165%" y="533" width="0.0182%" height="15" fill="rgb(244,218,35)" fg:x="95" fg:w="8"/><text x="0.4665%" y="543.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (9 samples, 0.02%)</title><rect x="0.2165%" y="565" width="0.0205%" height="15" fill="rgb(240,68,47)" fg:x="95" fg:w="9"/><text x="0.4665%" y="575.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (9 samples, 0.02%)</title><rect x="0.2165%" y="549" width="0.0205%" height="15" fill="rgb(210,16,53)" fg:x="95" fg:w="9"/><text x="0.4665%" y="559.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (14 samples, 0.03%)</title><rect x="0.2074%" y="581" width="0.0319%" height="15" fill="rgb(235,124,12)" fg:x="91" fg:w="14"/><text x="0.4574%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (15 samples, 0.03%)</title><rect x="0.2074%" y="597" width="0.0342%" height="15" fill="rgb(224,169,11)" fg:x="91" fg:w="15"/><text x="0.4574%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.01%)</title><rect x="0.2439%" y="533" width="0.0137%" height="15" fill="rgb(250,166,2)" fg:x="107" fg:w="6"/><text x="0.4939%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (6 samples, 0.01%)</title><rect x="0.2439%" y="517" width="0.0137%" height="15" fill="rgb(242,216,29)" fg:x="107" fg:w="6"/><text x="0.4939%" y="527.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (9 samples, 0.02%)</title><rect x="0.2416%" y="581" width="0.0205%" height="15" fill="rgb(230,116,27)" fg:x="106" fg:w="9"/><text x="0.4916%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (9 samples, 0.02%)</title><rect x="0.2416%" y="565" width="0.0205%" height="15" fill="rgb(228,99,48)" fg:x="106" fg:w="9"/><text x="0.4916%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (9 samples, 0.02%)</title><rect x="0.2416%" y="549" width="0.0205%" height="15" fill="rgb(253,11,6)" fg:x="106" fg:w="9"/><text x="0.4916%" y="559.50"></text></g><g><title>CoreGraphics`RGBAf16_sample_RGBAf_inner(_ImgOp const*, long, long, int) (6 samples, 0.01%)</title><rect x="0.2803%" y="101" width="0.0137%" height="15" fill="rgb(247,143,39)" fg:x="123" fg:w="6"/><text x="0.5303%" y="111.50"></text></g><g><title>CoreGraphics`RIPLayerBltImage (8 samples, 0.02%)</title><rect x="0.2803%" y="149" width="0.0182%" height="15" fill="rgb(236,97,10)" fg:x="123" fg:w="8"/><text x="0.5303%" y="159.50"></text></g><g><title>CoreGraphics`ripl_Mark (8 samples, 0.02%)</title><rect x="0.2803%" y="133" width="0.0182%" height="15" fill="rgb(233,208,19)" fg:x="123" fg:w="8"/><text x="0.5303%" y="143.50"></text></g><g><title>CoreGraphics`RGBAf16_image (8 samples, 0.02%)</title><rect x="0.2803%" y="117" width="0.0182%" height="15" fill="rgb(216,164,2)" fg:x="123" fg:w="8"/><text x="0.5303%" y="127.50"></text></g><g><title>AppKit`-[NSApplication _setApplicationIconImage:setDockImage:] (12 samples, 0.03%)</title><rect x="0.2803%" y="341" width="0.0273%" height="15" fill="rgb(220,129,5)" fg:x="123" fg:w="12"/><text x="0.5303%" y="351.50"></text></g><g><title>AppKit`-[NSApplication _updateIconImageFromOriginal] (12 samples, 0.03%)</title><rect x="0.2803%" y="325" width="0.0273%" height="15" fill="rgb(242,17,10)" fg:x="123" fg:w="12"/><text x="0.5303%" y="335.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (12 samples, 0.03%)</title><rect x="0.2803%" y="309" width="0.0273%" height="15" fill="rgb(242,107,0)" fg:x="123" fg:w="12"/><text x="0.5303%" y="319.50"></text></g><g><title>AppKit`__45-[NSApplication _updateIconImageFromOriginal]_block_invoke (12 samples, 0.03%)</title><rect x="0.2803%" y="293" width="0.0273%" height="15" fill="rgb(251,28,31)" fg:x="123" fg:w="12"/><text x="0.5303%" y="303.50"></text></g><g><title>AppKit`-[NSImage drawAtPoint:fromRect:operation:fraction:] (12 samples, 0.03%)</title><rect x="0.2803%" y="277" width="0.0273%" height="15" fill="rgb(233,223,10)" fg:x="123" fg:w="12"/><text x="0.5303%" y="287.50"></text></g><g><title>AppKit`-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (12 samples, 0.03%)</title><rect x="0.2803%" y="261" width="0.0273%" height="15" fill="rgb(215,21,27)" fg:x="123" fg:w="12"/><text x="0.5303%" y="271.50"></text></g><g><title>AppKit`-[NSImage _usingBestRepresentationForRect:context:hints:body:] (12 samples, 0.03%)</title><rect x="0.2803%" y="245" width="0.0273%" height="15" fill="rgb(232,23,21)" fg:x="123" fg:w="12"/><text x="0.5303%" y="255.50"></text></g><g><title>AppKit`__71-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke.1386 (12 samples, 0.03%)</title><rect x="0.2803%" y="229" width="0.0273%" height="15" fill="rgb(244,5,23)" fg:x="123" fg:w="12"/><text x="0.5303%" y="239.50"></text></g><g><title>AppKit`-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (12 samples, 0.03%)</title><rect x="0.2803%" y="213" width="0.0273%" height="15" fill="rgb(226,81,46)" fg:x="123" fg:w="12"/><text x="0.5303%" y="223.50"></text></g><g><title>AppKit`__74-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke (12 samples, 0.03%)</title><rect x="0.2803%" y="197" width="0.0273%" height="15" fill="rgb(247,70,30)" fg:x="123" fg:w="12"/><text x="0.5303%" y="207.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (12 samples, 0.03%)</title><rect x="0.2803%" y="181" width="0.0273%" height="15" fill="rgb(212,68,19)" fg:x="123" fg:w="12"/><text x="0.5303%" y="191.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (12 samples, 0.03%)</title><rect x="0.2803%" y="165" width="0.0273%" height="15" fill="rgb(240,187,13)" fg:x="123" fg:w="12"/><text x="0.5303%" y="175.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (6 samples, 0.01%)</title><rect x="0.3077%" y="261" width="0.0137%" height="15" fill="rgb(223,113,26)" fg:x="135" fg:w="6"/><text x="0.5577%" y="271.50"></text></g><g><title>AppKit`-[NSView _renderLayerInContext:] (6 samples, 0.01%)</title><rect x="0.3077%" y="245" width="0.0137%" height="15" fill="rgb(206,192,2)" fg:x="135" fg:w="6"/><text x="0.5577%" y="255.50"></text></g><g><title>QuartzCore`-[CALayer renderInContext:] (6 samples, 0.01%)</title><rect x="0.3077%" y="229" width="0.0137%" height="15" fill="rgb(241,108,4)" fg:x="135" fg:w="6"/><text x="0.5577%" y="239.50"></text></g><g><title>QuartzCore`-[CALayer _renderSublayersInContext:] (6 samples, 0.01%)</title><rect x="0.3077%" y="213" width="0.0137%" height="15" fill="rgb(247,173,49)" fg:x="135" fg:w="6"/><text x="0.5577%" y="223.50"></text></g><g><title>QuartzCore`-[CALayer renderInContext:] (6 samples, 0.01%)</title><rect x="0.3077%" y="197" width="0.0137%" height="15" fill="rgb(224,114,35)" fg:x="135" fg:w="6"/><text x="0.5577%" y="207.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer _renderForegroundInContext:] (6 samples, 0.01%)</title><rect x="0.3077%" y="181" width="0.0137%" height="15" fill="rgb(245,159,27)" fg:x="135" fg:w="6"/><text x="0.5577%" y="191.50"></text></g><g><title>QuartzCore`-[CALayer _renderForegroundInContext:] (6 samples, 0.01%)</title><rect x="0.3077%" y="165" width="0.0137%" height="15" fill="rgb(245,172,44)" fg:x="135" fg:w="6"/><text x="0.5577%" y="175.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (6 samples, 0.01%)</title><rect x="0.3077%" y="149" width="0.0137%" height="15" fill="rgb(236,23,11)" fg:x="135" fg:w="6"/><text x="0.5577%" y="159.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (6 samples, 0.01%)</title><rect x="0.3077%" y="133" width="0.0137%" height="15" fill="rgb(205,117,38)" fg:x="135" fg:w="6"/><text x="0.5577%" y="143.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (6 samples, 0.01%)</title><rect x="0.3077%" y="117" width="0.0137%" height="15" fill="rgb(237,72,25)" fg:x="135" fg:w="6"/><text x="0.5577%" y="127.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (6 samples, 0.01%)</title><rect x="0.3077%" y="101" width="0.0137%" height="15" fill="rgb(244,70,9)" fg:x="135" fg:w="6"/><text x="0.5577%" y="111.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (6 samples, 0.01%)</title><rect x="0.3077%" y="85" width="0.0137%" height="15" fill="rgb(217,125,39)" fg:x="135" fg:w="6"/><text x="0.5577%" y="95.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (6 samples, 0.01%)</title><rect x="0.3077%" y="69" width="0.0137%" height="15" fill="rgb(235,36,10)" fg:x="135" fg:w="6"/><text x="0.5577%" y="79.50"></text></g><g><title>CoreGraphics`img_data_lock (6 samples, 0.01%)</title><rect x="0.3077%" y="53" width="0.0137%" height="15" fill="rgb(251,123,47)" fg:x="135" fg:w="6"/><text x="0.5577%" y="63.50"></text></g><g><title>CoreGraphics`img_interpolate_read (6 samples, 0.01%)</title><rect x="0.3077%" y="37" width="0.0137%" height="15" fill="rgb(221,13,13)" fg:x="135" fg:w="6"/><text x="0.5577%" y="47.50"></text></g><g><title>AppKit`-[NSDockTile display] (7 samples, 0.02%)</title><rect x="0.3077%" y="341" width="0.0160%" height="15" fill="rgb(238,131,9)" fg:x="135" fg:w="7"/><text x="0.5577%" y="351.50"></text></g><g><title>AppKit`-[NSView displayRectIgnoringOpacity:inContext:] (7 samples, 0.02%)</title><rect x="0.3077%" y="325" width="0.0160%" height="15" fill="rgb(211,50,8)" fg:x="135" fg:w="7"/><text x="0.5577%" y="335.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (7 samples, 0.02%)</title><rect x="0.3077%" y="309" width="0.0160%" height="15" fill="rgb(245,182,24)" fg:x="135" fg:w="7"/><text x="0.5577%" y="319.50"></text></g><g><title>AppKit`__47-[NSView displayRectIgnoringOpacity:inContext:]_block_invoke (7 samples, 0.02%)</title><rect x="0.3077%" y="293" width="0.0160%" height="15" fill="rgb(242,14,37)" fg:x="135" fg:w="7"/><text x="0.5577%" y="303.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (7 samples, 0.02%)</title><rect x="0.3077%" y="277" width="0.0160%" height="15" fill="rgb(246,228,12)" fg:x="135" fg:w="7"/><text x="0.5577%" y="287.50"></text></g><g><title>eguitty`eframe::native::app_icon::AppTitleIconSetter::update (22 samples, 0.05%)</title><rect x="0.2803%" y="357" width="0.0501%" height="15" fill="rgb(213,55,15)" fg:x="123" fg:w="22"/><text x="0.5303%" y="367.50"></text></g><g><title>libsystem_c.dylib`fork (9 samples, 0.02%)</title><rect x="0.3327%" y="85" width="0.0205%" height="15" fill="rgb(209,9,3)" fg:x="146" fg:w="9"/><text x="0.5827%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__fork (8 samples, 0.02%)</title><rect x="0.3350%" y="69" width="0.0182%" height="15" fill="rgb(230,59,30)" fg:x="147" fg:w="8"/><text x="0.5850%" y="79.50"></text></g><g><title>eguitty`&lt;eguitty::app::App as eframe::epi::App&gt;::update (12 samples, 0.03%)</title><rect x="0.3305%" y="341" width="0.0273%" height="15" fill="rgb(209,121,21)" fg:x="145" fg:w="12"/><text x="0.5805%" y="351.50"></text></g><g><title>eguitty`egui::containers::panel::CentralPanel::show_dyn (12 samples, 0.03%)</title><rect x="0.3305%" y="325" width="0.0273%" height="15" fill="rgb(220,109,13)" fg:x="145" fg:w="12"/><text x="0.5805%" y="335.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.03%)</title><rect x="0.3305%" y="309" width="0.0273%" height="15" fill="rgb(232,18,1)" fg:x="145" fg:w="12"/><text x="0.5805%" y="319.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.03%)</title><rect x="0.3305%" y="293" width="0.0273%" height="15" fill="rgb(215,41,42)" fg:x="145" fg:w="12"/><text x="0.5805%" y="303.50"></text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_inside (12 samples, 0.03%)</title><rect x="0.3305%" y="277" width="0.0273%" height="15" fill="rgb(224,123,36)" fg:x="145" fg:w="12"/><text x="0.5805%" y="287.50"></text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::render_nodes (12 samples, 0.03%)</title><rect x="0.3305%" y="261" width="0.0273%" height="15" fill="rgb(240,125,3)" fg:x="145" fg:w="12"/><text x="0.5805%" y="271.50"></text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::leaf::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_leaf (12 samples, 0.03%)</title><rect x="0.3305%" y="245" width="0.0273%" height="15" fill="rgb(205,98,50)" fg:x="145" fg:w="12"/><text x="0.5805%" y="255.50"></text></g><g><title>eguitty`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (12 samples, 0.03%)</title><rect x="0.3305%" y="229" width="0.0273%" height="15" fill="rgb(205,185,37)" fg:x="145" fg:w="12"/><text x="0.5805%" y="239.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.03%)</title><rect x="0.3305%" y="213" width="0.0273%" height="15" fill="rgb(238,207,15)" fg:x="145" fg:w="12"/><text x="0.5805%" y="223.50"></text></g><g><title>eguitty`egui::containers::frame::Frame::show_dyn (12 samples, 0.03%)</title><rect x="0.3305%" y="197" width="0.0273%" height="15" fill="rgb(213,199,42)" fg:x="145" fg:w="12"/><text x="0.5805%" y="207.50"></text></g><g><title>eguitty`&lt;eguitty::app::TabViewer as egui_dock::widgets::tab_viewer::TabViewer&gt;::ui (12 samples, 0.03%)</title><rect x="0.3305%" y="181" width="0.0273%" height="15" fill="rgb(235,201,11)" fg:x="145" fg:w="12"/><text x="0.5805%" y="191.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::new_from_str (11 samples, 0.03%)</title><rect x="0.3327%" y="165" width="0.0251%" height="15" fill="rgb(207,46,11)" fg:x="146" fg:w="11"/><text x="0.5827%" y="175.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::try_new (11 samples, 0.03%)</title><rect x="0.3327%" y="149" width="0.0251%" height="15" fill="rgb(241,35,35)" fg:x="146" fg:w="11"/><text x="0.5827%" y="159.50"></text></g><g><title>eguitty`&lt;portable_pty::unix::UnixSlavePty as portable_pty::SlavePty&gt;::spawn_command (11 samples, 0.03%)</title><rect x="0.3327%" y="133" width="0.0251%" height="15" fill="rgb(243,32,47)" fg:x="146" fg:w="11"/><text x="0.5827%" y="143.50"></text></g><g><title>eguitty`std::process::Command::spawn (11 samples, 0.03%)</title><rect x="0.3327%" y="117" width="0.0251%" height="15" fill="rgb(247,202,23)" fg:x="146" fg:w="11"/><text x="0.5827%" y="127.50"></text></g><g><title>eguitty`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (11 samples, 0.03%)</title><rect x="0.3327%" y="101" width="0.0251%" height="15" fill="rgb(219,102,11)" fg:x="146" fg:w="11"/><text x="0.5827%" y="111.50"></text></g><g><title>eguitty`eframe::native::epi_integration::EpiIntegration::update (14 samples, 0.03%)</title><rect x="0.3305%" y="357" width="0.0319%" height="15" fill="rgb(243,110,44)" fg:x="145" fg:w="14"/><text x="0.5805%" y="367.50"></text></g><g><title>AppKit`-[_NSOpenGLViewBackingLayer display] (48 samples, 0.11%)</title><rect x="0.2780%" y="469" width="0.1094%" height="15" fill="rgb(222,74,54)" fg:x="122" fg:w="48"/><text x="0.5280%" y="479.50"></text></g><g><title>eguitty`winit::platform_impl::platform::view::WinitView::draw_rect (48 samples, 0.11%)</title><rect x="0.2780%" y="453" width="0.1094%" height="15" fill="rgb(216,99,12)" fg:x="122" fg:w="48"/><text x="0.5280%" y="463.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::AppState::handle_redraw (48 samples, 0.11%)</title><rect x="0.2780%" y="437" width="0.1094%" height="15" fill="rgb(226,22,26)" fg:x="122" fg:w="48"/><text x="0.5280%" y="447.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (48 samples, 0.11%)</title><rect x="0.2780%" y="421" width="0.1094%" height="15" fill="rgb(217,163,10)" fg:x="122" fg:w="48"/><text x="0.5280%" y="431.50"></text></g><g><title>eguitty`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (48 samples, 0.11%)</title><rect x="0.2780%" y="405" width="0.1094%" height="15" fill="rgb(213,25,53)" fg:x="122" fg:w="48"/><text x="0.5280%" y="415.50"></text></g><g><title>eguitty`eframe::native::run::run_and_return::_{{closure}} (48 samples, 0.11%)</title><rect x="0.2780%" y="389" width="0.1094%" height="15" fill="rgb(252,105,26)" fg:x="122" fg:w="48"/><text x="0.5280%" y="399.50"></text></g><g><title>eguitty`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (48 samples, 0.11%)</title><rect x="0.2780%" y="373" width="0.1094%" height="15" fill="rgb(220,39,43)" fg:x="122" fg:w="48"/><text x="0.5280%" y="383.50"></text></g><g><title>eguitty`glutin::api::cgl::context::ContextInner::flush_buffer (6 samples, 0.01%)</title><rect x="0.3738%" y="357" width="0.0137%" height="15" fill="rgb(229,68,48)" fg:x="164" fg:w="6"/><text x="0.6238%" y="367.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (6 samples, 0.01%)</title><rect x="0.3738%" y="341" width="0.0137%" height="15" fill="rgb(252,8,32)" fg:x="164" fg:w="6"/><text x="0.6238%" y="351.50"></text></g><g><title>OpenGL`CGLFlushDrawable (6 samples, 0.01%)</title><rect x="0.3738%" y="325" width="0.0137%" height="15" fill="rgb(223,20,43)" fg:x="164" fg:w="6"/><text x="0.6238%" y="335.50"></text></g><g><title>GLEngine`glSwap_Exec (6 samples, 0.01%)</title><rect x="0.3738%" y="309" width="0.0137%" height="15" fill="rgb(229,81,49)" fg:x="164" fg:w="6"/><text x="0.6238%" y="319.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (56 samples, 0.13%)</title><rect x="0.2735%" y="485" width="0.1276%" height="15" fill="rgb(236,28,36)" fg:x="120" fg:w="56"/><text x="0.5235%" y="495.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (6 samples, 0.01%)</title><rect x="0.3874%" y="469" width="0.0137%" height="15" fill="rgb(249,185,26)" fg:x="170" fg:w="6"/><text x="0.6374%" y="479.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (6 samples, 0.01%)</title><rect x="0.3874%" y="453" width="0.0137%" height="15" fill="rgb(249,174,33)" fg:x="170" fg:w="6"/><text x="0.6374%" y="463.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (6 samples, 0.01%)</title><rect x="0.3874%" y="437" width="0.0137%" height="15" fill="rgb(233,201,37)" fg:x="170" fg:w="6"/><text x="0.6374%" y="447.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (6 samples, 0.01%)</title><rect x="0.3874%" y="421" width="0.0137%" height="15" fill="rgb(221,78,26)" fg:x="170" fg:w="6"/><text x="0.6374%" y="431.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (6 samples, 0.01%)</title><rect x="0.3874%" y="405" width="0.0137%" height="15" fill="rgb(250,127,30)" fg:x="170" fg:w="6"/><text x="0.6374%" y="415.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (60 samples, 0.14%)</title><rect x="0.2712%" y="501" width="0.1367%" height="15" fill="rgb(230,49,44)" fg:x="119" fg:w="60"/><text x="0.5212%" y="511.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (64 samples, 0.15%)</title><rect x="0.2712%" y="517" width="0.1459%" height="15" fill="rgb(229,67,23)" fg:x="119" fg:w="64"/><text x="0.5212%" y="527.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (65 samples, 0.15%)</title><rect x="0.2712%" y="533" width="0.1481%" height="15" fill="rgb(249,83,47)" fg:x="119" fg:w="65"/><text x="0.5212%" y="543.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (69 samples, 0.16%)</title><rect x="0.2644%" y="549" width="0.1573%" height="15" fill="rgb(215,43,3)" fg:x="116" fg:w="69"/><text x="0.5144%" y="559.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.01%)</title><rect x="0.4809%" y="197" width="0.0114%" height="15" fill="rgb(238,154,13)" fg:x="211" fg:w="5"/><text x="0.7309%" y="207.50"></text></g><g><title>eguitty`egui::containers::scroll_area::ScrollArea::show_rows (9 samples, 0.02%)</title><rect x="0.4786%" y="213" width="0.0205%" height="15" fill="rgb(219,56,2)" fg:x="210" fg:w="9"/><text x="0.7286%" y="223.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::control (20 samples, 0.05%)</title><rect x="0.5128%" y="181" width="0.0456%" height="15" fill="rgb(233,0,4)" fg:x="225" fg:w="20"/><text x="0.7628%" y="191.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::flush_print (11 samples, 0.03%)</title><rect x="0.5584%" y="181" width="0.0251%" height="15" fill="rgb(235,30,7)" fg:x="245" fg:w="11"/><text x="0.8084%" y="191.50"></text></g><g><title>eguitty`wezterm_term::terminal::Terminal::perform_actions (39 samples, 0.09%)</title><rect x="0.5014%" y="213" width="0.0889%" height="15" fill="rgb(250,79,13)" fg:x="220" fg:w="39"/><text x="0.7514%" y="223.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::perform (38 samples, 0.09%)</title><rect x="0.5037%" y="197" width="0.0866%" height="15" fill="rgb(211,146,34)" fg:x="221" fg:w="38"/><text x="0.7537%" y="207.50"></text></g><g><title>eguitty`&lt;egui::ui::Ui as egui_terminal::prelude::TerminalSpawner&gt;::terminal (55 samples, 0.13%)</title><rect x="0.4672%" y="245" width="0.1253%" height="15" fill="rgb(228,22,38)" fg:x="205" fg:w="55"/><text x="0.7172%" y="255.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::draw (55 samples, 0.13%)</title><rect x="0.4672%" y="229" width="0.1253%" height="15" fill="rgb(235,168,5)" fg:x="205" fg:w="55"/><text x="0.7172%" y="239.50"></text></g><g><title>eguitty`crossbeam_channel::counter::Receiver&lt;C&gt;::release (9 samples, 0.02%)</title><rect x="0.5971%" y="229" width="0.0205%" height="15" fill="rgb(221,155,16)" fg:x="262" fg:w="9"/><text x="0.8471%" y="239.50"></text></g><g><title>eguitty`crossbeam_channel::flavors::list::Channel&lt;T&gt;::disconnect_receivers (9 samples, 0.02%)</title><rect x="0.5971%" y="213" width="0.0205%" height="15" fill="rgb(215,215,53)" fg:x="262" fg:w="9"/><text x="0.8471%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (19 samples, 0.04%)</title><rect x="0.6176%" y="149" width="0.0433%" height="15" fill="rgb(223,4,10)" fg:x="271" fg:w="19"/><text x="0.8676%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (23 samples, 0.05%)</title><rect x="0.6176%" y="165" width="0.0524%" height="15" fill="rgb(234,103,6)" fg:x="271" fg:w="23"/><text x="0.8676%" y="175.50"></text></g><g><title>libsystem_c.dylib`nanosleep (24 samples, 0.05%)</title><rect x="0.6176%" y="181" width="0.0547%" height="15" fill="rgb(227,97,0)" fg:x="271" fg:w="24"/><text x="0.8676%" y="191.50"></text></g><g><title>eguitty`std::thread::sleep (79 samples, 0.18%)</title><rect x="0.6176%" y="197" width="0.1800%" height="15" fill="rgb(234,150,53)" fg:x="271" fg:w="79"/><text x="0.8676%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (55 samples, 0.13%)</title><rect x="0.6723%" y="181" width="0.1253%" height="15" fill="rgb(228,201,54)" fg:x="295" fg:w="55"/><text x="0.9223%" y="191.50"></text></g><g><title>eguitty`&lt;std::process::Child as portable_pty::ChildKiller&gt;::kill (84 samples, 0.19%)</title><rect x="0.6176%" y="213" width="0.1914%" height="15" fill="rgb(222,22,37)" fg:x="271" fg:w="84"/><text x="0.8676%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__wait4 (5 samples, 0.01%)</title><rect x="0.7976%" y="197" width="0.0114%" height="15" fill="rgb(237,53,32)" fg:x="350" fg:w="5"/><text x="1.0476%" y="207.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;egui_terminal::term::TermHandler&gt; (101 samples, 0.23%)</title><rect x="0.5948%" y="245" width="0.2302%" height="15" fill="rgb(233,25,53)" fg:x="261" fg:w="101"/><text x="0.8448%" y="255.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::kill (91 samples, 0.21%)</title><rect x="0.6176%" y="229" width="0.2074%" height="15" fill="rgb(210,40,34)" fg:x="271" fg:w="91"/><text x="0.8676%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__kill (7 samples, 0.02%)</title><rect x="0.8090%" y="213" width="0.0160%" height="15" fill="rgb(241,220,44)" fg:x="355" fg:w="7"/><text x="1.0590%" y="223.50"></text></g><g><title>libsystem_c.dylib`posix_openpt (27 samples, 0.06%)</title><rect x="0.8364%" y="181" width="0.0615%" height="15" fill="rgb(235,28,35)" fg:x="367" fg:w="27"/><text x="1.0864%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (27 samples, 0.06%)</title><rect x="0.8364%" y="165" width="0.0615%" height="15" fill="rgb(210,56,17)" fg:x="367" fg:w="27"/><text x="1.0864%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (13 samples, 0.03%)</title><rect x="0.9048%" y="181" width="0.0296%" height="15" fill="rgb(224,130,29)" fg:x="397" fg:w="13"/><text x="1.1548%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (15 samples, 0.03%)</title><rect x="0.9344%" y="181" width="0.0342%" height="15" fill="rgb(235,212,8)" fg:x="410" fg:w="15"/><text x="1.1844%" y="191.50"></text></g><g><title>eguitty`&lt;portable_pty::unix::UnixPtySystem as portable_pty::PtySystem&gt;::openpty (59 samples, 0.13%)</title><rect x="0.8364%" y="213" width="0.1345%" height="15" fill="rgb(223,33,50)" fg:x="367" fg:w="59"/><text x="1.0864%" y="223.50"></text></g><g><title>libsystem_c.dylib`openpty (59 samples, 0.13%)</title><rect x="0.8364%" y="197" width="0.1345%" height="15" fill="rgb(219,149,13)" fg:x="367" fg:w="59"/><text x="1.0864%" y="207.50"></text></g><g><title>eguitty`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="0.9709%" y="181" width="0.0251%" height="15" fill="rgb(250,156,29)" fg:x="426" fg:w="11"/><text x="1.2209%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.03%)</title><rect x="0.9709%" y="165" width="0.0251%" height="15" fill="rgb(216,193,19)" fg:x="426" fg:w="11"/><text x="1.2209%" y="175.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;std::process::Command&gt; (12 samples, 0.03%)</title><rect x="0.9709%" y="197" width="0.0273%" height="15" fill="rgb(216,135,14)" fg:x="426" fg:w="12"/><text x="1.2209%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`access (5 samples, 0.01%)</title><rect x="1.0005%" y="181" width="0.0114%" height="15" fill="rgb(241,47,5)" fg:x="439" fg:w="5"/><text x="1.2505%" y="191.50"></text></g><g><title>eguitty`portable_pty::cmdbuilder::CommandBuilder::as_command (7 samples, 0.02%)</title><rect x="0.9982%" y="197" width="0.0160%" height="15" fill="rgb(233,42,35)" fg:x="438" fg:w="7"/><text x="1.2482%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_fork_parent (20 samples, 0.05%)</title><rect x="1.0780%" y="133" width="0.0456%" height="15" fill="rgb(231,13,6)" fg:x="473" fg:w="20"/><text x="1.3280%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_force_unlock (17 samples, 0.04%)</title><rect x="1.0848%" y="117" width="0.0387%" height="15" fill="rgb(207,181,40)" fg:x="476" fg:w="17"/><text x="1.3348%" y="127.50"></text></g><g><title>libSystem.B.dylib`libSystem_atfork_parent (25 samples, 0.06%)</title><rect x="1.0711%" y="149" width="0.0570%" height="15" fill="rgb(254,173,49)" fg:x="470" fg:w="25"/><text x="1.3211%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__fork (1,501 samples, 3.42%)</title><rect x="1.1304%" y="149" width="3.4208%" height="15" fill="rgb(221,1,38)" fg:x="496" fg:w="1501"/><text x="1.3804%" y="159.50">lib..</text></g><g><title>libsystem_c.dylib`fork (1,529 samples, 3.48%)</title><rect x="1.0711%" y="165" width="3.4846%" height="15" fill="rgb(206,124,46)" fg:x="470" fg:w="1529"/><text x="1.3211%" y="175.50">lib..</text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="4.5625%" y="165" width="0.0205%" height="15" fill="rgb(249,21,11)" fg:x="2002" fg:w="9"/><text x="4.8125%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="4.5648%" y="149" width="0.0182%" height="15" fill="rgb(222,201,40)" fg:x="2003" fg:w="8"/><text x="4.8148%" y="159.50"></text></g><g><title>eguitty`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (1,569 samples, 3.58%)</title><rect x="1.0142%" y="181" width="3.5757%" height="15" fill="rgb(235,61,29)" fg:x="445" fg:w="1569"/><text x="1.2642%" y="191.50">egui..</text></g><g><title>eguitty`std::process::Command::spawn (1,573 samples, 3.58%)</title><rect x="1.0142%" y="197" width="3.5849%" height="15" fill="rgb(219,207,3)" fg:x="445" fg:w="1573"/><text x="1.2642%" y="207.50">egui..</text></g><g><title>libsystem_kernel.dylib`access (9 samples, 0.02%)</title><rect x="4.5990%" y="197" width="0.0205%" height="15" fill="rgb(222,56,46)" fg:x="2018" fg:w="9"/><text x="4.8490%" y="207.50"></text></g><g><title>eguitty`&lt;portable_pty::unix::UnixSlavePty as portable_pty::SlavePty&gt;::spawn_command (1,603 samples, 3.65%)</title><rect x="0.9709%" y="213" width="3.6532%" height="15" fill="rgb(239,76,54)" fg:x="426" fg:w="1603"/><text x="1.2209%" y="223.50">egui..</text></g><g><title>eguitty`core::ptr::drop_in_place&lt;portable_pty::cmdbuilder::CommandBuilder&gt; (6 samples, 0.01%)</title><rect x="4.6264%" y="213" width="0.0137%" height="15" fill="rgb(231,124,27)" fg:x="2030" fg:w="6"/><text x="4.8764%" y="223.50"></text></g><g><title>eguitty`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="4.6264%" y="197" width="0.0137%" height="15" fill="rgb(249,195,6)" fg:x="2030" fg:w="6"/><text x="4.8764%" y="207.50"></text></g><g><title>eguitty`std::thread::spawn (11 samples, 0.03%)</title><rect x="4.6423%" y="213" width="0.0251%" height="15" fill="rgb(237,174,47)" fg:x="2037" fg:w="11"/><text x="4.8923%" y="223.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new (11 samples, 0.03%)</title><rect x="4.6423%" y="197" width="0.0251%" height="15" fill="rgb(206,201,31)" fg:x="2037" fg:w="11"/><text x="4.8923%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (8 samples, 0.02%)</title><rect x="4.6491%" y="181" width="0.0182%" height="15" fill="rgb(231,57,52)" fg:x="2040" fg:w="8"/><text x="4.8991%" y="191.50"></text></g><g><title>eguitty`__rdl_alloc (12 samples, 0.03%)</title><rect x="4.6719%" y="181" width="0.0273%" height="15" fill="rgb(248,177,22)" fg:x="2050" fg:w="12"/><text x="4.9219%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (12 samples, 0.03%)</title><rect x="4.6719%" y="165" width="0.0273%" height="15" fill="rgb(215,211,37)" fg:x="2050" fg:w="12"/><text x="4.9219%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (12 samples, 0.03%)</title><rect x="4.6719%" y="149" width="0.0273%" height="15" fill="rgb(241,128,51)" fg:x="2050" fg:w="12"/><text x="4.9219%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (11 samples, 0.03%)</title><rect x="4.6742%" y="133" width="0.0251%" height="15" fill="rgb(227,165,31)" fg:x="2051" fg:w="11"/><text x="4.9242%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="4.6765%" y="117" width="0.0228%" height="15" fill="rgb(228,167,24)" fg:x="2052" fg:w="10"/><text x="4.9265%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="4.6765%" y="101" width="0.0228%" height="15" fill="rgb(228,143,12)" fg:x="2052" fg:w="10"/><text x="4.9265%" y="111.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new (19 samples, 0.04%)</title><rect x="4.7016%" y="165" width="0.0433%" height="15" fill="rgb(249,149,8)" fg:x="2063" fg:w="19"/><text x="4.9516%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (17 samples, 0.04%)</title><rect x="4.7061%" y="149" width="0.0387%" height="15" fill="rgb(243,35,44)" fg:x="2065" fg:w="17"/><text x="4.9561%" y="159.50"></text></g><g><title>eguitty`std::thread::spawn (27 samples, 0.06%)</title><rect x="4.7016%" y="181" width="0.0615%" height="15" fill="rgb(246,89,9)" fg:x="2063" fg:w="27"/><text x="4.9516%" y="191.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::default_color_map (13 samples, 0.03%)</title><rect x="4.7745%" y="181" width="0.0296%" height="15" fill="rgb(233,213,13)" fg:x="2095" fg:w="13"/><text x="5.0245%" y="191.50"></text></g><g><title>eguitty`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="4.7904%" y="165" width="0.0137%" height="15" fill="rgb(233,141,41)" fg:x="2102" fg:w="6"/><text x="5.0404%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="4.8155%" y="133" width="0.0114%" height="15" fill="rgb(239,167,4)" fg:x="2113" fg:w="5"/><text x="5.0655%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="4.8087%" y="181" width="0.0205%" height="15" fill="rgb(209,217,16)" fg:x="2110" fg:w="9"/><text x="5.0587%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.02%)</title><rect x="4.8087%" y="165" width="0.0205%" height="15" fill="rgb(219,88,35)" fg:x="2110" fg:w="9"/><text x="5.0587%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.02%)</title><rect x="4.8087%" y="149" width="0.0205%" height="15" fill="rgb(220,193,23)" fg:x="2110" fg:w="9"/><text x="5.0587%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="4.8292%" y="181" width="0.0319%" height="15" fill="rgb(230,90,52)" fg:x="2119" fg:w="14"/><text x="5.0792%" y="191.50"></text></g><g><title>eguitty`wezterm_term::terminal::Terminal::new (91 samples, 0.21%)</title><rect x="4.6674%" y="213" width="0.2074%" height="15" fill="rgb(252,106,19)" fg:x="2048" fg:w="91"/><text x="4.9174%" y="223.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::TerminalState::new (90 samples, 0.21%)</title><rect x="4.6697%" y="197" width="0.2051%" height="15" fill="rgb(206,74,20)" fg:x="2049" fg:w="90"/><text x="4.9197%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (6 samples, 0.01%)</title><rect x="4.8611%" y="181" width="0.0137%" height="15" fill="rgb(230,138,44)" fg:x="2133" fg:w="6"/><text x="5.1111%" y="191.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::try_new (1,784 samples, 4.07%)</title><rect x="0.8250%" y="229" width="4.0657%" height="15" fill="rgb(235,182,43)" fg:x="362" fg:w="1784"/><text x="1.0750%" y="239.50">egui..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="4.8748%" y="213" width="0.0160%" height="15" fill="rgb(242,16,51)" fg:x="2139" fg:w="7"/><text x="5.1248%" y="223.50"></text></g><g><title>libsystem_c.dylib`fopen (22 samples, 0.05%)</title><rect x="4.8998%" y="149" width="0.0501%" height="15" fill="rgb(248,9,4)" fg:x="2150" fg:w="22"/><text x="5.1498%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (22 samples, 0.05%)</title><rect x="4.8998%" y="133" width="0.0501%" height="15" fill="rgb(210,31,22)" fg:x="2150" fg:w="22"/><text x="5.1498%" y="143.50"></text></g><g><title>eguitty`portable_pty::cmdbuilder::get_shell (32 samples, 0.07%)</title><rect x="4.8953%" y="197" width="0.0729%" height="15" fill="rgb(239,54,39)" fg:x="2148" fg:w="32"/><text x="5.1453%" y="207.50"></text></g><g><title>libsystem_info.dylib`getpwuid (32 samples, 0.07%)</title><rect x="4.8953%" y="181" width="0.0729%" height="15" fill="rgb(230,99,41)" fg:x="2148" fg:w="32"/><text x="5.1453%" y="191.50"></text></g><g><title>libsystem_info.dylib`_fsi_get_user (31 samples, 0.07%)</title><rect x="4.8976%" y="165" width="0.0706%" height="15" fill="rgb(253,106,12)" fg:x="2149" fg:w="31"/><text x="5.1476%" y="175.50"></text></g><g><title>eguitty`portable_pty::cmdbuilder::CommandBuilder::new (35 samples, 0.08%)</title><rect x="4.8907%" y="229" width="0.0798%" height="15" fill="rgb(213,46,41)" fg:x="2146" fg:w="35"/><text x="5.1407%" y="239.50"></text></g><g><title>eguitty`portable_pty::cmdbuilder::get_base_env (35 samples, 0.08%)</title><rect x="4.8907%" y="213" width="0.0798%" height="15" fill="rgb(215,133,35)" fg:x="2146" fg:w="35"/><text x="5.1407%" y="223.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::new_from_str (1,821 samples, 4.15%)</title><rect x="0.8250%" y="245" width="4.1500%" height="15" fill="rgb(213,28,5)" fg:x="362" fg:w="1821"/><text x="1.0750%" y="255.50">eguit..</text></g><g><title>eguitty`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (1,982 samples, 4.52%)</title><rect x="0.4649%" y="309" width="4.5170%" height="15" fill="rgb(215,77,49)" fg:x="204" fg:w="1982"/><text x="0.7149%" y="319.50">eguit..</text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,982 samples, 4.52%)</title><rect x="0.4649%" y="293" width="4.5170%" height="15" fill="rgb(248,100,22)" fg:x="204" fg:w="1982"/><text x="0.7149%" y="303.50">eguit..</text></g><g><title>eguitty`egui::containers::frame::Frame::show_dyn (1,982 samples, 4.52%)</title><rect x="0.4649%" y="277" width="4.5170%" height="15" fill="rgb(208,67,9)" fg:x="204" fg:w="1982"/><text x="0.7149%" y="287.50">eguit..</text></g><g><title>eguitty`&lt;eguitty::app::TabViewer as egui_dock::widgets::tab_viewer::TabViewer&gt;::ui (1,982 samples, 4.52%)</title><rect x="0.4649%" y="261" width="4.5170%" height="15" fill="rgb(219,133,21)" fg:x="204" fg:w="1982"/><text x="0.7149%" y="271.50">eguit..</text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::leaf::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_leaf (1,991 samples, 4.54%)</title><rect x="0.4535%" y="325" width="4.5375%" height="15" fill="rgb(246,46,29)" fg:x="199" fg:w="1991"/><text x="0.7035%" y="335.50">eguit..</text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::render_nodes (1,994 samples, 4.54%)</title><rect x="0.4512%" y="341" width="4.5443%" height="15" fill="rgb(246,185,52)" fg:x="198" fg:w="1994"/><text x="0.7012%" y="351.50">eguit..</text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,996 samples, 4.55%)</title><rect x="0.4490%" y="389" width="4.5489%" height="15" fill="rgb(252,136,11)" fg:x="197" fg:w="1996"/><text x="0.6990%" y="399.50">eguit..</text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,996 samples, 4.55%)</title><rect x="0.4490%" y="373" width="4.5489%" height="15" fill="rgb(219,138,53)" fg:x="197" fg:w="1996"/><text x="0.6990%" y="383.50">eguit..</text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_inside (1,996 samples, 4.55%)</title><rect x="0.4490%" y="357" width="4.5489%" height="15" fill="rgb(211,51,23)" fg:x="197" fg:w="1996"/><text x="0.6990%" y="367.50">eguit..</text></g><g><title>eguitty`egui::containers::panel::CentralPanel::show_dyn (1,997 samples, 4.55%)</title><rect x="0.4490%" y="405" width="4.5512%" height="15" fill="rgb(247,221,28)" fg:x="197" fg:w="1997"/><text x="0.6990%" y="415.50">eguit..</text></g><g><title>eguitty`&lt;eguitty::app::App as eframe::epi::App&gt;::update (1,998 samples, 4.55%)</title><rect x="0.4490%" y="421" width="4.5534%" height="15" fill="rgb(251,222,45)" fg:x="197" fg:w="1998"/><text x="0.6990%" y="431.50">eguit..</text></g><g><title>eguitty`eframe::native::epi_integration::EpiIntegration::update (2,004 samples, 4.57%)</title><rect x="0.4490%" y="437" width="4.5671%" height="15" fill="rgb(217,162,53)" fg:x="197" fg:w="2004"/><text x="0.6990%" y="447.50">eguit..</text></g><g><title>AppKit`-[NSCGLSurface colorSpace] (5 samples, 0.01%)</title><rect x="5.0229%" y="373" width="0.0114%" height="15" fill="rgb(229,93,14)" fg:x="2204" fg:w="5"/><text x="5.2729%" y="383.50"></text></g><g><title>SkyLight`SLSCopySurfaceColorSpace (5 samples, 0.01%)</title><rect x="5.0229%" y="357" width="0.0114%" height="15" fill="rgb(209,67,49)" fg:x="2204" fg:w="5"/><text x="5.2729%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.01%)</title><rect x="5.0229%" y="341" width="0.0114%" height="15" fill="rgb(213,87,29)" fg:x="2204" fg:w="5"/><text x="5.2729%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.01%)</title><rect x="5.0229%" y="325" width="0.0114%" height="15" fill="rgb(205,151,52)" fg:x="2204" fg:w="5"/><text x="5.2729%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="5.0229%" y="309" width="0.0114%" height="15" fill="rgb(253,215,39)" fg:x="2204" fg:w="5"/><text x="5.2729%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalGLDrawable lookupIOSurfaceAtIndex:] (40 samples, 0.09%)</title><rect x="5.0457%" y="293" width="0.0912%" height="15" fill="rgb(221,220,41)" fg:x="2214" fg:w="40"/><text x="5.2957%" y="303.50"></text></g><g><title>IOGPU`IOGPUGLDrawableLookupIOSurfaceFromIndex (40 samples, 0.09%)</title><rect x="5.0457%" y="277" width="0.0912%" height="15" fill="rgb(218,133,21)" fg:x="2214" fg:w="40"/><text x="5.2957%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (35 samples, 0.08%)</title><rect x="5.0571%" y="261" width="0.0798%" height="15" fill="rgb(221,193,43)" fg:x="2219" fg:w="35"/><text x="5.3071%" y="271.50"></text></g><g><title>SkyLight`_CGSBindSurface (8 samples, 0.02%)</title><rect x="5.1528%" y="261" width="0.0182%" height="15" fill="rgb(240,128,52)" fg:x="2261" fg:w="8"/><text x="5.4028%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (8 samples, 0.02%)</title><rect x="5.1528%" y="245" width="0.0182%" height="15" fill="rgb(253,114,12)" fg:x="2261" fg:w="8"/><text x="5.4028%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (8 samples, 0.02%)</title><rect x="5.1528%" y="229" width="0.0182%" height="15" fill="rgb(215,223,47)" fg:x="2261" fg:w="8"/><text x="5.4028%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.02%)</title><rect x="5.1528%" y="213" width="0.0182%" height="15" fill="rgb(248,225,23)" fg:x="2261" fg:w="8"/><text x="5.4028%" y="223.50"></text></g><g><title>SkyLight`SLSBindSurface (11 samples, 0.03%)</title><rect x="5.1482%" y="277" width="0.0251%" height="15" fill="rgb(250,108,0)" fg:x="2259" fg:w="11"/><text x="5.3982%" y="287.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRDrawable::attachDrawable (62 samples, 0.14%)</title><rect x="5.0366%" y="309" width="0.1413%" height="15" fill="rgb(228,208,7)" fg:x="2210" fg:w="62"/><text x="5.2866%" y="319.50"></text></g><g><title>OpenGL`0x00000002007bfd84 (13 samples, 0.03%)</title><rect x="5.1482%" y="293" width="0.0296%" height="15" fill="rgb(244,45,10)" fg:x="2259" fg:w="13"/><text x="5.3982%" y="303.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (72 samples, 0.16%)</title><rect x="5.0229%" y="389" width="0.1641%" height="15" fill="rgb(207,125,25)" fg:x="2204" fg:w="72"/><text x="5.2729%" y="399.50"></text></g><g><title>OpenGL`CGLSetVirtualScreen (66 samples, 0.15%)</title><rect x="5.0366%" y="373" width="0.1504%" height="15" fill="rgb(210,195,18)" fg:x="2210" fg:w="66"/><text x="5.2866%" y="383.50"></text></g><g><title>OpenGL`0x00000002007c03e4 (66 samples, 0.15%)</title><rect x="5.0366%" y="357" width="0.1504%" height="15" fill="rgb(249,80,12)" fg:x="2210" fg:w="66"/><text x="5.2866%" y="367.50"></text></g><g><title>GLEngine`gliAttachDrawableWithOptions (66 samples, 0.15%)</title><rect x="5.0366%" y="341" width="0.1504%" height="15" fill="rgb(221,65,9)" fg:x="2210" fg:w="66"/><text x="5.2866%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldAttachDrawable (66 samples, 0.15%)</title><rect x="5.0366%" y="325" width="0.1504%" height="15" fill="rgb(235,49,36)" fg:x="2210" fg:w="66"/><text x="5.2866%" y="335.50"></text></g><g><title>eguitty`&lt;glutin::api::cgl::context::NotCurrentContext as glutin::context::NotCurrentGlContext&gt;::make_current (74 samples, 0.17%)</title><rect x="5.0206%" y="421" width="0.1686%" height="15" fill="rgb(225,32,20)" fg:x="2203" fg:w="74"/><text x="5.2706%" y="431.50"></text></g><g><title>AppKit`-[NSOpenGLContext update] (74 samples, 0.17%)</title><rect x="5.0206%" y="405" width="0.1686%" height="15" fill="rgb(215,141,46)" fg:x="2203" fg:w="74"/><text x="5.2706%" y="415.50"></text></g><g><title>IOSurface`-[IOSurface initWithMachPort:] (5 samples, 0.01%)</title><rect x="5.2531%" y="261" width="0.0114%" height="15" fill="rgb(250,160,47)" fg:x="2305" fg:w="5"/><text x="5.5031%" y="271.50"></text></g><g><title>IOSurface`IOSurfaceClientLookupFromMachPort (5 samples, 0.01%)</title><rect x="5.2531%" y="245" width="0.0114%" height="15" fill="rgb(216,222,40)" fg:x="2305" fg:w="5"/><text x="5.5031%" y="255.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.01%)</title><rect x="5.2531%" y="229" width="0.0114%" height="15" fill="rgb(234,217,39)" fg:x="2305" fg:w="5"/><text x="5.5031%" y="239.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.01%)</title><rect x="5.2531%" y="213" width="0.0114%" height="15" fill="rgb(207,178,40)" fg:x="2305" fg:w="5"/><text x="5.5031%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="5.2531%" y="197" width="0.0114%" height="15" fill="rgb(221,136,13)" fg:x="2305" fg:w="5"/><text x="5.5031%" y="207.50"></text></g><g><title>IOGPU`-[IOGPUMetalGLDrawable lookupIOSurfaceAtIndex:] (43 samples, 0.10%)</title><rect x="5.2462%" y="293" width="0.0980%" height="15" fill="rgb(249,199,10)" fg:x="2302" fg:w="43"/><text x="5.4962%" y="303.50"></text></g><g><title>IOGPU`IOGPUGLDrawableLookupIOSurfaceFromIndex (43 samples, 0.10%)</title><rect x="5.2462%" y="277" width="0.0980%" height="15" fill="rgb(249,222,13)" fg:x="2302" fg:w="43"/><text x="5.4962%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (35 samples, 0.08%)</title><rect x="5.2645%" y="261" width="0.0798%" height="15" fill="rgb(244,185,38)" fg:x="2310" fg:w="35"/><text x="5.5145%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalGLDrawable setDrawableSurface:mode:colorDepthMode:face:level:volatile:fixedSource:scaleOptions:scaledWidth:scaledHeight:] (5 samples, 0.01%)</title><rect x="5.3442%" y="293" width="0.0114%" height="15" fill="rgb(236,202,9)" fg:x="2345" fg:w="5"/><text x="5.5942%" y="303.50"></text></g><g><title>IOGPU`IOGPUGLDrawableSetDrawable (5 samples, 0.01%)</title><rect x="5.3442%" y="277" width="0.0114%" height="15" fill="rgb(250,229,37)" fg:x="2345" fg:w="5"/><text x="5.5942%" y="287.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (5 samples, 0.01%)</title><rect x="5.3442%" y="261" width="0.0114%" height="15" fill="rgb(206,174,23)" fg:x="2345" fg:w="5"/><text x="5.5942%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.01%)</title><rect x="5.3442%" y="245" width="0.0114%" height="15" fill="rgb(211,33,43)" fg:x="2345" fg:w="5"/><text x="5.5942%" y="255.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.01%)</title><rect x="5.3442%" y="229" width="0.0114%" height="15" fill="rgb(245,58,50)" fg:x="2345" fg:w="5"/><text x="5.5942%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="5.3442%" y="213" width="0.0114%" height="15" fill="rgb(244,68,36)" fg:x="2345" fg:w="5"/><text x="5.5942%" y="223.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRDrawable::attachDrawable (69 samples, 0.16%)</title><rect x="5.2166%" y="309" width="0.1573%" height="15" fill="rgb(232,229,15)" fg:x="2289" fg:w="69"/><text x="5.4666%" y="319.50"></text></g><g><title>AGXMetalG13X`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::FramebufferGen3_2 (7 samples, 0.02%)</title><rect x="5.3875%" y="245" width="0.0160%" height="15" fill="rgb(254,30,23)" fg:x="2364" fg:w="7"/><text x="5.6375%" y="255.50"></text></g><g><title>AGXMetalG13X`AGX::Framebuffer&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::Framebuffer (7 samples, 0.02%)</title><rect x="5.3875%" y="229" width="0.0160%" height="15" fill="rgb(235,160,14)" fg:x="2364" fg:w="7"/><text x="5.6375%" y="239.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::beginRenderPass (8 samples, 0.02%)</title><rect x="5.4035%" y="245" width="0.0182%" height="15" fill="rgb(212,155,44)" fg:x="2371" fg:w="8"/><text x="5.6535%" y="255.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (21 samples, 0.05%)</title><rect x="5.3807%" y="261" width="0.0479%" height="15" fill="rgb(226,2,50)" fg:x="2361" fg:w="21"/><text x="5.6307%" y="271.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (25 samples, 0.06%)</title><rect x="5.3807%" y="277" width="0.0570%" height="15" fill="rgb(234,177,6)" fg:x="2361" fg:w="25"/><text x="5.6307%" y="287.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (6 samples, 0.01%)</title><rect x="5.4400%" y="229" width="0.0137%" height="15" fill="rgb(217,24,9)" fg:x="2387" fg:w="6"/><text x="5.6900%" y="239.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (6 samples, 0.01%)</title><rect x="5.4400%" y="213" width="0.0137%" height="15" fill="rgb(220,13,46)" fg:x="2387" fg:w="6"/><text x="5.6900%" y="223.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (6 samples, 0.01%)</title><rect x="5.4400%" y="197" width="0.0137%" height="15" fill="rgb(239,221,27)" fg:x="2387" fg:w="6"/><text x="5.6900%" y="207.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (9 samples, 0.02%)</title><rect x="5.4400%" y="245" width="0.0205%" height="15" fill="rgb(222,198,25)" fg:x="2387" fg:w="9"/><text x="5.6900%" y="255.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::buildRenderPassDescriptor (10 samples, 0.02%)</title><rect x="5.4400%" y="277" width="0.0228%" height="15" fill="rgb(211,99,13)" fg:x="2387" fg:w="10"/><text x="5.6900%" y="287.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal setTexture:] (10 samples, 0.02%)</title><rect x="5.4400%" y="261" width="0.0228%" height="15" fill="rgb(232,111,31)" fg:x="2387" fg:w="10"/><text x="5.6900%" y="271.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (37 samples, 0.08%)</title><rect x="5.3807%" y="293" width="0.0843%" height="15" fill="rgb(245,82,37)" fg:x="2361" fg:w="37"/><text x="5.6307%" y="303.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (124 samples, 0.28%)</title><rect x="5.1915%" y="389" width="0.2826%" height="15" fill="rgb(227,149,46)" fg:x="2278" fg:w="124"/><text x="5.4415%" y="399.50"></text></g><g><title>OpenGL`CGLSetVirtualScreen (121 samples, 0.28%)</title><rect x="5.1984%" y="373" width="0.2758%" height="15" fill="rgb(218,36,50)" fg:x="2281" fg:w="121"/><text x="5.4484%" y="383.50"></text></g><g><title>OpenGL`0x00000002007c03e4 (121 samples, 0.28%)</title><rect x="5.1984%" y="357" width="0.2758%" height="15" fill="rgb(226,80,48)" fg:x="2281" fg:w="121"/><text x="5.4484%" y="367.50"></text></g><g><title>GLEngine`gliAttachDrawableWithOptions (121 samples, 0.28%)</title><rect x="5.1984%" y="341" width="0.2758%" height="15" fill="rgb(238,224,15)" fg:x="2281" fg:w="121"/><text x="5.4484%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldAttachDrawable (121 samples, 0.28%)</title><rect x="5.1984%" y="325" width="0.2758%" height="15" fill="rgb(241,136,10)" fg:x="2281" fg:w="121"/><text x="5.4484%" y="335.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDrawFramebuffer (43 samples, 0.10%)</title><rect x="5.3761%" y="309" width="0.0980%" height="15" fill="rgb(208,32,45)" fg:x="2359" fg:w="43"/><text x="5.6261%" y="319.50"></text></g><g><title>AppKit`-[NSOpenGLContext update] (128 samples, 0.29%)</title><rect x="5.1893%" y="405" width="0.2917%" height="15" fill="rgb(207,135,9)" fg:x="2277" fg:w="128"/><text x="5.4393%" y="415.50"></text></g><g><title>eguitty`eframe::native::glow_integration::change_gl_context (205 samples, 0.47%)</title><rect x="5.0183%" y="437" width="0.4672%" height="15" fill="rgb(206,86,44)" fg:x="2202" fg:w="205"/><text x="5.2683%" y="447.50"></text></g><g><title>eguitty`&lt;glutin::context::PossiblyCurrentContext as glutin::context::PossiblyCurrentGlContext&gt;::make_not_current (130 samples, 0.30%)</title><rect x="5.1893%" y="421" width="0.2963%" height="15" fill="rgb(245,177,15)" fg:x="2277" fg:w="130"/><text x="5.4393%" y="431.50"></text></g><g><title>GLEngine`glBufferData_Exec (8 samples, 0.02%)</title><rect x="5.5015%" y="389" width="0.0182%" height="15" fill="rgb(206,64,50)" fg:x="2414" fg:w="8"/><text x="5.7515%" y="399.50"></text></g><g><title>GLEngine`gleAcquireBufferData (5 samples, 0.01%)</title><rect x="5.5083%" y="373" width="0.0114%" height="15" fill="rgb(234,36,40)" fg:x="2417" fg:w="5"/><text x="5.7583%" y="383.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (6 samples, 0.01%)</title><rect x="5.5197%" y="373" width="0.0137%" height="15" fill="rgb(213,64,8)" fg:x="2422" fg:w="6"/><text x="5.7697%" y="383.50"></text></g><g><title>GLEngine`glDrawElements_ACC_GL3Exec (13 samples, 0.03%)</title><rect x="5.5197%" y="389" width="0.0296%" height="15" fill="rgb(210,75,36)" fg:x="2422" fg:w="13"/><text x="5.7697%" y="399.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (7 samples, 0.02%)</title><rect x="5.5334%" y="373" width="0.0160%" height="15" fill="rgb(229,88,21)" fg:x="2428" fg:w="7"/><text x="5.7834%" y="383.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (7 samples, 0.02%)</title><rect x="5.5334%" y="357" width="0.0160%" height="15" fill="rgb(252,204,47)" fg:x="2428" fg:w="7"/><text x="5.7834%" y="367.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (5 samples, 0.01%)</title><rect x="5.5562%" y="341" width="0.0114%" height="15" fill="rgb(208,77,27)" fg:x="2438" fg:w="5"/><text x="5.8062%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (7 samples, 0.02%)</title><rect x="5.5562%" y="357" width="0.0160%" height="15" fill="rgb(221,76,26)" fg:x="2438" fg:w="7"/><text x="5.8062%" y="367.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (12 samples, 0.03%)</title><rect x="5.5494%" y="373" width="0.0273%" height="15" fill="rgb(225,139,18)" fg:x="2435" fg:w="12"/><text x="5.7994%" y="383.50"></text></g><g><title>GLEngine`glDrawElements_GL3Exec (22 samples, 0.05%)</title><rect x="5.5494%" y="389" width="0.0501%" height="15" fill="rgb(230,137,11)" fg:x="2435" fg:w="22"/><text x="5.7994%" y="399.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (10 samples, 0.02%)</title><rect x="5.5767%" y="373" width="0.0228%" height="15" fill="rgb(212,28,1)" fg:x="2447" fg:w="10"/><text x="5.8267%" y="383.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (10 samples, 0.02%)</title><rect x="5.5767%" y="357" width="0.0228%" height="15" fill="rgb(248,164,17)" fg:x="2447" fg:w="10"/><text x="5.8267%" y="367.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (10 samples, 0.02%)</title><rect x="5.5767%" y="341" width="0.0228%" height="15" fill="rgb(222,171,42)" fg:x="2447" fg:w="10"/><text x="5.8267%" y="351.50"></text></g><g><title>eguitty`egui_glow::painter::Painter::paint_mesh (47 samples, 0.11%)</title><rect x="5.4947%" y="405" width="0.1071%" height="15" fill="rgb(243,84,45)" fg:x="2411" fg:w="47"/><text x="5.7447%" y="415.50"></text></g><g><title>eguitty`egui_glow::painter::Painter::prepare_painting (8 samples, 0.02%)</title><rect x="5.6018%" y="405" width="0.0182%" height="15" fill="rgb(252,49,23)" fg:x="2458" fg:w="8"/><text x="5.8518%" y="415.50"></text></g><g><title>eguitty`egui_glow::painter::Painter::paint_primitives (58 samples, 0.13%)</title><rect x="5.4901%" y="421" width="0.1322%" height="15" fill="rgb(215,19,7)" fg:x="2409" fg:w="58"/><text x="5.7401%" y="431.50"></text></g><g><title>eguitty`egui_glow::painter::Painter::paint_and_update_textures (59 samples, 0.13%)</title><rect x="5.4901%" y="437" width="0.1345%" height="15" fill="rgb(238,81,41)" fg:x="2409" fg:w="59"/><text x="5.7401%" y="447.50"></text></g><g><title>eguitty`egui_winit::update_viewport_info (7 samples, 0.02%)</title><rect x="5.6268%" y="437" width="0.0160%" height="15" fill="rgb(210,199,37)" fg:x="2469" fg:w="7"/><text x="5.8768%" y="447.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (14 samples, 0.03%)</title><rect x="5.6451%" y="325" width="0.0319%" height="15" fill="rgb(244,192,49)" fg:x="2477" fg:w="14"/><text x="5.8951%" y="335.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (14 samples, 0.03%)</title><rect x="5.6451%" y="309" width="0.0319%" height="15" fill="rgb(226,211,11)" fg:x="2477" fg:w="14"/><text x="5.8951%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (14 samples, 0.03%)</title><rect x="5.6451%" y="293" width="0.0319%" height="15" fill="rgb(236,162,54)" fg:x="2477" fg:w="14"/><text x="5.8951%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (14 samples, 0.03%)</title><rect x="5.6451%" y="277" width="0.0319%" height="15" fill="rgb(220,229,9)" fg:x="2477" fg:w="14"/><text x="5.8951%" y="287.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (14 samples, 0.03%)</title><rect x="5.6451%" y="261" width="0.0319%" height="15" fill="rgb(250,87,22)" fg:x="2477" fg:w="14"/><text x="5.8951%" y="271.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (14 samples, 0.03%)</title><rect x="5.6451%" y="245" width="0.0319%" height="15" fill="rgb(239,43,17)" fg:x="2477" fg:w="14"/><text x="5.8951%" y="255.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (13 samples, 0.03%)</title><rect x="5.6473%" y="229" width="0.0296%" height="15" fill="rgb(231,177,25)" fg:x="2478" fg:w="13"/><text x="5.8973%" y="239.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (13 samples, 0.03%)</title><rect x="5.6473%" y="213" width="0.0296%" height="15" fill="rgb(219,179,1)" fg:x="2478" fg:w="13"/><text x="5.8973%" y="223.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (13 samples, 0.03%)</title><rect x="5.6473%" y="197" width="0.0296%" height="15" fill="rgb(238,219,53)" fg:x="2478" fg:w="13"/><text x="5.8973%" y="207.50"></text></g><g><title>IOKit`IOConnectCallMethod (13 samples, 0.03%)</title><rect x="5.6473%" y="181" width="0.0296%" height="15" fill="rgb(232,167,36)" fg:x="2478" fg:w="13"/><text x="5.8973%" y="191.50"></text></g><g><title>IOKit`io_connect_method (13 samples, 0.03%)</title><rect x="5.6473%" y="165" width="0.0296%" height="15" fill="rgb(244,19,51)" fg:x="2478" fg:w="13"/><text x="5.8973%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (13 samples, 0.03%)</title><rect x="5.6473%" y="149" width="0.0296%" height="15" fill="rgb(224,6,22)" fg:x="2478" fg:w="13"/><text x="5.8973%" y="159.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldEndPrimitiveBuffer(GLDContextRec*, unsigned int, unsigned int, int) (6 samples, 0.01%)</title><rect x="5.6838%" y="309" width="0.0137%" height="15" fill="rgb(224,145,5)" fg:x="2494" fg:w="6"/><text x="5.9338%" y="319.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (15 samples, 0.03%)</title><rect x="5.6838%" y="325" width="0.0342%" height="15" fill="rgb(234,130,49)" fg:x="2494" fg:w="15"/><text x="5.9338%" y="335.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (6 samples, 0.01%)</title><rect x="5.7043%" y="309" width="0.0137%" height="15" fill="rgb(254,6,2)" fg:x="2503" fg:w="6"/><text x="5.9543%" y="319.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (34 samples, 0.08%)</title><rect x="5.6451%" y="341" width="0.0775%" height="15" fill="rgb(208,96,46)" fg:x="2477" fg:w="34"/><text x="5.8951%" y="351.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (5 samples, 0.01%)</title><rect x="5.7340%" y="341" width="0.0114%" height="15" fill="rgb(239,3,39)" fg:x="2516" fg:w="5"/><text x="5.9840%" y="351.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (5 samples, 0.01%)</title><rect x="5.7340%" y="325" width="0.0114%" height="15" fill="rgb(233,210,1)" fg:x="2516" fg:w="5"/><text x="5.9840%" y="335.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (48 samples, 0.11%)</title><rect x="5.6451%" y="357" width="0.1094%" height="15" fill="rgb(244,137,37)" fg:x="2477" fg:w="48"/><text x="5.8951%" y="367.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (53 samples, 0.12%)</title><rect x="5.6428%" y="373" width="0.1208%" height="15" fill="rgb(240,136,2)" fg:x="2476" fg:w="53"/><text x="5.8928%" y="383.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (19 samples, 0.04%)</title><rect x="5.7681%" y="341" width="0.0433%" height="15" fill="rgb(239,18,37)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (19 samples, 0.04%)</title><rect x="5.7681%" y="325" width="0.0433%" height="15" fill="rgb(218,185,22)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (19 samples, 0.04%)</title><rect x="5.7681%" y="309" width="0.0433%" height="15" fill="rgb(225,218,4)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="319.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (19 samples, 0.04%)</title><rect x="5.7681%" y="293" width="0.0433%" height="15" fill="rgb(230,182,32)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (19 samples, 0.04%)</title><rect x="5.7681%" y="277" width="0.0433%" height="15" fill="rgb(242,56,43)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (19 samples, 0.04%)</title><rect x="5.7681%" y="261" width="0.0433%" height="15" fill="rgb(233,99,24)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (19 samples, 0.04%)</title><rect x="5.7681%" y="245" width="0.0433%" height="15" fill="rgb(234,209,42)" fg:x="2531" fg:w="19"/><text x="6.0181%" y="255.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (18 samples, 0.04%)</title><rect x="5.7704%" y="229" width="0.0410%" height="15" fill="rgb(227,7,12)" fg:x="2532" fg:w="18"/><text x="6.0204%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (18 samples, 0.04%)</title><rect x="5.7704%" y="213" width="0.0410%" height="15" fill="rgb(245,203,43)" fg:x="2532" fg:w="18"/><text x="6.0204%" y="223.50"></text></g><g><title>IOKit`io_connect_method (18 samples, 0.04%)</title><rect x="5.7704%" y="197" width="0.0410%" height="15" fill="rgb(238,205,33)" fg:x="2532" fg:w="18"/><text x="6.0204%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (18 samples, 0.04%)</title><rect x="5.7704%" y="181" width="0.0410%" height="15" fill="rgb(231,56,7)" fg:x="2532" fg:w="18"/><text x="6.0204%" y="191.50"></text></g><g><title>eguitty`glutin::api::cgl::context::ContextInner::flush_buffer (76 samples, 0.17%)</title><rect x="5.6428%" y="437" width="0.1732%" height="15" fill="rgb(244,186,29)" fg:x="2476" fg:w="76"/><text x="5.8928%" y="447.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (76 samples, 0.17%)</title><rect x="5.6428%" y="421" width="0.1732%" height="15" fill="rgb(234,111,31)" fg:x="2476" fg:w="76"/><text x="5.8928%" y="431.50"></text></g><g><title>OpenGL`CGLFlushDrawable (76 samples, 0.17%)</title><rect x="5.6428%" y="405" width="0.1732%" height="15" fill="rgb(241,149,10)" fg:x="2476" fg:w="76"/><text x="5.8928%" y="415.50"></text></g><g><title>GLEngine`glSwap_Exec (76 samples, 0.17%)</title><rect x="5.6428%" y="389" width="0.1732%" height="15" fill="rgb(249,206,44)" fg:x="2476" fg:w="76"/><text x="5.8928%" y="399.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldPresentFramebufferData (23 samples, 0.05%)</title><rect x="5.7636%" y="373" width="0.0524%" height="15" fill="rgb(251,153,30)" fg:x="2529" fg:w="23"/><text x="6.0136%" y="383.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (23 samples, 0.05%)</title><rect x="5.7636%" y="357" width="0.0524%" height="15" fill="rgb(239,152,38)" fg:x="2529" fg:w="23"/><text x="6.0136%" y="367.50"></text></g><g><title>eguitty`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (2,366 samples, 5.39%)</title><rect x="0.4285%" y="453" width="5.3921%" height="15" fill="rgb(249,139,47)" fg:x="188" fg:w="2366"/><text x="0.6785%" y="463.50">eguitty..</text></g><g><title>eguitty`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (2,371 samples, 5.40%)</title><rect x="0.4262%" y="485" width="5.4035%" height="15" fill="rgb(244,64,35)" fg:x="187" fg:w="2371"/><text x="0.6762%" y="495.50">eguitty..</text></g><g><title>eguitty`eframe::native::run::run_and_return::_{{closure}} (2,371 samples, 5.40%)</title><rect x="0.4262%" y="469" width="5.4035%" height="15" fill="rgb(216,46,15)" fg:x="187" fg:w="2371"/><text x="0.6762%" y="479.50">eguitty..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,443 samples, 5.57%)</title><rect x="0.2644%" y="565" width="5.5676%" height="15" fill="rgb(250,74,19)" fg:x="116" fg:w="2443"/><text x="0.5144%" y="575.50">CoreFou..</text></g><g><title>eguitty`winit::platform_impl::platform::observer::control_flow_end_handler (2,373 samples, 5.41%)</title><rect x="0.4239%" y="549" width="5.4081%" height="15" fill="rgb(249,42,33)" fg:x="186" fg:w="2373"/><text x="0.6739%" y="559.50">eguitty..</text></g><g><title>eguitty`std::panicking::try (2,373 samples, 5.41%)</title><rect x="0.4239%" y="533" width="5.4081%" height="15" fill="rgb(242,149,17)" fg:x="186" fg:w="2373"/><text x="0.6739%" y="543.50">eguitty..</text></g><g><title>eguitty`winit::platform_impl::platform::app_state::AppState::cleared (2,373 samples, 5.41%)</title><rect x="0.4239%" y="517" width="5.4081%" height="15" fill="rgb(244,29,21)" fg:x="186" fg:w="2373"/><text x="0.6739%" y="527.50">eguitty..</text></g><g><title>eguitty`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (2,372 samples, 5.41%)</title><rect x="0.4262%" y="501" width="5.4058%" height="15" fill="rgb(220,130,37)" fg:x="187" fg:w="2372"/><text x="0.6762%" y="511.50">eguitty..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,446 samples, 5.57%)</title><rect x="0.2621%" y="581" width="5.5744%" height="15" fill="rgb(211,67,2)" fg:x="115" fg:w="2446"/><text x="0.5121%" y="591.50">CoreFou..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (2,474 samples, 5.64%)</title><rect x="0.2051%" y="613" width="5.6382%" height="15" fill="rgb(235,68,52)" fg:x="90" fg:w="2474"/><text x="0.4551%" y="623.50">CoreFou..</text></g><g><title>CoreFoundation`__CFRunLoopRun (2,458 samples, 5.60%)</title><rect x="0.2416%" y="597" width="5.6018%" height="15" fill="rgb(246,142,3)" fg:x="106" fg:w="2458"/><text x="0.4916%" y="607.50">CoreFou..</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (2,481 samples, 5.65%)</title><rect x="0.2051%" y="629" width="5.6542%" height="15" fill="rgb(241,25,7)" fg:x="90" fg:w="2481"/><text x="0.4551%" y="639.50">HIToolb..</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (6 samples, 0.01%)</title><rect x="5.8456%" y="613" width="0.0137%" height="15" fill="rgb(242,119,39)" fg:x="2565" fg:w="6"/><text x="6.0956%" y="623.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (6 samples, 0.01%)</title><rect x="5.8456%" y="597" width="0.0137%" height="15" fill="rgb(241,98,45)" fg:x="2565" fg:w="6"/><text x="6.0956%" y="607.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (6 samples, 0.01%)</title><rect x="5.8456%" y="581" width="0.0137%" height="15" fill="rgb(254,28,30)" fg:x="2565" fg:w="6"/><text x="6.0956%" y="591.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (6 samples, 0.01%)</title><rect x="5.8456%" y="565" width="0.0137%" height="15" fill="rgb(241,142,54)" fg:x="2565" fg:w="6"/><text x="6.0956%" y="575.50"></text></g><g><title>AppKit`_DPSNextEvent (2,518 samples, 5.74%)</title><rect x="0.1231%" y="677" width="5.7385%" height="15" fill="rgb(222,85,15)" fg:x="54" fg:w="2518"/><text x="0.3731%" y="687.50">AppKit`..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (2,487 samples, 5.67%)</title><rect x="0.1937%" y="661" width="5.6679%" height="15" fill="rgb(210,85,47)" fg:x="85" fg:w="2487"/><text x="0.4437%" y="671.50">HIToolb..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (2,487 samples, 5.67%)</title><rect x="0.1937%" y="645" width="5.6679%" height="15" fill="rgb(224,206,25)" fg:x="85" fg:w="2487"/><text x="0.4437%" y="655.50">HIToolb..</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (2,530 samples, 5.77%)</title><rect x="0.0980%" y="693" width="5.7659%" height="15" fill="rgb(243,201,19)" fg:x="43" fg:w="2530"/><text x="0.3480%" y="703.50">AppKit`..</text></g><g><title>eguitty`main (2,574 samples, 5.87%)</title><rect x="0.0000%" y="853" width="5.8661%" height="15" fill="rgb(236,59,4)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="863.50">eguitty..</text></g><g><title>eguitty`std::rt::lang_start_internal (2,574 samples, 5.87%)</title><rect x="0.0000%" y="837" width="5.8661%" height="15" fill="rgb(254,179,45)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="847.50">eguitty..</text></g><g><title>eguitty`std::rt::lang_start::_{{closure}} (2,574 samples, 5.87%)</title><rect x="0.0000%" y="821" width="5.8661%" height="15" fill="rgb(226,14,10)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="831.50">eguitty..</text></g><g><title>eguitty`std::sys_common::backtrace::__rust_begin_short_backtrace (2,574 samples, 5.87%)</title><rect x="0.0000%" y="805" width="5.8661%" height="15" fill="rgb(244,27,41)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="815.50">eguitty..</text></g><g><title>eguitty`eguitty::main (2,574 samples, 5.87%)</title><rect x="0.0000%" y="789" width="5.8661%" height="15" fill="rgb(235,35,32)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="799.50">eguitty..</text></g><g><title>eguitty`eframe::run_native (2,574 samples, 5.87%)</title><rect x="0.0000%" y="773" width="5.8661%" height="15" fill="rgb(218,68,31)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="783.50">eguitty..</text></g><g><title>eguitty`eframe::native::run::run_glow (2,574 samples, 5.87%)</title><rect x="0.0000%" y="757" width="5.8661%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="2574"/><text x="0.2500%" y="767.50">eguitty..</text></g><g><title>eguitty`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_on_demand (2,560 samples, 5.83%)</title><rect x="0.0319%" y="741" width="5.8342%" height="15" fill="rgb(227,98,0)" fg:x="14" fg:w="2560"/><text x="0.2819%" y="751.50">eguitty..</text></g><g><title>eguitty`std::panicking::try (2,560 samples, 5.83%)</title><rect x="0.0319%" y="725" width="5.8342%" height="15" fill="rgb(207,7,3)" fg:x="14" fg:w="2560"/><text x="0.2819%" y="735.50">eguitty..</text></g><g><title>AppKit`-[NSApplication run] (2,560 samples, 5.83%)</title><rect x="0.0319%" y="709" width="5.8342%" height="15" fill="rgb(206,98,19)" fg:x="14" fg:w="2560"/><text x="0.2819%" y="719.50">AppKit`..</text></g><g><title>dyld`start (2,575 samples, 5.87%)</title><rect x="0.0000%" y="869" width="5.8684%" height="15" fill="rgb(217,5,26)" fg:x="0" fg:w="2575"/><text x="0.2500%" y="879.50">dyld`st..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (5 samples, 0.01%)</title><rect x="5.9869%" y="853" width="0.0114%" height="15" fill="rgb(235,190,38)" fg:x="2627" fg:w="5"/><text x="6.2369%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (385 samples, 0.88%)</title><rect x="5.9983%" y="853" width="0.8774%" height="15" fill="rgb(247,86,24)" fg:x="2632" fg:w="385"/><text x="6.2483%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (56 samples, 0.13%)</title><rect x="6.9988%" y="805" width="0.1276%" height="15" fill="rgb(205,101,16)" fg:x="3071" fg:w="56"/><text x="7.2488%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (63 samples, 0.14%)</title><rect x="6.9897%" y="821" width="0.1436%" height="15" fill="rgb(246,168,33)" fg:x="3067" fg:w="63"/><text x="7.2397%" y="831.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReleaseExtraResources (6 samples, 0.01%)</title><rect x="7.1560%" y="597" width="0.0137%" height="15" fill="rgb(231,114,1)" fg:x="3140" fg:w="6"/><text x="7.4060%" y="607.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (13 samples, 0.03%)</title><rect x="7.1560%" y="613" width="0.0296%" height="15" fill="rgb(207,184,53)" fg:x="3140" fg:w="13"/><text x="7.4060%" y="623.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (16 samples, 0.04%)</title><rect x="7.1560%" y="629" width="0.0365%" height="15" fill="rgb(224,95,51)" fg:x="3140" fg:w="16"/><text x="7.4060%" y="639.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResource::decrementBusy (11 samples, 0.03%)</title><rect x="7.2016%" y="581" width="0.0251%" height="15" fill="rgb(212,188,45)" fg:x="3160" fg:w="11"/><text x="7.4516%" y="591.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (5 samples, 0.01%)</title><rect x="7.2267%" y="517" width="0.0114%" height="15" fill="rgb(223,154,38)" fg:x="3171" fg:w="5"/><text x="7.4767%" y="527.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRTextureResource::dealloc (6 samples, 0.01%)</title><rect x="7.2267%" y="565" width="0.0137%" height="15" fill="rgb(251,22,52)" fg:x="3171" fg:w="6"/><text x="7.4767%" y="575.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRTextureViewResource::dealloc (6 samples, 0.01%)</title><rect x="7.2267%" y="549" width="0.0137%" height="15" fill="rgb(229,209,22)" fg:x="3171" fg:w="6"/><text x="7.4767%" y="559.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (6 samples, 0.01%)</title><rect x="7.2267%" y="533" width="0.0137%" height="15" fill="rgb(234,138,34)" fg:x="3171" fg:w="6"/><text x="7.4767%" y="543.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDContextRec::flushContextInternal (23 samples, 0.05%)</title><rect x="7.1993%" y="597" width="0.0524%" height="15" fill="rgb(212,95,11)" fg:x="3159" fg:w="23"/><text x="7.4493%" y="607.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResourceList::makeResourcesNotBusyAndReset (11 samples, 0.03%)</title><rect x="7.2267%" y="581" width="0.0251%" height="15" fill="rgb(240,179,47)" fg:x="3171" fg:w="11"/><text x="7.4767%" y="591.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (15 samples, 0.03%)</title><rect x="7.2540%" y="565" width="0.0342%" height="15" fill="rgb(240,163,11)" fg:x="3183" fg:w="15"/><text x="7.5040%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.02%)</title><rect x="7.2677%" y="549" width="0.0205%" height="15" fill="rgb(236,37,12)" fg:x="3189" fg:w="9"/><text x="7.5177%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (16 samples, 0.04%)</title><rect x="7.2540%" y="581" width="0.0365%" height="15" fill="rgb(232,164,16)" fg:x="3183" fg:w="16"/><text x="7.5040%" y="591.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (19 samples, 0.04%)</title><rect x="7.2518%" y="597" width="0.0433%" height="15" fill="rgb(244,205,15)" fg:x="3182" fg:w="19"/><text x="7.5018%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (47 samples, 0.11%)</title><rect x="7.1925%" y="629" width="0.1071%" height="15" fill="rgb(223,117,47)" fg:x="3156" fg:w="47"/><text x="7.4425%" y="639.50"></text></g><g><title>Metal`MTLDispatchListApply (44 samples, 0.10%)</title><rect x="7.1993%" y="613" width="0.1003%" height="15" fill="rgb(244,107,35)" fg:x="3159" fg:w="44"/><text x="7.4493%" y="623.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (64 samples, 0.15%)</title><rect x="7.1560%" y="645" width="0.1459%" height="15" fill="rgb(205,140,8)" fg:x="3140" fg:w="64"/><text x="7.4060%" y="655.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (67 samples, 0.15%)</title><rect x="7.1560%" y="661" width="0.1527%" height="15" fill="rgb(228,84,46)" fg:x="3140" fg:w="67"/><text x="7.4060%" y="671.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (73 samples, 0.17%)</title><rect x="7.1538%" y="677" width="0.1664%" height="15" fill="rgb(254,188,9)" fg:x="3139" fg:w="73"/><text x="7.4038%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (75 samples, 0.17%)</title><rect x="7.1538%" y="709" width="0.1709%" height="15" fill="rgb(206,112,54)" fg:x="3139" fg:w="75"/><text x="7.4038%" y="719.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (75 samples, 0.17%)</title><rect x="7.1538%" y="693" width="0.1709%" height="15" fill="rgb(216,84,49)" fg:x="3139" fg:w="75"/><text x="7.4038%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (81 samples, 0.18%)</title><rect x="7.1446%" y="789" width="0.1846%" height="15" fill="rgb(214,194,35)" fg:x="3135" fg:w="81"/><text x="7.3946%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (79 samples, 0.18%)</title><rect x="7.1492%" y="773" width="0.1800%" height="15" fill="rgb(249,28,3)" fg:x="3137" fg:w="79"/><text x="7.3992%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (79 samples, 0.18%)</title><rect x="7.1492%" y="757" width="0.1800%" height="15" fill="rgb(222,56,52)" fg:x="3137" fg:w="79"/><text x="7.3992%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (78 samples, 0.18%)</title><rect x="7.1515%" y="741" width="0.1778%" height="15" fill="rgb(245,217,50)" fg:x="3138" fg:w="78"/><text x="7.4015%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (78 samples, 0.18%)</title><rect x="7.1515%" y="725" width="0.1778%" height="15" fill="rgb(213,201,24)" fg:x="3138" fg:w="78"/><text x="7.4015%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (103 samples, 0.23%)</title><rect x="7.3520%" y="725" width="0.2347%" height="15" fill="rgb(248,116,28)" fg:x="3226" fg:w="103"/><text x="7.6020%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (101 samples, 0.23%)</title><rect x="7.3566%" y="709" width="0.2302%" height="15" fill="rgb(219,72,43)" fg:x="3228" fg:w="101"/><text x="7.6066%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (99 samples, 0.23%)</title><rect x="7.3612%" y="693" width="0.2256%" height="15" fill="rgb(209,138,14)" fg:x="3230" fg:w="99"/><text x="7.6112%" y="703.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (106 samples, 0.24%)</title><rect x="7.3475%" y="741" width="0.2416%" height="15" fill="rgb(222,18,33)" fg:x="3224" fg:w="106"/><text x="7.5975%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (42 samples, 0.10%)</title><rect x="7.5936%" y="741" width="0.0957%" height="15" fill="rgb(213,199,7)" fg:x="3332" fg:w="42"/><text x="7.8436%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (151 samples, 0.34%)</title><rect x="7.3475%" y="757" width="0.3441%" height="15" fill="rgb(250,110,10)" fg:x="3224" fg:w="151"/><text x="7.5975%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (155 samples, 0.35%)</title><rect x="7.3429%" y="773" width="0.3532%" height="15" fill="rgb(248,123,6)" fg:x="3222" fg:w="155"/><text x="7.5929%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (160 samples, 0.36%)</title><rect x="7.3338%" y="789" width="0.3646%" height="15" fill="rgb(206,91,31)" fg:x="3218" fg:w="160"/><text x="7.5838%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (250 samples, 0.57%)</title><rect x="7.1378%" y="805" width="0.5697%" height="15" fill="rgb(211,154,13)" fg:x="3132" fg:w="250"/><text x="7.3878%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (11 samples, 0.03%)</title><rect x="7.7144%" y="805" width="0.0251%" height="15" fill="rgb(225,148,7)" fg:x="3385" fg:w="11"/><text x="7.9644%" y="815.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (11 samples, 0.03%)</title><rect x="7.7144%" y="789" width="0.0251%" height="15" fill="rgb(220,160,43)" fg:x="3385" fg:w="11"/><text x="7.9644%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (266 samples, 0.61%)</title><rect x="7.1355%" y="821" width="0.6062%" height="15" fill="rgb(213,52,39)" fg:x="3131" fg:w="266"/><text x="7.3855%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (821 samples, 1.87%)</title><rect x="5.8958%" y="869" width="1.8711%" height="15" fill="rgb(243,137,7)" fg:x="2587" fg:w="821"/><text x="6.1458%" y="879.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (391 samples, 0.89%)</title><rect x="6.8757%" y="853" width="0.8911%" height="15" fill="rgb(230,79,13)" fg:x="3017" fg:w="391"/><text x="7.1257%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (383 samples, 0.87%)</title><rect x="6.8940%" y="837" width="0.8729%" height="15" fill="rgb(247,105,23)" fg:x="3025" fg:w="383"/><text x="7.1440%" y="847.50"></text></g><g><title>CoreFoundation`_CFSetTSD (10 samples, 0.02%)</title><rect x="7.7987%" y="789" width="0.0228%" height="15" fill="rgb(223,179,41)" fg:x="3422" fg:w="10"/><text x="8.0487%" y="799.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (5 samples, 0.01%)</title><rect x="7.8283%" y="725" width="0.0114%" height="15" fill="rgb(218,9,34)" fg:x="3435" fg:w="5"/><text x="8.0783%" y="735.50"></text></g><g><title>CoreFoundation`_CFMachPortBoostCreate (6 samples, 0.01%)</title><rect x="7.8283%" y="741" width="0.0137%" height="15" fill="rgb(222,106,8)" fg:x="3435" fg:w="6"/><text x="8.0783%" y="751.50"></text></g><g><title>CoreFoundation`_CFRelease (23 samples, 0.05%)</title><rect x="7.8420%" y="741" width="0.0524%" height="15" fill="rgb(211,220,0)" fg:x="3441" fg:w="23"/><text x="8.0920%" y="751.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (23 samples, 0.05%)</title><rect x="7.8420%" y="725" width="0.0524%" height="15" fill="rgb(229,52,16)" fg:x="3441" fg:w="23"/><text x="8.0920%" y="735.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (23 samples, 0.05%)</title><rect x="7.8420%" y="709" width="0.0524%" height="15" fill="rgb(212,155,18)" fg:x="3441" fg:w="23"/><text x="8.0920%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (23 samples, 0.05%)</title><rect x="7.8420%" y="693" width="0.0524%" height="15" fill="rgb(242,21,14)" fg:x="3441" fg:w="23"/><text x="8.0920%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (22 samples, 0.05%)</title><rect x="7.8443%" y="677" width="0.0501%" height="15" fill="rgb(222,19,48)" fg:x="3442" fg:w="22"/><text x="8.0943%" y="687.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (9 samples, 0.02%)</title><rect x="7.9058%" y="709" width="0.0205%" height="15" fill="rgb(232,45,27)" fg:x="3469" fg:w="9"/><text x="8.1558%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (8 samples, 0.02%)</title><rect x="7.9081%" y="693" width="0.0182%" height="15" fill="rgb(249,103,42)" fg:x="3470" fg:w="8"/><text x="8.1581%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (6 samples, 0.01%)</title><rect x="7.9127%" y="677" width="0.0137%" height="15" fill="rgb(246,81,33)" fg:x="3472" fg:w="6"/><text x="8.1627%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.01%)</title><rect x="7.9127%" y="661" width="0.0137%" height="15" fill="rgb(252,33,42)" fg:x="3472" fg:w="6"/><text x="8.1627%" y="671.50"></text></g><g><title>SkyLight`invocation function for block in CGSGetKnownConnectionByID(unsigned int) (6 samples, 0.01%)</title><rect x="7.9446%" y="661" width="0.0137%" height="15" fill="rgb(209,212,41)" fg:x="3486" fg:w="6"/><text x="8.1946%" y="671.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (6 samples, 0.01%)</title><rect x="7.9446%" y="645" width="0.0137%" height="15" fill="rgb(207,154,6)" fg:x="3486" fg:w="6"/><text x="8.1946%" y="655.50"></text></g><g><title>Foundation`readARCWeakAt (5 samples, 0.01%)</title><rect x="7.9469%" y="629" width="0.0114%" height="15" fill="rgb(223,64,47)" fg:x="3487" fg:w="5"/><text x="8.1969%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (5 samples, 0.01%)</title><rect x="7.9469%" y="613" width="0.0114%" height="15" fill="rgb(211,161,38)" fg:x="3487" fg:w="5"/><text x="8.1969%" y="623.50"></text></g><g><title>SkyLight`CGSConnectionByID (9 samples, 0.02%)</title><rect x="7.9400%" y="677" width="0.0205%" height="15" fill="rgb(219,138,40)" fg:x="3484" fg:w="9"/><text x="8.1900%" y="687.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (5 samples, 0.01%)</title><rect x="7.9628%" y="597" width="0.0114%" height="15" fill="rgb(241,228,46)" fg:x="3494" fg:w="5"/><text x="8.2128%" y="607.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (7 samples, 0.02%)</title><rect x="7.9605%" y="645" width="0.0160%" height="15" fill="rgb(223,209,38)" fg:x="3493" fg:w="7"/><text x="8.2105%" y="655.50"></text></g><g><title>libsystem_c.dylib`snprintf (7 samples, 0.02%)</title><rect x="7.9605%" y="629" width="0.0160%" height="15" fill="rgb(236,164,45)" fg:x="3493" fg:w="7"/><text x="8.2105%" y="639.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (7 samples, 0.02%)</title><rect x="7.9605%" y="613" width="0.0160%" height="15" fill="rgb(231,15,5)" fg:x="3493" fg:w="7"/><text x="8.2105%" y="623.50"></text></g><g><title>SkyLight`(anonymous namespace)::GestureEventLog::getLogString (9 samples, 0.02%)</title><rect x="7.9605%" y="661" width="0.0205%" height="15" fill="rgb(252,35,15)" fg:x="3493" fg:w="9"/><text x="8.2105%" y="671.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&amp; std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_no_alias&lt;true&gt; (5 samples, 0.01%)</title><rect x="7.9833%" y="645" width="0.0114%" height="15" fill="rgb(248,181,18)" fg:x="3503" fg:w="5"/><text x="8.2333%" y="655.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (5 samples, 0.01%)</title><rect x="7.9833%" y="629" width="0.0114%" height="15" fill="rgb(233,39,42)" fg:x="3503" fg:w="5"/><text x="8.2333%" y="639.50"></text></g><g><title>SkyLight`(anonymous namespace)::LogRingBuffer::push_back(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.03%)</title><rect x="7.9833%" y="661" width="0.0251%" height="15" fill="rgb(238,110,33)" fg:x="3503" fg:w="11"/><text x="8.2333%" y="671.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (6 samples, 0.01%)</title><rect x="7.9947%" y="645" width="0.0137%" height="15" fill="rgb(233,195,10)" fg:x="3508" fg:w="6"/><text x="8.2447%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.01%)</title><rect x="7.9947%" y="629" width="0.0137%" height="15" fill="rgb(254,105,3)" fg:x="3508" fg:w="6"/><text x="8.2447%" y="639.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (8 samples, 0.02%)</title><rect x="8.0084%" y="645" width="0.0182%" height="15" fill="rgb(221,225,9)" fg:x="3514" fg:w="8"/><text x="8.2584%" y="655.50"></text></g><g><title>libsystem_c.dylib`snprintf (6 samples, 0.01%)</title><rect x="8.0129%" y="629" width="0.0137%" height="15" fill="rgb(224,227,45)" fg:x="3516" fg:w="6"/><text x="8.2629%" y="639.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (6 samples, 0.01%)</title><rect x="8.0129%" y="613" width="0.0137%" height="15" fill="rgb(229,198,43)" fg:x="3516" fg:w="6"/><text x="8.2629%" y="623.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (12 samples, 0.03%)</title><rect x="8.0084%" y="661" width="0.0273%" height="15" fill="rgb(206,209,35)" fg:x="3514" fg:w="12"/><text x="8.2584%" y="671.50"></text></g><g><title>SkyLight`CGSEventLogEvent (40 samples, 0.09%)</title><rect x="7.9605%" y="677" width="0.0912%" height="15" fill="rgb(245,195,53)" fg:x="3493" fg:w="40"/><text x="8.2105%" y="687.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (6 samples, 0.01%)</title><rect x="8.0517%" y="661" width="0.0137%" height="15" fill="rgb(240,92,26)" fg:x="3533" fg:w="6"/><text x="8.3017%" y="671.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (6 samples, 0.01%)</title><rect x="8.0517%" y="645" width="0.0137%" height="15" fill="rgb(207,40,23)" fg:x="3533" fg:w="6"/><text x="8.3017%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (6 samples, 0.01%)</title><rect x="8.0517%" y="629" width="0.0137%" height="15" fill="rgb(223,111,35)" fg:x="3533" fg:w="6"/><text x="8.3017%" y="639.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (5 samples, 0.01%)</title><rect x="8.0768%" y="613" width="0.0114%" height="15" fill="rgb(229,147,28)" fg:x="3544" fg:w="5"/><text x="8.3268%" y="623.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (14 samples, 0.03%)</title><rect x="8.0904%" y="597" width="0.0319%" height="15" fill="rgb(211,29,28)" fg:x="3550" fg:w="14"/><text x="8.3404%" y="607.50"></text></g><g><title>SkyLight`CGSEventAppendixCreate (13 samples, 0.03%)</title><rect x="8.0927%" y="581" width="0.0296%" height="15" fill="rgb(228,72,33)" fg:x="3551" fg:w="13"/><text x="8.3427%" y="591.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (13 samples, 0.03%)</title><rect x="8.0927%" y="565" width="0.0296%" height="15" fill="rgb(205,214,31)" fg:x="3551" fg:w="13"/><text x="8.3427%" y="575.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (10 samples, 0.02%)</title><rect x="8.0995%" y="549" width="0.0228%" height="15" fill="rgb(224,111,15)" fg:x="3554" fg:w="10"/><text x="8.3495%" y="559.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (17 samples, 0.04%)</title><rect x="8.0882%" y="613" width="0.0387%" height="15" fill="rgb(253,21,26)" fg:x="3549" fg:w="17"/><text x="8.3382%" y="623.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (27 samples, 0.06%)</title><rect x="8.0768%" y="629" width="0.0615%" height="15" fill="rgb(245,139,43)" fg:x="3544" fg:w="27"/><text x="8.3268%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="8.1269%" y="613" width="0.0114%" height="15" fill="rgb(252,170,7)" fg:x="3566" fg:w="5"/><text x="8.3769%" y="623.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (38 samples, 0.09%)</title><rect x="8.0654%" y="661" width="0.0866%" height="15" fill="rgb(231,118,14)" fg:x="3539" fg:w="38"/><text x="8.3154%" y="671.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (35 samples, 0.08%)</title><rect x="8.0722%" y="645" width="0.0798%" height="15" fill="rgb(238,83,0)" fg:x="3542" fg:w="35"/><text x="8.3222%" y="655.50"></text></g><g><title>SkyLight`handle_decoded_event(SLSEventRecord*, void*) (6 samples, 0.01%)</title><rect x="8.1383%" y="629" width="0.0137%" height="15" fill="rgb(221,39,39)" fg:x="3571" fg:w="6"/><text x="8.3883%" y="639.50"></text></g><g><title>SkyLight`CGSEventQueueEnqueueEvent (6 samples, 0.01%)</title><rect x="8.1383%" y="613" width="0.0137%" height="15" fill="rgb(222,119,46)" fg:x="3571" fg:w="6"/><text x="8.3883%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (71 samples, 0.16%)</title><rect x="8.1520%" y="661" width="0.1618%" height="15" fill="rgb(222,165,49)" fg:x="3577" fg:w="71"/><text x="8.4020%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (71 samples, 0.16%)</title><rect x="8.1520%" y="645" width="0.1618%" height="15" fill="rgb(219,113,52)" fg:x="3577" fg:w="71"/><text x="8.4020%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (70 samples, 0.16%)</title><rect x="8.1542%" y="629" width="0.1595%" height="15" fill="rgb(214,7,15)" fg:x="3578" fg:w="70"/><text x="8.4042%" y="639.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (122 samples, 0.28%)</title><rect x="8.0517%" y="677" width="0.2780%" height="15" fill="rgb(235,32,4)" fg:x="3533" fg:w="122"/><text x="8.3017%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="8.3138%" y="661" width="0.0160%" height="15" fill="rgb(238,90,54)" fg:x="3648" fg:w="7"/><text x="8.5638%" y="671.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (176 samples, 0.40%)</title><rect x="7.9355%" y="709" width="0.4011%" height="15" fill="rgb(213,208,19)" fg:x="3482" fg:w="176"/><text x="8.1855%" y="719.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (175 samples, 0.40%)</title><rect x="7.9377%" y="693" width="0.3988%" height="15" fill="rgb(233,156,4)" fg:x="3483" fg:w="175"/><text x="8.1877%" y="703.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (227 samples, 0.52%)</title><rect x="7.8283%" y="757" width="0.5173%" height="15" fill="rgb(207,194,5)" fg:x="3435" fg:w="227"/><text x="8.0783%" y="767.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (197 samples, 0.45%)</title><rect x="7.8967%" y="741" width="0.4490%" height="15" fill="rgb(206,111,30)" fg:x="3465" fg:w="197"/><text x="8.1467%" y="751.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (197 samples, 0.45%)</title><rect x="7.8967%" y="725" width="0.4490%" height="15" fill="rgb(243,70,54)" fg:x="3465" fg:w="197"/><text x="8.1467%" y="735.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (228 samples, 0.52%)</title><rect x="7.8283%" y="773" width="0.5196%" height="15" fill="rgb(242,28,8)" fg:x="3435" fg:w="228"/><text x="8.0783%" y="783.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (231 samples, 0.53%)</title><rect x="7.8238%" y="789" width="0.5264%" height="15" fill="rgb(219,106,18)" fg:x="3433" fg:w="231"/><text x="8.0738%" y="799.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (9 samples, 0.02%)</title><rect x="8.3548%" y="773" width="0.0205%" height="15" fill="rgb(244,222,10)" fg:x="3666" fg:w="9"/><text x="8.6048%" y="783.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (5 samples, 0.01%)</title><rect x="8.3639%" y="757" width="0.0114%" height="15" fill="rgb(236,179,52)" fg:x="3670" fg:w="5"/><text x="8.6139%" y="767.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (33 samples, 0.08%)</title><rect x="8.3525%" y="789" width="0.0752%" height="15" fill="rgb(213,23,39)" fg:x="3665" fg:w="33"/><text x="8.6025%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (23 samples, 0.05%)</title><rect x="8.3753%" y="773" width="0.0524%" height="15" fill="rgb(238,48,10)" fg:x="3675" fg:w="23"/><text x="8.6253%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (23 samples, 0.05%)</title><rect x="8.3753%" y="757" width="0.0524%" height="15" fill="rgb(251,196,23)" fg:x="3675" fg:w="23"/><text x="8.6253%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (22 samples, 0.05%)</title><rect x="8.3776%" y="741" width="0.0501%" height="15" fill="rgb(250,152,24)" fg:x="3676" fg:w="22"/><text x="8.6276%" y="751.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (290 samples, 0.66%)</title><rect x="7.7964%" y="805" width="0.6609%" height="15" fill="rgb(209,150,17)" fg:x="3421" fg:w="290"/><text x="8.0464%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (10 samples, 0.02%)</title><rect x="8.4346%" y="789" width="0.0228%" height="15" fill="rgb(234,202,34)" fg:x="3701" fg:w="10"/><text x="8.6846%" y="799.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (296 samples, 0.67%)</title><rect x="7.7850%" y="821" width="0.6746%" height="15" fill="rgb(253,148,53)" fg:x="3416" fg:w="296"/><text x="8.0350%" y="831.50"></text></g><g><title>AppKit`_NSEventThread (297 samples, 0.68%)</title><rect x="7.7850%" y="837" width="0.6769%" height="15" fill="rgb(218,129,16)" fg:x="3416" fg:w="297"/><text x="8.0350%" y="847.50"></text></g><g><title>eguitty`DYLD-STUB$$memcpy (32 samples, 0.07%)</title><rect x="8.4642%" y="805" width="0.0729%" height="15" fill="rgb(216,85,19)" fg:x="3714" fg:w="32"/><text x="8.7142%" y="815.50"></text></g><g><title>eguitty`crossbeam_channel::channel::Sender&lt;T&gt;::send (32 samples, 0.07%)</title><rect x="8.5394%" y="805" width="0.0729%" height="15" fill="rgb(235,228,7)" fg:x="3747" fg:w="32"/><text x="8.7894%" y="815.50"></text></g><g><title>eguitty`std::io::default_read_buf (50 samples, 0.11%)</title><rect x="8.6123%" y="805" width="0.1139%" height="15" fill="rgb(245,175,0)" fg:x="3779" fg:w="50"/><text x="8.8623%" y="815.50"></text></g><g><title>eguitty`DYLD-STUB$$bzero (25 samples, 0.06%)</title><rect x="9.1137%" y="789" width="0.0570%" height="15" fill="rgb(208,168,36)" fg:x="3999" fg:w="25"/><text x="9.3637%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.01%)</title><rect x="9.9455%" y="725" width="0.0137%" height="15" fill="rgb(246,171,24)" fg:x="4364" fg:w="6"/><text x="10.1955%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (22 samples, 0.05%)</title><rect x="9.9592%" y="725" width="0.0501%" height="15" fill="rgb(215,142,24)" fg:x="4370" fg:w="22"/><text x="10.2092%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.04%)</title><rect x="9.9683%" y="709" width="0.0410%" height="15" fill="rgb(250,187,7)" fg:x="4374" fg:w="18"/><text x="10.2183%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (11 samples, 0.03%)</title><rect x="10.0093%" y="725" width="0.0251%" height="15" fill="rgb(228,66,33)" fg:x="4392" fg:w="11"/><text x="10.2593%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="10.0207%" y="709" width="0.0137%" height="15" fill="rgb(234,215,21)" fg:x="4397" fg:w="6"/><text x="10.2707%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (38 samples, 0.09%)</title><rect x="10.7751%" y="709" width="0.0866%" height="15" fill="rgb(222,191,20)" fg:x="4728" fg:w="38"/><text x="11.0251%" y="719.50"></text></g><g><title>eguitty`crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (682 samples, 1.55%)</title><rect x="9.3165%" y="773" width="1.5543%" height="15" fill="rgb(245,79,54)" fg:x="4088" fg:w="682"/><text x="9.5665%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (446 samples, 1.02%)</title><rect x="9.8544%" y="757" width="1.0164%" height="15" fill="rgb(240,10,37)" fg:x="4324" fg:w="446"/><text x="10.1044%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (444 samples, 1.01%)</title><rect x="9.8589%" y="741" width="1.0119%" height="15" fill="rgb(214,192,32)" fg:x="4326" fg:w="444"/><text x="10.1089%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (367 samples, 0.84%)</title><rect x="10.0344%" y="725" width="0.8364%" height="15" fill="rgb(209,36,54)" fg:x="4403" fg:w="367"/><text x="10.2844%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.03%)</title><rect x="10.8708%" y="773" width="0.0273%" height="15" fill="rgb(220,10,11)" fg:x="4770" fg:w="12"/><text x="11.1208%" y="783.50"></text></g><g><title>eguitty`crossbeam_channel::channel::Sender&lt;T&gt;::send (782 samples, 1.78%)</title><rect x="9.1752%" y="789" width="1.7822%" height="15" fill="rgb(221,106,17)" fg:x="4026" fg:w="782"/><text x="9.4252%" y="799.50">e..</text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.05%)</title><rect x="10.9118%" y="773" width="0.0456%" height="15" fill="rgb(251,142,44)" fg:x="4788" fg:w="20"/><text x="11.1618%" y="783.50"></text></g><g><title>eguitty`crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (49 samples, 0.11%)</title><rect x="10.9574%" y="789" width="0.1117%" height="15" fill="rgb(238,13,15)" fg:x="4808" fg:w="49"/><text x="11.2074%" y="799.50"></text></g><g><title>eguitty`filedescriptor::unix::_&lt;impl std::io::Read for filedescriptor::FileDescriptor&gt;::read (56 samples, 0.13%)</title><rect x="11.0691%" y="789" width="0.1276%" height="15" fill="rgb(208,107,27)" fg:x="4857" fg:w="56"/><text x="11.3191%" y="799.50"></text></g><g><title>eguitty`DYLD-STUB$$read (34 samples, 0.08%)</title><rect x="11.5499%" y="773" width="0.0775%" height="15" fill="rgb(205,136,37)" fg:x="5068" fg:w="34"/><text x="11.7999%" y="783.50"></text></g><g><title>eguitty`filedescriptor::unix::_&lt;impl std::io::Read for filedescriptor::FileDescriptor&gt;::read (24 samples, 0.05%)</title><rect x="11.6274%" y="773" width="0.0547%" height="15" fill="rgb(250,205,27)" fg:x="5102" fg:w="24"/><text x="11.8774%" y="783.50"></text></g><g><title>eguitty`std::io::default_read_buf (38,571 samples, 87.90%)</title><rect x="11.1967%" y="789" width="87.9031%" height="15" fill="rgb(210,80,43)" fg:x="4913" fg:w="38571"/><text x="11.4467%" y="799.50">eguitty`std::io::default_read_buf</text></g><g><title>libsystem_kernel.dylib`read (38,358 samples, 87.42%)</title><rect x="11.6821%" y="773" width="87.4177%" height="15" fill="rgb(247,160,36)" fg:x="5126" fg:w="38358"/><text x="11.9321%" y="783.50">libsystem_kernel.dylib`read</text></g><g><title>eguitty`std::sync::mpmc::waker::SyncWaker::register (9 samples, 0.02%)</title><rect x="99.0998%" y="757" width="0.0205%" height="15" fill="rgb(234,13,49)" fg:x="43484" fg:w="9"/><text x="99.3498%" y="767.50"></text></g><g><title>eguitty`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.02%)</title><rect x="99.0998%" y="741" width="0.0205%" height="15" fill="rgb(234,122,0)" fg:x="43484" fg:w="9"/><text x="99.3498%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="99.0998%" y="725" width="0.0205%" height="15" fill="rgb(207,146,38)" fg:x="43484" fg:w="9"/><text x="99.3498%" y="735.50"></text></g><g><title>eguitty`std::sync::mpmc::list::Channel&lt;T&gt;::recv::_{{closure}} (17 samples, 0.04%)</title><rect x="99.0998%" y="773" width="0.0387%" height="15" fill="rgb(207,177,25)" fg:x="43484" fg:w="17"/><text x="99.3498%" y="783.50"></text></g><g><title>eguitty`std::thread::park (8 samples, 0.02%)</title><rect x="99.1203%" y="757" width="0.0182%" height="15" fill="rgb(211,178,42)" fg:x="43493" fg:w="8"/><text x="99.3703%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (8 samples, 0.02%)</title><rect x="99.1203%" y="741" width="0.0182%" height="15" fill="rgb(230,69,54)" fg:x="43493" fg:w="8"/><text x="99.3703%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_create_slow (8 samples, 0.02%)</title><rect x="99.1203%" y="725" width="0.0182%" height="15" fill="rgb(214,135,41)" fg:x="43493" fg:w="8"/><text x="99.3703%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_os_semaphore_create (8 samples, 0.02%)</title><rect x="99.1203%" y="709" width="0.0182%" height="15" fill="rgb(237,67,25)" fg:x="43493" fg:w="8"/><text x="99.3703%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_create (8 samples, 0.02%)</title><rect x="99.1203%" y="693" width="0.0182%" height="15" fill="rgb(222,189,50)" fg:x="43493" fg:w="8"/><text x="99.3703%" y="703.50"></text></g><g><title>eguitty`std::sync::mpmc::list::Channel&lt;T&gt;::recv (21 samples, 0.05%)</title><rect x="99.0998%" y="789" width="0.0479%" height="15" fill="rgb(245,148,34)" fg:x="43484" fg:w="21"/><text x="99.3498%" y="799.50"></text></g><g><title>eguitty`termwiz::escape::parser::Parser::parse_as_vec (79 samples, 0.18%)</title><rect x="99.1477%" y="789" width="0.1800%" height="15" fill="rgb(222,29,6)" fg:x="43505" fg:w="79"/><text x="99.3977%" y="799.50"></text></g><g><title>eguitty`vtparse::VTParser::parse (41 samples, 0.09%)</title><rect x="99.3277%" y="789" width="0.0934%" height="15" fill="rgb(221,189,43)" fg:x="43584" fg:w="41"/><text x="99.5777%" y="799.50"></text></g><g><title>libsystem_platform.dylib`__bzero (25 samples, 0.06%)</title><rect x="99.4325%" y="789" width="0.0570%" height="15" fill="rgb(207,36,27)" fg:x="43630" fg:w="25"/><text x="99.6825%" y="799.50"></text></g><g><title>eguitty`std::sys_common::backtrace::__rust_begin_short_backtrace (39,853 samples, 90.82%)</title><rect x="8.7263%" y="805" width="90.8248%" height="15" fill="rgb(217,90,24)" fg:x="3829" fg:w="39853"/><text x="8.9763%" y="815.50">eguitty`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`_platform_memset (27 samples, 0.06%)</title><rect x="99.4895%" y="789" width="0.0615%" height="15" fill="rgb(224,66,35)" fg:x="43655" fg:w="27"/><text x="99.7395%" y="799.50"></text></g><g><title>eguitty`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.02%)</title><rect x="99.5533%" y="773" width="0.0205%" height="15" fill="rgb(221,13,50)" fg:x="43683" fg:w="9"/><text x="99.8033%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="99.5533%" y="757" width="0.0205%" height="15" fill="rgb(236,68,49)" fg:x="43683" fg:w="9"/><text x="99.8033%" y="767.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread_local_dtor::register_dtor (17 samples, 0.04%)</title><rect x="99.5533%" y="789" width="0.0387%" height="15" fill="rgb(229,146,28)" fg:x="43683" fg:w="17"/><text x="99.8033%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="99.5738%" y="773" width="0.0182%" height="15" fill="rgb(225,31,38)" fg:x="43692" fg:w="8"/><text x="99.8238%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (20 samples, 0.05%)</title><rect x="99.6331%" y="709" width="0.0456%" height="15" fill="rgb(250,208,3)" fg:x="43718" fg:w="20"/><text x="99.8831%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.09%)</title><rect x="99.5966%" y="757" width="0.0866%" height="15" fill="rgb(246,54,23)" fg:x="43702" fg:w="38"/><text x="99.8466%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.09%)</title><rect x="99.5966%" y="741" width="0.0866%" height="15" fill="rgb(243,76,11)" fg:x="43702" fg:w="38"/><text x="99.8466%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.09%)</title><rect x="99.5966%" y="725" width="0.0866%" height="15" fill="rgb(245,21,50)" fg:x="43702" fg:w="38"/><text x="99.8466%" y="735.50"></text></g><g><title>dyld`dyld4::RuntimeState::_instantiateTLVs (40 samples, 0.09%)</title><rect x="99.5943%" y="773" width="0.0912%" height="15" fill="rgb(228,9,43)" fg:x="43701" fg:w="40"/><text x="99.8443%" y="783.50"></text></g><g><title>eguitty`std::sys_common::thread_info::set (61 samples, 0.14%)</title><rect x="99.5510%" y="805" width="0.1390%" height="15" fill="rgb(208,100,47)" fg:x="43682" fg:w="61"/><text x="99.8010%" y="815.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (43 samples, 0.10%)</title><rect x="99.5921%" y="789" width="0.0980%" height="15" fill="rgb(232,26,8)" fg:x="43700" fg:w="43"/><text x="99.8421%" y="799.50"></text></g><g><title>eguitty`termwiz::escape::parser::Parser::parse_as_vec (59 samples, 0.13%)</title><rect x="99.6901%" y="805" width="0.1345%" height="15" fill="rgb(216,166,38)" fg:x="43743" fg:w="59"/><text x="99.9401%" y="815.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (40,135 samples, 91.47%)</title><rect x="8.4642%" y="821" width="91.4674%" height="15" fill="rgb(251,202,51)" fg:x="3714" fg:w="40135"/><text x="8.7142%" y="831.50">eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.10%)</title><rect x="99.8291%" y="805" width="0.1026%" height="15" fill="rgb(254,216,34)" fg:x="43804" fg:w="45"/><text x="100.0791%" y="815.50"></text></g><g><title>eguitty`std::sys::pal::unix::stack_overflow::imp::make_handler (11 samples, 0.03%)</title><rect x="99.9316%" y="821" width="0.0251%" height="15" fill="rgb(251,32,27)" fg:x="43849" fg:w="11"/><text x="100.1816%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (11 samples, 0.03%)</title><rect x="99.9316%" y="805" width="0.0251%" height="15" fill="rgb(208,127,28)" fg:x="43849" fg:w="11"/><text x="100.1816%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (11 samples, 0.03%)</title><rect x="99.9590%" y="821" width="0.0251%" height="15" fill="rgb(224,137,22)" fg:x="43861" fg:w="11"/><text x="100.2090%" y="831.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new::thread_start (40,160 samples, 91.52%)</title><rect x="8.4642%" y="837" width="91.5244%" height="15" fill="rgb(254,70,32)" fg:x="3714" fg:w="40160"/><text x="8.7142%" y="847.50">eguitty`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>all (43,879 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(229,75,37)" fg:x="0" fg:w="43879"/><text x="0.2500%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (40,471 samples, 92.23%)</title><rect x="7.7668%" y="869" width="92.2332%" height="15" fill="rgb(252,64,23)" fg:x="3408" fg:w="40471"/><text x="8.0168%" y="879.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (40,463 samples, 92.21%)</title><rect x="7.7850%" y="853" width="92.2150%" height="15" fill="rgb(232,162,48)" fg:x="3416" fg:w="40463"/><text x="8.0350%" y="863.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>