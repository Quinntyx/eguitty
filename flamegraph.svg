<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="40283"><g><title>AppKit`+[NSApplication sharedApplication] (8 samples, 0.02%)</title><rect x="0.0074%" y="725" width="0.0199%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="8"/><text x="0.2574%" y="735.50"></text></g><g><title>AppKit`-[NSApplication init] (8 samples, 0.02%)</title><rect x="0.0074%" y="709" width="0.0199%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="8"/><text x="0.2574%" y="719.50"></text></g><g><title>eguitty`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="0.0074%" y="741" width="0.0273%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="11"/><text x="0.2574%" y="751.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (6 samples, 0.01%)</title><rect x="0.0521%" y="645" width="0.0149%" height="15" fill="rgb(248,212,6)" fg:x="21" fg:w="6"/><text x="0.3021%" y="655.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (6 samples, 0.01%)</title><rect x="0.0521%" y="629" width="0.0149%" height="15" fill="rgb(208,68,35)" fg:x="21" fg:w="6"/><text x="0.3021%" y="639.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (19 samples, 0.05%)</title><rect x="0.0348%" y="693" width="0.0472%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="19"/><text x="0.2848%" y="703.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app::WinitApplication::send_event (19 samples, 0.05%)</title><rect x="0.0348%" y="677" width="0.0472%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="19"/><text x="0.2848%" y="687.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (19 samples, 0.05%)</title><rect x="0.0348%" y="661" width="0.0472%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="19"/><text x="0.2848%" y="671.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (6 samples, 0.01%)</title><rect x="0.0894%" y="549" width="0.0149%" height="15" fill="rgb(218,30,26)" fg:x="36" fg:w="6"/><text x="0.3394%" y="559.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (7 samples, 0.02%)</title><rect x="0.0894%" y="677" width="0.0174%" height="15" fill="rgb(220,122,19)" fg:x="36" fg:w="7"/><text x="0.3394%" y="687.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (7 samples, 0.02%)</title><rect x="0.0894%" y="661" width="0.0174%" height="15" fill="rgb(250,228,42)" fg:x="36" fg:w="7"/><text x="0.3394%" y="671.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (7 samples, 0.02%)</title><rect x="0.0894%" y="645" width="0.0174%" height="15" fill="rgb(240,193,28)" fg:x="36" fg:w="7"/><text x="0.3394%" y="655.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (7 samples, 0.02%)</title><rect x="0.0894%" y="629" width="0.0174%" height="15" fill="rgb(216,20,37)" fg:x="36" fg:w="7"/><text x="0.3394%" y="639.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (7 samples, 0.02%)</title><rect x="0.0894%" y="613" width="0.0174%" height="15" fill="rgb(206,188,39)" fg:x="36" fg:w="7"/><text x="0.3394%" y="623.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (7 samples, 0.02%)</title><rect x="0.0894%" y="597" width="0.0174%" height="15" fill="rgb(217,207,13)" fg:x="36" fg:w="7"/><text x="0.3394%" y="607.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (7 samples, 0.02%)</title><rect x="0.0894%" y="581" width="0.0174%" height="15" fill="rgb(231,73,38)" fg:x="36" fg:w="7"/><text x="0.3394%" y="591.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (7 samples, 0.02%)</title><rect x="0.0894%" y="565" width="0.0174%" height="15" fill="rgb(225,20,46)" fg:x="36" fg:w="7"/><text x="0.3394%" y="575.50"></text></g><g><title>OpenGL`0x00000002007befd4 (5 samples, 0.01%)</title><rect x="0.1291%" y="229" width="0.0124%" height="15" fill="rgb(210,31,41)" fg:x="52" fg:w="5"/><text x="0.3791%" y="239.50"></text></g><g><title>eguitty`&lt;glutin::display::Display as glutin::display::GlDisplay&gt;::find_configs (6 samples, 0.01%)</title><rect x="0.1291%" y="309" width="0.0149%" height="15" fill="rgb(221,200,47)" fg:x="52" fg:w="6"/><text x="0.3791%" y="319.50"></text></g><g><title>eguitty`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs (6 samples, 0.01%)</title><rect x="0.1291%" y="293" width="0.0149%" height="15" fill="rgb(226,26,5)" fg:x="52" fg:w="6"/><text x="0.3791%" y="303.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (6 samples, 0.01%)</title><rect x="0.1291%" y="277" width="0.0149%" height="15" fill="rgb(249,33,26)" fg:x="52" fg:w="6"/><text x="0.3791%" y="287.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (6 samples, 0.01%)</title><rect x="0.1291%" y="261" width="0.0149%" height="15" fill="rgb(235,183,28)" fg:x="52" fg:w="6"/><text x="0.3791%" y="271.50"></text></g><g><title>OpenGL`0x00000002007c5cc0 (6 samples, 0.01%)</title><rect x="0.1291%" y="245" width="0.0149%" height="15" fill="rgb(221,5,38)" fg:x="52" fg:w="6"/><text x="0.3791%" y="255.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (5 samples, 0.01%)</title><rect x="0.1489%" y="165" width="0.0124%" height="15" fill="rgb(247,18,42)" fg:x="60" fg:w="5"/><text x="0.3989%" y="175.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (6 samples, 0.01%)</title><rect x="0.1489%" y="181" width="0.0149%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="6"/><text x="0.3989%" y="191.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (9 samples, 0.02%)</title><rect x="0.1489%" y="197" width="0.0223%" height="15" fill="rgb(249,31,29)" fg:x="60" fg:w="9"/><text x="0.3989%" y="207.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (25 samples, 0.06%)</title><rect x="0.1117%" y="389" width="0.0621%" height="15" fill="rgb(225,111,53)" fg:x="45" fg:w="25"/><text x="0.3617%" y="399.50"></text></g><g><title>eguitty`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (25 samples, 0.06%)</title><rect x="0.1117%" y="373" width="0.0621%" height="15" fill="rgb(238,160,17)" fg:x="45" fg:w="25"/><text x="0.3617%" y="383.50"></text></g><g><title>eguitty`eframe::native::run::run_and_return::_{{closure}} (25 samples, 0.06%)</title><rect x="0.1117%" y="357" width="0.0621%" height="15" fill="rgb(214,148,48)" fg:x="45" fg:w="25"/><text x="0.3617%" y="367.50"></text></g><g><title>eguitty`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::on_event (25 samples, 0.06%)</title><rect x="0.1117%" y="341" width="0.0621%" height="15" fill="rgb(232,36,49)" fg:x="45" fg:w="25"/><text x="0.3617%" y="351.50"></text></g><g><title>eguitty`glutin_winit::DisplayBuilder::build (18 samples, 0.04%)</title><rect x="0.1291%" y="325" width="0.0447%" height="15" fill="rgb(209,103,24)" fg:x="52" fg:w="18"/><text x="0.3791%" y="335.50"></text></g><g><title>eguitty`glutin_winit::finalize_window (12 samples, 0.03%)</title><rect x="0.1440%" y="309" width="0.0298%" height="15" fill="rgb(229,88,8)" fg:x="58" fg:w="12"/><text x="0.3940%" y="319.50"></text></g><g><title>eguitty`winit::platform_impl::platform::window::Window::new (12 samples, 0.03%)</title><rect x="0.1440%" y="293" width="0.0298%" height="15" fill="rgb(213,181,19)" fg:x="58" fg:w="12"/><text x="0.3940%" y="303.50"></text></g><g><title>eguitty`winit::platform_impl::platform::window::WinitWindow::new (12 samples, 0.03%)</title><rect x="0.1440%" y="277" width="0.0298%" height="15" fill="rgb(254,191,54)" fg:x="58" fg:w="12"/><text x="0.3940%" y="287.50"></text></g><g><title>eguitty`winit::platform_impl::platform::window::WinitWindow::init (11 samples, 0.03%)</title><rect x="0.1465%" y="261" width="0.0273%" height="15" fill="rgb(241,83,37)" fg:x="59" fg:w="11"/><text x="0.3965%" y="271.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (11 samples, 0.03%)</title><rect x="0.1465%" y="245" width="0.0273%" height="15" fill="rgb(233,36,39)" fg:x="59" fg:w="11"/><text x="0.3965%" y="255.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (11 samples, 0.03%)</title><rect x="0.1465%" y="229" width="0.0273%" height="15" fill="rgb(226,3,54)" fg:x="59" fg:w="11"/><text x="0.3965%" y="239.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (10 samples, 0.02%)</title><rect x="0.1489%" y="213" width="0.0248%" height="15" fill="rgb(245,192,40)" fg:x="60" fg:w="10"/><text x="0.3989%" y="223.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (31 samples, 0.08%)</title><rect x="0.1067%" y="533" width="0.0770%" height="15" fill="rgb(238,167,29)" fg:x="43" fg:w="31"/><text x="0.3567%" y="543.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (30 samples, 0.07%)</title><rect x="0.1092%" y="517" width="0.0745%" height="15" fill="rgb(232,182,51)" fg:x="44" fg:w="30"/><text x="0.3592%" y="527.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (30 samples, 0.07%)</title><rect x="0.1092%" y="501" width="0.0745%" height="15" fill="rgb(231,60,39)" fg:x="44" fg:w="30"/><text x="0.3592%" y="511.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (30 samples, 0.07%)</title><rect x="0.1092%" y="485" width="0.0745%" height="15" fill="rgb(208,69,12)" fg:x="44" fg:w="30"/><text x="0.3592%" y="495.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (30 samples, 0.07%)</title><rect x="0.1092%" y="469" width="0.0745%" height="15" fill="rgb(235,93,37)" fg:x="44" fg:w="30"/><text x="0.3592%" y="479.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (30 samples, 0.07%)</title><rect x="0.1092%" y="453" width="0.0745%" height="15" fill="rgb(213,116,39)" fg:x="44" fg:w="30"/><text x="0.3592%" y="463.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (30 samples, 0.07%)</title><rect x="0.1092%" y="437" width="0.0745%" height="15" fill="rgb(222,207,29)" fg:x="44" fg:w="30"/><text x="0.3592%" y="447.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (30 samples, 0.07%)</title><rect x="0.1092%" y="421" width="0.0745%" height="15" fill="rgb(206,96,30)" fg:x="44" fg:w="30"/><text x="0.3592%" y="431.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::AppState::launched (30 samples, 0.07%)</title><rect x="0.1092%" y="405" width="0.0745%" height="15" fill="rgb(218,138,4)" fg:x="44" fg:w="30"/><text x="0.3592%" y="415.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (32 samples, 0.08%)</title><rect x="0.1067%" y="661" width="0.0794%" height="15" fill="rgb(250,191,14)" fg:x="43" fg:w="32"/><text x="0.3567%" y="671.50"></text></g><g><title>AE`aeProcessAppleEvent (32 samples, 0.08%)</title><rect x="0.1067%" y="645" width="0.0794%" height="15" fill="rgb(239,60,40)" fg:x="43" fg:w="32"/><text x="0.3567%" y="655.50"></text></g><g><title>AE`0x00000001a1fc9e18 (32 samples, 0.08%)</title><rect x="0.1067%" y="629" width="0.0794%" height="15" fill="rgb(206,27,48)" fg:x="43" fg:w="32"/><text x="0.3567%" y="639.50"></text></g><g><title>AE`0x00000001a1fc9ec4 (32 samples, 0.08%)</title><rect x="0.1067%" y="613" width="0.0794%" height="15" fill="rgb(225,35,8)" fg:x="43" fg:w="32"/><text x="0.3567%" y="623.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (32 samples, 0.08%)</title><rect x="0.1067%" y="597" width="0.0794%" height="15" fill="rgb(250,213,24)" fg:x="43" fg:w="32"/><text x="0.3567%" y="607.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (32 samples, 0.08%)</title><rect x="0.1067%" y="581" width="0.0794%" height="15" fill="rgb(247,123,22)" fg:x="43" fg:w="32"/><text x="0.3567%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (32 samples, 0.08%)</title><rect x="0.1067%" y="565" width="0.0794%" height="15" fill="rgb(231,138,38)" fg:x="43" fg:w="32"/><text x="0.3567%" y="575.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (32 samples, 0.08%)</title><rect x="0.1067%" y="549" width="0.0794%" height="15" fill="rgb(231,145,46)" fg:x="43" fg:w="32"/><text x="0.3567%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (6 samples, 0.01%)</title><rect x="0.1936%" y="597" width="0.0149%" height="15" fill="rgb(251,118,11)" fg:x="78" fg:w="6"/><text x="0.4436%" y="607.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (6 samples, 0.01%)</title><rect x="0.1936%" y="581" width="0.0149%" height="15" fill="rgb(217,147,25)" fg:x="78" fg:w="6"/><text x="0.4436%" y="591.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (5 samples, 0.01%)</title><rect x="0.1961%" y="565" width="0.0124%" height="15" fill="rgb(247,81,37)" fg:x="79" fg:w="5"/><text x="0.4461%" y="575.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (5 samples, 0.01%)</title><rect x="0.1961%" y="549" width="0.0124%" height="15" fill="rgb(209,12,38)" fg:x="79" fg:w="5"/><text x="0.4461%" y="559.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (5 samples, 0.01%)</title><rect x="0.1961%" y="533" width="0.0124%" height="15" fill="rgb(227,1,9)" fg:x="79" fg:w="5"/><text x="0.4461%" y="543.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (5 samples, 0.01%)</title><rect x="0.2135%" y="517" width="0.0124%" height="15" fill="rgb(248,47,43)" fg:x="86" fg:w="5"/><text x="0.4635%" y="527.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (6 samples, 0.01%)</title><rect x="0.2135%" y="533" width="0.0149%" height="15" fill="rgb(221,10,30)" fg:x="86" fg:w="6"/><text x="0.4635%" y="543.50"></text></g><g><title>CoreGraphics`RGBAf16_sample_RGBAf_inner(_ImgOp const*, long, long, int) (6 samples, 0.01%)</title><rect x="0.2383%" y="101" width="0.0149%" height="15" fill="rgb(210,229,1)" fg:x="96" fg:w="6"/><text x="0.4883%" y="111.50"></text></g><g><title>CoreGraphics`RIPLayerBltImage (8 samples, 0.02%)</title><rect x="0.2383%" y="149" width="0.0199%" height="15" fill="rgb(222,148,37)" fg:x="96" fg:w="8"/><text x="0.4883%" y="159.50"></text></g><g><title>CoreGraphics`ripl_Mark (8 samples, 0.02%)</title><rect x="0.2383%" y="133" width="0.0199%" height="15" fill="rgb(234,67,33)" fg:x="96" fg:w="8"/><text x="0.4883%" y="143.50"></text></g><g><title>CoreGraphics`RGBAf16_image (8 samples, 0.02%)</title><rect x="0.2383%" y="117" width="0.0199%" height="15" fill="rgb(247,98,35)" fg:x="96" fg:w="8"/><text x="0.4883%" y="127.50"></text></g><g><title>AppKit`-[NSImage drawAtPoint:fromRect:operation:fraction:] (12 samples, 0.03%)</title><rect x="0.2383%" y="277" width="0.0298%" height="15" fill="rgb(247,138,52)" fg:x="96" fg:w="12"/><text x="0.4883%" y="287.50"></text></g><g><title>AppKit`-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (12 samples, 0.03%)</title><rect x="0.2383%" y="261" width="0.0298%" height="15" fill="rgb(213,79,30)" fg:x="96" fg:w="12"/><text x="0.4883%" y="271.50"></text></g><g><title>AppKit`-[NSImage _usingBestRepresentationForRect:context:hints:body:] (12 samples, 0.03%)</title><rect x="0.2383%" y="245" width="0.0298%" height="15" fill="rgb(246,177,23)" fg:x="96" fg:w="12"/><text x="0.4883%" y="255.50"></text></g><g><title>AppKit`__71-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke.1386 (12 samples, 0.03%)</title><rect x="0.2383%" y="229" width="0.0298%" height="15" fill="rgb(230,62,27)" fg:x="96" fg:w="12"/><text x="0.4883%" y="239.50"></text></g><g><title>AppKit`-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (12 samples, 0.03%)</title><rect x="0.2383%" y="213" width="0.0298%" height="15" fill="rgb(216,154,8)" fg:x="96" fg:w="12"/><text x="0.4883%" y="223.50"></text></g><g><title>AppKit`__74-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke (12 samples, 0.03%)</title><rect x="0.2383%" y="197" width="0.0298%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="12"/><text x="0.4883%" y="207.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (12 samples, 0.03%)</title><rect x="0.2383%" y="181" width="0.0298%" height="15" fill="rgb(251,115,12)" fg:x="96" fg:w="12"/><text x="0.4883%" y="191.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (12 samples, 0.03%)</title><rect x="0.2383%" y="165" width="0.0298%" height="15" fill="rgb(240,54,50)" fg:x="96" fg:w="12"/><text x="0.4883%" y="175.50"></text></g><g><title>AppKit`-[NSApplication _updateIconImageFromOriginal] (13 samples, 0.03%)</title><rect x="0.2383%" y="325" width="0.0323%" height="15" fill="rgb(233,84,52)" fg:x="96" fg:w="13"/><text x="0.4883%" y="335.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (13 samples, 0.03%)</title><rect x="0.2383%" y="309" width="0.0323%" height="15" fill="rgb(207,117,47)" fg:x="96" fg:w="13"/><text x="0.4883%" y="319.50"></text></g><g><title>AppKit`__45-[NSApplication _updateIconImageFromOriginal]_block_invoke (13 samples, 0.03%)</title><rect x="0.2383%" y="293" width="0.0323%" height="15" fill="rgb(249,43,39)" fg:x="96" fg:w="13"/><text x="0.4883%" y="303.50"></text></g><g><title>AppKit`-[NSApplication _setApplicationIconImage:setDockImage:] (14 samples, 0.03%)</title><rect x="0.2383%" y="341" width="0.0348%" height="15" fill="rgb(209,38,44)" fg:x="96" fg:w="14"/><text x="0.4883%" y="351.50"></text></g><g><title>AppKit`-[NSDockTile display] (6 samples, 0.01%)</title><rect x="0.2731%" y="341" width="0.0149%" height="15" fill="rgb(236,212,23)" fg:x="110" fg:w="6"/><text x="0.5231%" y="351.50"></text></g><g><title>AppKit`-[NSView displayRectIgnoringOpacity:inContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="325" width="0.0149%" height="15" fill="rgb(242,79,21)" fg:x="110" fg:w="6"/><text x="0.5231%" y="335.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (6 samples, 0.01%)</title><rect x="0.2731%" y="309" width="0.0149%" height="15" fill="rgb(211,96,35)" fg:x="110" fg:w="6"/><text x="0.5231%" y="319.50"></text></g><g><title>AppKit`__47-[NSView displayRectIgnoringOpacity:inContext:]_block_invoke (6 samples, 0.01%)</title><rect x="0.2731%" y="293" width="0.0149%" height="15" fill="rgb(253,215,40)" fg:x="110" fg:w="6"/><text x="0.5231%" y="303.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (6 samples, 0.01%)</title><rect x="0.2731%" y="277" width="0.0149%" height="15" fill="rgb(211,81,21)" fg:x="110" fg:w="6"/><text x="0.5231%" y="287.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (6 samples, 0.01%)</title><rect x="0.2731%" y="261" width="0.0149%" height="15" fill="rgb(208,190,38)" fg:x="110" fg:w="6"/><text x="0.5231%" y="271.50"></text></g><g><title>AppKit`-[NSView _renderLayerInContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="245" width="0.0149%" height="15" fill="rgb(235,213,38)" fg:x="110" fg:w="6"/><text x="0.5231%" y="255.50"></text></g><g><title>QuartzCore`-[CALayer renderInContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="229" width="0.0149%" height="15" fill="rgb(237,122,38)" fg:x="110" fg:w="6"/><text x="0.5231%" y="239.50"></text></g><g><title>QuartzCore`-[CALayer _renderSublayersInContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="213" width="0.0149%" height="15" fill="rgb(244,218,35)" fg:x="110" fg:w="6"/><text x="0.5231%" y="223.50"></text></g><g><title>QuartzCore`-[CALayer renderInContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="197" width="0.0149%" height="15" fill="rgb(240,68,47)" fg:x="110" fg:w="6"/><text x="0.5231%" y="207.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer _renderForegroundInContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="181" width="0.0149%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="6"/><text x="0.5231%" y="191.50"></text></g><g><title>QuartzCore`-[CALayer _renderForegroundInContext:] (6 samples, 0.01%)</title><rect x="0.2731%" y="165" width="0.0149%" height="15" fill="rgb(235,124,12)" fg:x="110" fg:w="6"/><text x="0.5231%" y="175.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (6 samples, 0.01%)</title><rect x="0.2731%" y="149" width="0.0149%" height="15" fill="rgb(224,169,11)" fg:x="110" fg:w="6"/><text x="0.5231%" y="159.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (6 samples, 0.01%)</title><rect x="0.2731%" y="133" width="0.0149%" height="15" fill="rgb(250,166,2)" fg:x="110" fg:w="6"/><text x="0.5231%" y="143.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (6 samples, 0.01%)</title><rect x="0.2731%" y="117" width="0.0149%" height="15" fill="rgb(242,216,29)" fg:x="110" fg:w="6"/><text x="0.5231%" y="127.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (6 samples, 0.01%)</title><rect x="0.2731%" y="101" width="0.0149%" height="15" fill="rgb(230,116,27)" fg:x="110" fg:w="6"/><text x="0.5231%" y="111.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (6 samples, 0.01%)</title><rect x="0.2731%" y="85" width="0.0149%" height="15" fill="rgb(228,99,48)" fg:x="110" fg:w="6"/><text x="0.5231%" y="95.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (6 samples, 0.01%)</title><rect x="0.2731%" y="69" width="0.0149%" height="15" fill="rgb(253,11,6)" fg:x="110" fg:w="6"/><text x="0.5231%" y="79.50"></text></g><g><title>CoreGraphics`img_data_lock (6 samples, 0.01%)</title><rect x="0.2731%" y="53" width="0.0149%" height="15" fill="rgb(247,143,39)" fg:x="110" fg:w="6"/><text x="0.5231%" y="63.50"></text></g><g><title>CoreGraphics`img_interpolate_read (5 samples, 0.01%)</title><rect x="0.2756%" y="37" width="0.0124%" height="15" fill="rgb(236,97,10)" fg:x="111" fg:w="5"/><text x="0.5256%" y="47.50"></text></g><g><title>eguitty`eframe::native::app_icon::AppTitleIconSetter::update (21 samples, 0.05%)</title><rect x="0.2383%" y="357" width="0.0521%" height="15" fill="rgb(233,208,19)" fg:x="96" fg:w="21"/><text x="0.4883%" y="367.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::try_new (6 samples, 0.01%)</title><rect x="0.2904%" y="197" width="0.0149%" height="15" fill="rgb(216,164,2)" fg:x="117" fg:w="6"/><text x="0.5404%" y="207.50"></text></g><g><title>eguitty`&lt;eguitty::app::TabViewer as egui_dock::widgets::tab_viewer::TabViewer&gt;::title (7 samples, 0.02%)</title><rect x="0.2904%" y="229" width="0.0174%" height="15" fill="rgb(220,129,5)" fg:x="117" fg:w="7"/><text x="0.5404%" y="239.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::new_from_str (7 samples, 0.02%)</title><rect x="0.2904%" y="213" width="0.0174%" height="15" fill="rgb(242,17,10)" fg:x="117" fg:w="7"/><text x="0.5404%" y="223.50"></text></g><g><title>eguitty`&lt;eguitty::app::App as eframe::epi::App&gt;::update (10 samples, 0.02%)</title><rect x="0.2904%" y="341" width="0.0248%" height="15" fill="rgb(242,107,0)" fg:x="117" fg:w="10"/><text x="0.5404%" y="351.50"></text></g><g><title>eguitty`egui::containers::panel::CentralPanel::show_dyn (10 samples, 0.02%)</title><rect x="0.2904%" y="325" width="0.0248%" height="15" fill="rgb(251,28,31)" fg:x="117" fg:w="10"/><text x="0.5404%" y="335.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.02%)</title><rect x="0.2904%" y="309" width="0.0248%" height="15" fill="rgb(233,223,10)" fg:x="117" fg:w="10"/><text x="0.5404%" y="319.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.02%)</title><rect x="0.2904%" y="293" width="0.0248%" height="15" fill="rgb(215,21,27)" fg:x="117" fg:w="10"/><text x="0.5404%" y="303.50"></text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_inside (10 samples, 0.02%)</title><rect x="0.2904%" y="277" width="0.0248%" height="15" fill="rgb(232,23,21)" fg:x="117" fg:w="10"/><text x="0.5404%" y="287.50"></text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::render_nodes (10 samples, 0.02%)</title><rect x="0.2904%" y="261" width="0.0248%" height="15" fill="rgb(244,5,23)" fg:x="117" fg:w="10"/><text x="0.5404%" y="271.50"></text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::leaf::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_leaf (10 samples, 0.02%)</title><rect x="0.2904%" y="245" width="0.0248%" height="15" fill="rgb(226,81,46)" fg:x="117" fg:w="10"/><text x="0.5404%" y="255.50"></text></g><g><title>eguitty`eframe::native::epi_integration::EpiIntegration::update (11 samples, 0.03%)</title><rect x="0.2904%" y="357" width="0.0273%" height="15" fill="rgb(247,70,30)" fg:x="117" fg:w="11"/><text x="0.5404%" y="367.50"></text></g><g><title>AppKit`-[_NSOpenGLViewBackingLayer display] (45 samples, 0.11%)</title><rect x="0.2309%" y="469" width="0.1117%" height="15" fill="rgb(212,68,19)" fg:x="93" fg:w="45"/><text x="0.4809%" y="479.50"></text></g><g><title>eguitty`winit::platform_impl::platform::view::WinitView::draw_rect (45 samples, 0.11%)</title><rect x="0.2309%" y="453" width="0.1117%" height="15" fill="rgb(240,187,13)" fg:x="93" fg:w="45"/><text x="0.4809%" y="463.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::AppState::handle_redraw (45 samples, 0.11%)</title><rect x="0.2309%" y="437" width="0.1117%" height="15" fill="rgb(223,113,26)" fg:x="93" fg:w="45"/><text x="0.4809%" y="447.50"></text></g><g><title>eguitty`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (45 samples, 0.11%)</title><rect x="0.2309%" y="421" width="0.1117%" height="15" fill="rgb(206,192,2)" fg:x="93" fg:w="45"/><text x="0.4809%" y="431.50"></text></g><g><title>eguitty`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (45 samples, 0.11%)</title><rect x="0.2309%" y="405" width="0.1117%" height="15" fill="rgb(241,108,4)" fg:x="93" fg:w="45"/><text x="0.4809%" y="415.50"></text></g><g><title>eguitty`eframe::native::run::run_and_return::_{{closure}} (45 samples, 0.11%)</title><rect x="0.2309%" y="389" width="0.1117%" height="15" fill="rgb(247,173,49)" fg:x="93" fg:w="45"/><text x="0.4809%" y="399.50"></text></g><g><title>eguitty`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (45 samples, 0.11%)</title><rect x="0.2309%" y="373" width="0.1117%" height="15" fill="rgb(224,114,35)" fg:x="93" fg:w="45"/><text x="0.4809%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (49 samples, 0.12%)</title><rect x="0.2284%" y="485" width="0.1216%" height="15" fill="rgb(245,159,27)" fg:x="92" fg:w="49"/><text x="0.4784%" y="495.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (52 samples, 0.13%)</title><rect x="0.2284%" y="501" width="0.1291%" height="15" fill="rgb(245,172,44)" fg:x="92" fg:w="52"/><text x="0.4784%" y="511.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (61 samples, 0.15%)</title><rect x="0.2135%" y="549" width="0.1514%" height="15" fill="rgb(236,23,11)" fg:x="86" fg:w="61"/><text x="0.4635%" y="559.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (55 samples, 0.14%)</title><rect x="0.2284%" y="533" width="0.1365%" height="15" fill="rgb(205,117,38)" fg:x="92" fg:w="55"/><text x="0.4784%" y="543.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (55 samples, 0.14%)</title><rect x="0.2284%" y="517" width="0.1365%" height="15" fill="rgb(237,72,25)" fg:x="92" fg:w="55"/><text x="0.4784%" y="527.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;wezterm_term::terminal::Terminal&gt; (5 samples, 0.01%)</title><rect x="0.3773%" y="277" width="0.0124%" height="15" fill="rgb(244,70,9)" fg:x="152" fg:w="5"/><text x="0.6273%" y="287.50"></text></g><g><title>libsystem_c.dylib`nanosleep (6 samples, 0.01%)</title><rect x="0.3997%" y="229" width="0.0149%" height="15" fill="rgb(217,125,39)" fg:x="161" fg:w="6"/><text x="0.6497%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (6 samples, 0.01%)</title><rect x="0.3997%" y="213" width="0.0149%" height="15" fill="rgb(235,36,10)" fg:x="161" fg:w="6"/><text x="0.6497%" y="223.50"></text></g><g><title>eguitty`std::thread::sleep (15 samples, 0.04%)</title><rect x="0.3997%" y="245" width="0.0372%" height="15" fill="rgb(251,123,47)" fg:x="161" fg:w="15"/><text x="0.6497%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (9 samples, 0.02%)</title><rect x="0.4146%" y="229" width="0.0223%" height="15" fill="rgb(221,13,13)" fg:x="167" fg:w="9"/><text x="0.6646%" y="239.50"></text></g><g><title>eguitty`&lt;std::process::Child as portable_pty::ChildKiller&gt;::kill (18 samples, 0.04%)</title><rect x="0.3997%" y="261" width="0.0447%" height="15" fill="rgb(238,131,9)" fg:x="161" fg:w="18"/><text x="0.6497%" y="271.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;egui_terminal::term::TermHandler&gt; (29 samples, 0.07%)</title><rect x="0.3748%" y="293" width="0.0720%" height="15" fill="rgb(211,50,8)" fg:x="151" fg:w="29"/><text x="0.6248%" y="303.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::kill (19 samples, 0.05%)</title><rect x="0.3997%" y="277" width="0.0472%" height="15" fill="rgb(245,182,24)" fg:x="161" fg:w="19"/><text x="0.6497%" y="287.50"></text></g><g><title>libsystem_c.dylib`posix_openpt (8 samples, 0.02%)</title><rect x="0.4617%" y="229" width="0.0199%" height="15" fill="rgb(242,14,37)" fg:x="186" fg:w="8"/><text x="0.7117%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (8 samples, 0.02%)</title><rect x="0.4617%" y="213" width="0.0199%" height="15" fill="rgb(246,228,12)" fg:x="186" fg:w="8"/><text x="0.7117%" y="223.50"></text></g><g><title>eguitty`&lt;portable_pty::unix::UnixPtySystem as portable_pty::PtySystem&gt;::openpty (18 samples, 0.04%)</title><rect x="0.4593%" y="261" width="0.0447%" height="15" fill="rgb(213,55,15)" fg:x="185" fg:w="18"/><text x="0.7093%" y="271.50"></text></g><g><title>libsystem_c.dylib`openpty (17 samples, 0.04%)</title><rect x="0.4617%" y="245" width="0.0422%" height="15" fill="rgb(209,9,3)" fg:x="186" fg:w="17"/><text x="0.7117%" y="255.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;std::process::Command&gt; (5 samples, 0.01%)</title><rect x="0.5139%" y="245" width="0.0124%" height="15" fill="rgb(230,59,30)" fg:x="207" fg:w="5"/><text x="0.7639%" y="255.50"></text></g><g><title>eguitty`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="0.5139%" y="229" width="0.0124%" height="15" fill="rgb(209,121,21)" fg:x="207" fg:w="5"/><text x="0.7639%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_fork_parent (7 samples, 0.02%)</title><rect x="0.5933%" y="181" width="0.0174%" height="15" fill="rgb(220,109,13)" fg:x="239" fg:w="7"/><text x="0.8433%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_force_unlock (5 samples, 0.01%)</title><rect x="0.5983%" y="165" width="0.0124%" height="15" fill="rgb(232,18,1)" fg:x="241" fg:w="5"/><text x="0.8483%" y="175.50"></text></g><g><title>libSystem.B.dylib`libSystem_atfork_parent (10 samples, 0.02%)</title><rect x="0.5883%" y="197" width="0.0248%" height="15" fill="rgb(215,41,42)" fg:x="237" fg:w="10"/><text x="0.8383%" y="207.50"></text></g><g><title>libSystem.B.dylib`libSystem_atfork_prepare (6 samples, 0.01%)</title><rect x="0.6132%" y="197" width="0.0149%" height="15" fill="rgb(224,123,36)" fg:x="247" fg:w="6"/><text x="0.8632%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__fork (1,010 samples, 2.51%)</title><rect x="0.6281%" y="197" width="2.5073%" height="15" fill="rgb(240,125,3)" fg:x="253" fg:w="1010"/><text x="0.8781%" y="207.50">li..</text></g><g><title>libsystem_c.dylib`fork (1,029 samples, 2.55%)</title><rect x="0.5859%" y="213" width="2.5544%" height="15" fill="rgb(205,98,50)" fg:x="236" fg:w="1029"/><text x="0.8359%" y="223.50">li..</text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.05%)</title><rect x="3.1577%" y="213" width="0.0472%" height="15" fill="rgb(205,185,37)" fg:x="1272" fg:w="19"/><text x="3.4077%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.05%)</title><rect x="3.1577%" y="197" width="0.0472%" height="15" fill="rgb(238,207,15)" fg:x="1272" fg:w="19"/><text x="3.4077%" y="207.50"></text></g><g><title>eguitty`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (1,081 samples, 2.68%)</title><rect x="0.5362%" y="229" width="2.6835%" height="15" fill="rgb(213,199,42)" fg:x="216" fg:w="1081"/><text x="0.7862%" y="239.50">eg..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.01%)</title><rect x="3.2048%" y="213" width="0.0149%" height="15" fill="rgb(235,201,11)" fg:x="1291" fg:w="6"/><text x="3.4548%" y="223.50"></text></g><g><title>eguitty`std::process::Command::spawn (1,085 samples, 2.69%)</title><rect x="0.5362%" y="245" width="2.6934%" height="15" fill="rgb(207,46,11)" fg:x="216" fg:w="1085"/><text x="0.7862%" y="255.50">eg..</text></g><g><title>eguitty`&lt;portable_pty::unix::UnixSlavePty as portable_pty::SlavePty&gt;::spawn_command (1,102 samples, 2.74%)</title><rect x="0.5039%" y="261" width="2.7356%" height="15" fill="rgb(241,35,35)" fg:x="203" fg:w="1102"/><text x="0.7539%" y="271.50">eg..</text></g><g><title>eguitty`std::thread::spawn (6 samples, 0.01%)</title><rect x="3.2421%" y="261" width="0.0149%" height="15" fill="rgb(243,32,47)" fg:x="1306" fg:w="6"/><text x="3.4921%" y="271.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new (6 samples, 0.01%)</title><rect x="3.2421%" y="245" width="0.0149%" height="15" fill="rgb(247,202,23)" fg:x="1306" fg:w="6"/><text x="3.4921%" y="255.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new (25 samples, 0.06%)</title><rect x="3.2843%" y="213" width="0.0621%" height="15" fill="rgb(219,102,11)" fg:x="1323" fg:w="25"/><text x="3.5343%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (21 samples, 0.05%)</title><rect x="3.2942%" y="197" width="0.0521%" height="15" fill="rgb(243,110,44)" fg:x="1327" fg:w="21"/><text x="3.5442%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (10 samples, 0.02%)</title><rect x="3.3215%" y="181" width="0.0248%" height="15" fill="rgb(222,74,54)" fg:x="1338" fg:w="10"/><text x="3.5715%" y="191.50"></text></g><g><title>eguitty`std::thread::spawn (29 samples, 0.07%)</title><rect x="3.2843%" y="229" width="0.0720%" height="15" fill="rgb(216,99,12)" fg:x="1323" fg:w="29"/><text x="3.5343%" y="239.50"></text></g><g><title>eguitty`wezterm_term::screen::Screen::new (9 samples, 0.02%)</title><rect x="3.3563%" y="229" width="0.0223%" height="15" fill="rgb(226,22,26)" fg:x="1352" fg:w="9"/><text x="3.6063%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="3.3637%" y="213" width="0.0149%" height="15" fill="rgb(217,163,10)" fg:x="1355" fg:w="6"/><text x="3.6137%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.01%)</title><rect x="3.3637%" y="197" width="0.0149%" height="15" fill="rgb(213,25,53)" fg:x="1355" fg:w="6"/><text x="3.6137%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="3.3637%" y="181" width="0.0149%" height="15" fill="rgb(252,105,26)" fg:x="1355" fg:w="6"/><text x="3.6137%" y="191.50"></text></g><g><title>eguitty`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="3.3836%" y="213" width="0.0124%" height="15" fill="rgb(220,39,43)" fg:x="1363" fg:w="5"/><text x="3.6336%" y="223.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::default_color_map (8 samples, 0.02%)</title><rect x="3.3786%" y="229" width="0.0199%" height="15" fill="rgb(229,68,48)" fg:x="1361" fg:w="8"/><text x="3.6286%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="3.4084%" y="181" width="0.0124%" height="15" fill="rgb(252,8,32)" fg:x="1373" fg:w="5"/><text x="3.6584%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="3.4084%" y="229" width="0.0149%" height="15" fill="rgb(223,20,43)" fg:x="1373" fg:w="6"/><text x="3.6584%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.01%)</title><rect x="3.4084%" y="213" width="0.0149%" height="15" fill="rgb(229,81,49)" fg:x="1373" fg:w="6"/><text x="3.6584%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="3.4084%" y="197" width="0.0149%" height="15" fill="rgb(236,28,36)" fg:x="1373" fg:w="6"/><text x="3.6584%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="3.4233%" y="229" width="0.0124%" height="15" fill="rgb(249,185,26)" fg:x="1379" fg:w="5"/><text x="3.6733%" y="239.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::TerminalState::new (73 samples, 0.18%)</title><rect x="3.2570%" y="245" width="0.1812%" height="15" fill="rgb(249,174,33)" fg:x="1312" fg:w="73"/><text x="3.5070%" y="255.50"></text></g><g><title>eguitty`wezterm_term::terminal::Terminal::new (74 samples, 0.18%)</title><rect x="3.2570%" y="261" width="0.1837%" height="15" fill="rgb(233,201,37)" fg:x="1312" fg:w="74"/><text x="3.5070%" y="271.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::try_new (1,214 samples, 3.01%)</title><rect x="0.4468%" y="277" width="3.0137%" height="15" fill="rgb(221,78,26)" fg:x="180" fg:w="1214"/><text x="0.6968%" y="287.50">egu..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="3.4456%" y="261" width="0.0149%" height="15" fill="rgb(250,127,30)" fg:x="1388" fg:w="6"/><text x="3.6956%" y="271.50"></text></g><g><title>libsystem_c.dylib`fopen (23 samples, 0.06%)</title><rect x="3.4630%" y="197" width="0.0571%" height="15" fill="rgb(230,49,44)" fg:x="1395" fg:w="23"/><text x="3.7130%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (23 samples, 0.06%)</title><rect x="3.4630%" y="181" width="0.0571%" height="15" fill="rgb(229,67,23)" fg:x="1395" fg:w="23"/><text x="3.7130%" y="191.50"></text></g><g><title>eguitty`portable_pty::cmdbuilder::get_shell (25 samples, 0.06%)</title><rect x="3.4630%" y="245" width="0.0621%" height="15" fill="rgb(249,83,47)" fg:x="1395" fg:w="25"/><text x="3.7130%" y="255.50"></text></g><g><title>libsystem_info.dylib`getpwuid (25 samples, 0.06%)</title><rect x="3.4630%" y="229" width="0.0621%" height="15" fill="rgb(215,43,3)" fg:x="1395" fg:w="25"/><text x="3.7130%" y="239.50"></text></g><g><title>libsystem_info.dylib`_fsi_get_user (25 samples, 0.06%)</title><rect x="3.4630%" y="213" width="0.0621%" height="15" fill="rgb(238,154,13)" fg:x="1395" fg:w="25"/><text x="3.7130%" y="223.50"></text></g><g><title>eguitty`portable_pty::cmdbuilder::get_base_env (29 samples, 0.07%)</title><rect x="3.4605%" y="261" width="0.0720%" height="15" fill="rgb(219,56,2)" fg:x="1394" fg:w="29"/><text x="3.7105%" y="271.50"></text></g><g><title>eguitty`&lt;eguitty::app::TabViewer as egui_dock::widgets::tab_viewer::TabViewer&gt;::title (1,273 samples, 3.16%)</title><rect x="0.3748%" y="309" width="3.1601%" height="15" fill="rgb(233,0,4)" fg:x="151" fg:w="1273"/><text x="0.6248%" y="319.50">egu..</text></g><g><title>eguitty`egui_terminal::term::TermHandler::new_from_str (1,244 samples, 3.09%)</title><rect x="0.4468%" y="293" width="3.0882%" height="15" fill="rgb(235,30,7)" fg:x="180" fg:w="1244"/><text x="0.6968%" y="303.50">egu..</text></g><g><title>eguitty`portable_pty::cmdbuilder::CommandBuilder::new (30 samples, 0.07%)</title><rect x="3.4605%" y="277" width="0.0745%" height="15" fill="rgb(250,79,13)" fg:x="1394" fg:w="30"/><text x="3.7105%" y="287.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::flush_print (5 samples, 0.01%)</title><rect x="3.5896%" y="165" width="0.0124%" height="15" fill="rgb(211,146,34)" fg:x="1446" fg:w="5"/><text x="3.8396%" y="175.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::control (22 samples, 0.05%)</title><rect x="3.5524%" y="181" width="0.0546%" height="15" fill="rgb(228,22,38)" fg:x="1431" fg:w="22"/><text x="3.8024%" y="191.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::flush_print (9 samples, 0.02%)</title><rect x="3.6070%" y="181" width="0.0223%" height="15" fill="rgb(235,168,5)" fg:x="1453" fg:w="9"/><text x="3.8570%" y="191.50"></text></g><g><title>eguitty`&lt;egui::ui::Ui as egui_terminal::prelude::TerminalSpawner&gt;::terminal (41 samples, 0.10%)</title><rect x="3.5350%" y="245" width="0.1018%" height="15" fill="rgb(221,155,16)" fg:x="1424" fg:w="41"/><text x="3.7850%" y="255.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::draw (41 samples, 0.10%)</title><rect x="3.5350%" y="229" width="0.1018%" height="15" fill="rgb(215,215,53)" fg:x="1424" fg:w="41"/><text x="3.7850%" y="239.50"></text></g><g><title>eguitty`wezterm_term::terminal::Terminal::perform_actions (40 samples, 0.10%)</title><rect x="3.5375%" y="213" width="0.0993%" height="15" fill="rgb(223,4,10)" fg:x="1425" fg:w="40"/><text x="3.7875%" y="223.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::performer::Performer::perform (37 samples, 0.09%)</title><rect x="3.5449%" y="197" width="0.0919%" height="15" fill="rgb(234,103,6)" fg:x="1428" fg:w="37"/><text x="3.7949%" y="207.50"></text></g><g><title>eguitty`&lt;std::process::Child as portable_pty::ChildKiller&gt;::kill (8 samples, 0.02%)</title><rect x="3.6393%" y="213" width="0.0199%" height="15" fill="rgb(227,97,0)" fg:x="1466" fg:w="8"/><text x="3.8893%" y="223.50"></text></g><g><title>eguitty`std::thread::sleep (8 samples, 0.02%)</title><rect x="3.6393%" y="197" width="0.0199%" height="15" fill="rgb(234,150,53)" fg:x="1466" fg:w="8"/><text x="3.8893%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (7 samples, 0.02%)</title><rect x="3.6417%" y="181" width="0.0174%" height="15" fill="rgb(228,201,54)" fg:x="1467" fg:w="7"/><text x="3.8917%" y="191.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;egui_terminal::term::TermHandler&gt; (13 samples, 0.03%)</title><rect x="3.6368%" y="245" width="0.0323%" height="15" fill="rgb(222,22,37)" fg:x="1465" fg:w="13"/><text x="3.8868%" y="255.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::kill (12 samples, 0.03%)</title><rect x="3.6393%" y="229" width="0.0298%" height="15" fill="rgb(237,53,32)" fg:x="1466" fg:w="12"/><text x="3.8893%" y="239.50"></text></g><g><title>eguitty`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="3.6740%" y="181" width="0.0124%" height="15" fill="rgb(233,25,53)" fg:x="1480" fg:w="5"/><text x="3.9240%" y="191.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;std::process::Command&gt; (6 samples, 0.01%)</title><rect x="3.6740%" y="197" width="0.0149%" height="15" fill="rgb(210,40,34)" fg:x="1480" fg:w="6"/><text x="3.9240%" y="207.50"></text></g><g><title>libsystem_c.dylib`fork (430 samples, 1.07%)</title><rect x="3.7286%" y="165" width="1.0674%" height="15" fill="rgb(241,220,44)" fg:x="1502" fg:w="430"/><text x="3.9786%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__fork (430 samples, 1.07%)</title><rect x="3.7286%" y="149" width="1.0674%" height="15" fill="rgb(235,28,35)" fg:x="1502" fg:w="430"/><text x="3.9786%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="4.8010%" y="165" width="0.0273%" height="15" fill="rgb(210,56,17)" fg:x="1934" fg:w="11"/><text x="5.0510%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.03%)</title><rect x="4.8010%" y="149" width="0.0273%" height="15" fill="rgb(224,130,29)" fg:x="1934" fg:w="11"/><text x="5.0510%" y="159.50"></text></g><g><title>eguitty`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (461 samples, 1.14%)</title><rect x="3.6914%" y="181" width="1.1444%" height="15" fill="rgb(235,212,8)" fg:x="1487" fg:w="461"/><text x="3.9414%" y="191.50"></text></g><g><title>eguitty`std::process::Command::spawn (465 samples, 1.15%)</title><rect x="3.6914%" y="197" width="1.1543%" height="15" fill="rgb(223,33,50)" fg:x="1487" fg:w="465"/><text x="3.9414%" y="207.50"></text></g><g><title>eguitty`&lt;portable_pty::unix::UnixSlavePty as portable_pty::SlavePty&gt;::spawn_command (474 samples, 1.18%)</title><rect x="3.6715%" y="213" width="1.1767%" height="15" fill="rgb(219,149,13)" fg:x="1479" fg:w="474"/><text x="3.9215%" y="223.50"></text></g><g><title>eguitty`std::thread::spawn (5 samples, 0.01%)</title><rect x="4.8482%" y="213" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="1953" fg:w="5"/><text x="5.0982%" y="223.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new (5 samples, 0.01%)</title><rect x="4.8482%" y="197" width="0.0124%" height="15" fill="rgb(216,193,19)" fg:x="1953" fg:w="5"/><text x="5.0982%" y="207.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new (7 samples, 0.02%)</title><rect x="4.8805%" y="165" width="0.0174%" height="15" fill="rgb(216,135,14)" fg:x="1966" fg:w="7"/><text x="5.1305%" y="175.50"></text></g><g><title>eguitty`std::thread::spawn (11 samples, 0.03%)</title><rect x="4.8805%" y="181" width="0.0273%" height="15" fill="rgb(241,47,5)" fg:x="1966" fg:w="11"/><text x="5.1305%" y="191.50"></text></g><g><title>eguitty`wezterm_term::terminal::Terminal::new (30 samples, 0.07%)</title><rect x="4.8606%" y="213" width="0.0745%" height="15" fill="rgb(233,42,35)" fg:x="1958" fg:w="30"/><text x="5.1106%" y="223.50"></text></g><g><title>eguitty`wezterm_term::terminalstate::TerminalState::new (29 samples, 0.07%)</title><rect x="4.8631%" y="197" width="0.0720%" height="15" fill="rgb(231,13,6)" fg:x="1959" fg:w="29"/><text x="5.1131%" y="207.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::try_new (512 samples, 1.27%)</title><rect x="3.6690%" y="229" width="1.2710%" height="15" fill="rgb(207,181,40)" fg:x="1478" fg:w="512"/><text x="3.9190%" y="239.50"></text></g><g><title>eguitty`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (567 samples, 1.41%)</title><rect x="3.5350%" y="309" width="1.4075%" height="15" fill="rgb(254,173,49)" fg:x="1424" fg:w="567"/><text x="3.7850%" y="319.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (567 samples, 1.41%)</title><rect x="3.5350%" y="293" width="1.4075%" height="15" fill="rgb(221,1,38)" fg:x="1424" fg:w="567"/><text x="3.7850%" y="303.50"></text></g><g><title>eguitty`egui::containers::frame::Frame::show_dyn (567 samples, 1.41%)</title><rect x="3.5350%" y="277" width="1.4075%" height="15" fill="rgb(206,124,46)" fg:x="1424" fg:w="567"/><text x="3.7850%" y="287.50"></text></g><g><title>eguitty`&lt;eguitty::app::TabViewer as egui_dock::widgets::tab_viewer::TabViewer&gt;::ui (567 samples, 1.41%)</title><rect x="3.5350%" y="261" width="1.4075%" height="15" fill="rgb(249,21,11)" fg:x="1424" fg:w="567"/><text x="3.7850%" y="271.50"></text></g><g><title>eguitty`egui_terminal::term::TermHandler::new_from_str (513 samples, 1.27%)</title><rect x="3.6690%" y="245" width="1.2735%" height="15" fill="rgb(222,201,40)" fg:x="1478" fg:w="513"/><text x="3.9190%" y="255.50"></text></g><g><title>eguitty`egui::containers::panel::CentralPanel::show_dyn (1,842 samples, 4.57%)</title><rect x="0.3724%" y="405" width="4.5726%" height="15" fill="rgb(235,61,29)" fg:x="150" fg:w="1842"/><text x="0.6224%" y="415.50">eguit..</text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,842 samples, 4.57%)</title><rect x="0.3724%" y="389" width="4.5726%" height="15" fill="rgb(219,207,3)" fg:x="150" fg:w="1842"/><text x="0.6224%" y="399.50">eguit..</text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,842 samples, 4.57%)</title><rect x="0.3724%" y="373" width="4.5726%" height="15" fill="rgb(222,56,46)" fg:x="150" fg:w="1842"/><text x="0.6224%" y="383.50">eguit..</text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_inside (1,842 samples, 4.57%)</title><rect x="0.3724%" y="357" width="4.5726%" height="15" fill="rgb(239,76,54)" fg:x="150" fg:w="1842"/><text x="0.6224%" y="367.50">eguit..</text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::render_nodes (1,842 samples, 4.57%)</title><rect x="0.3724%" y="341" width="4.5726%" height="15" fill="rgb(231,124,27)" fg:x="150" fg:w="1842"/><text x="0.6224%" y="351.50">eguit..</text></g><g><title>eguitty`egui_dock::widgets::dock_area::show::leaf::_&lt;impl egui_dock::widgets::dock_area::DockArea&lt;Tab&gt;&gt;::show_leaf (1,841 samples, 4.57%)</title><rect x="0.3748%" y="325" width="4.5702%" height="15" fill="rgb(249,195,6)" fg:x="151" fg:w="1841"/><text x="0.6248%" y="335.50">eguit..</text></g><g><title>eguitty`&lt;eguitty::app::App as eframe::epi::App&gt;::update (1,843 samples, 4.58%)</title><rect x="0.3724%" y="421" width="4.5751%" height="15" fill="rgb(237,174,47)" fg:x="150" fg:w="1843"/><text x="0.6224%" y="431.50">eguit..</text></g><g><title>eguitty`eframe::native::epi_integration::EpiIntegration::update (1,845 samples, 4.58%)</title><rect x="0.3724%" y="437" width="4.5801%" height="15" fill="rgb(206,201,31)" fg:x="150" fg:w="1845"/><text x="0.6224%" y="447.50">eguit..</text></g><g><title>IOGPU`-[IOGPUMetalGLDrawable lookupIOSurfaceAtIndex:] (31 samples, 0.08%)</title><rect x="4.9624%" y="293" width="0.0770%" height="15" fill="rgb(231,57,52)" fg:x="1999" fg:w="31"/><text x="5.2124%" y="303.50"></text></g><g><title>IOGPU`IOGPUGLDrawableLookupIOSurfaceFromIndex (31 samples, 0.08%)</title><rect x="4.9624%" y="277" width="0.0770%" height="15" fill="rgb(248,177,22)" fg:x="1999" fg:w="31"/><text x="5.2124%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (25 samples, 0.06%)</title><rect x="4.9773%" y="261" width="0.0621%" height="15" fill="rgb(215,211,37)" fg:x="2005" fg:w="25"/><text x="5.2273%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalGLDrawable setDrawableSurface:mode:colorDepthMode:face:level:volatile:fixedSource:scaleOptions:scaledWidth:scaledHeight:] (5 samples, 0.01%)</title><rect x="5.0393%" y="293" width="0.0124%" height="15" fill="rgb(241,128,51)" fg:x="2030" fg:w="5"/><text x="5.2893%" y="303.50"></text></g><g><title>IOGPU`IOGPUGLDrawableSetDrawable (5 samples, 0.01%)</title><rect x="5.0393%" y="277" width="0.0124%" height="15" fill="rgb(227,165,31)" fg:x="2030" fg:w="5"/><text x="5.2893%" y="287.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (5 samples, 0.01%)</title><rect x="5.0393%" y="261" width="0.0124%" height="15" fill="rgb(228,167,24)" fg:x="2030" fg:w="5"/><text x="5.2893%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.01%)</title><rect x="5.0393%" y="245" width="0.0124%" height="15" fill="rgb(228,143,12)" fg:x="2030" fg:w="5"/><text x="5.2893%" y="255.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.01%)</title><rect x="5.0393%" y="229" width="0.0124%" height="15" fill="rgb(249,149,8)" fg:x="2030" fg:w="5"/><text x="5.2893%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="5.0393%" y="213" width="0.0124%" height="15" fill="rgb(243,35,44)" fg:x="2030" fg:w="5"/><text x="5.2893%" y="223.50"></text></g><g><title>SkyLight`SLSBindSurface (8 samples, 0.02%)</title><rect x="5.0592%" y="277" width="0.0199%" height="15" fill="rgb(246,89,9)" fg:x="2038" fg:w="8"/><text x="5.3092%" y="287.50"></text></g><g><title>SkyLight`_CGSBindSurface (7 samples, 0.02%)</title><rect x="5.0617%" y="261" width="0.0174%" height="15" fill="rgb(233,213,13)" fg:x="2039" fg:w="7"/><text x="5.3117%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (6 samples, 0.01%)</title><rect x="5.0642%" y="245" width="0.0149%" height="15" fill="rgb(233,141,41)" fg:x="2040" fg:w="6"/><text x="5.3142%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (6 samples, 0.01%)</title><rect x="5.0642%" y="229" width="0.0149%" height="15" fill="rgb(239,167,4)" fg:x="2040" fg:w="6"/><text x="5.3142%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.01%)</title><rect x="5.0642%" y="213" width="0.0149%" height="15" fill="rgb(209,217,16)" fg:x="2040" fg:w="6"/><text x="5.3142%" y="223.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRDrawable::attachDrawable (49 samples, 0.12%)</title><rect x="4.9624%" y="309" width="0.1216%" height="15" fill="rgb(219,88,35)" fg:x="1999" fg:w="49"/><text x="5.2124%" y="319.50"></text></g><g><title>OpenGL`0x00000002007bfd84 (10 samples, 0.02%)</title><rect x="5.0592%" y="293" width="0.0248%" height="15" fill="rgb(220,193,23)" fg:x="2038" fg:w="10"/><text x="5.3092%" y="303.50"></text></g><g><title>OpenGL`CGLSetVirtualScreen (53 samples, 0.13%)</title><rect x="4.9624%" y="373" width="0.1316%" height="15" fill="rgb(230,90,52)" fg:x="1999" fg:w="53"/><text x="5.2124%" y="383.50"></text></g><g><title>OpenGL`0x00000002007c03e4 (53 samples, 0.13%)</title><rect x="4.9624%" y="357" width="0.1316%" height="15" fill="rgb(252,106,19)" fg:x="1999" fg:w="53"/><text x="5.2124%" y="367.50"></text></g><g><title>GLEngine`gliAttachDrawableWithOptions (53 samples, 0.13%)</title><rect x="4.9624%" y="341" width="0.1316%" height="15" fill="rgb(206,74,20)" fg:x="1999" fg:w="53"/><text x="5.2124%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldAttachDrawable (53 samples, 0.13%)</title><rect x="4.9624%" y="325" width="0.1316%" height="15" fill="rgb(230,138,44)" fg:x="1999" fg:w="53"/><text x="5.2124%" y="335.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (56 samples, 0.14%)</title><rect x="4.9574%" y="389" width="0.1390%" height="15" fill="rgb(235,182,43)" fg:x="1997" fg:w="56"/><text x="5.2074%" y="399.50"></text></g><g><title>eguitty`&lt;glutin::api::cgl::context::NotCurrentContext as glutin::context::NotCurrentGlContext&gt;::make_current (59 samples, 0.15%)</title><rect x="4.9525%" y="421" width="0.1465%" height="15" fill="rgb(242,16,51)" fg:x="1995" fg:w="59"/><text x="5.2025%" y="431.50"></text></g><g><title>AppKit`-[NSOpenGLContext update] (59 samples, 0.15%)</title><rect x="4.9525%" y="405" width="0.1465%" height="15" fill="rgb(248,9,4)" fg:x="1995" fg:w="59"/><text x="5.2025%" y="415.50"></text></g><g><title>IOSurface`-[IOSurface initWithMachPort:] (5 samples, 0.01%)</title><rect x="5.1386%" y="261" width="0.0124%" height="15" fill="rgb(210,31,22)" fg:x="2070" fg:w="5"/><text x="5.3886%" y="271.50"></text></g><g><title>IOSurface`IOSurfaceClientLookupFromMachPort (5 samples, 0.01%)</title><rect x="5.1386%" y="245" width="0.0124%" height="15" fill="rgb(239,54,39)" fg:x="2070" fg:w="5"/><text x="5.3886%" y="255.50"></text></g><g><title>IOGPU`-[IOGPUMetalGLDrawable lookupIOSurfaceAtIndex:] (33 samples, 0.08%)</title><rect x="5.1312%" y="293" width="0.0819%" height="15" fill="rgb(230,99,41)" fg:x="2067" fg:w="33"/><text x="5.3812%" y="303.50"></text></g><g><title>IOGPU`IOGPUGLDrawableLookupIOSurfaceFromIndex (33 samples, 0.08%)</title><rect x="5.1312%" y="277" width="0.0819%" height="15" fill="rgb(253,106,12)" fg:x="2067" fg:w="33"/><text x="5.3812%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (23 samples, 0.06%)</title><rect x="5.1560%" y="261" width="0.0571%" height="15" fill="rgb(213,46,41)" fg:x="2077" fg:w="23"/><text x="5.4060%" y="271.50"></text></g><g><title>OpenGL`0x00000002007bfd84 (5 samples, 0.01%)</title><rect x="5.2280%" y="293" width="0.0124%" height="15" fill="rgb(215,133,35)" fg:x="2106" fg:w="5"/><text x="5.4780%" y="303.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRDrawable::attachDrawable (51 samples, 0.13%)</title><rect x="5.1163%" y="309" width="0.1266%" height="15" fill="rgb(213,28,5)" fg:x="2061" fg:w="51"/><text x="5.3663%" y="319.50"></text></g><g><title>AGXMetalG13X`AGX::ContextCommon&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::newCommand (5 samples, 0.01%)</title><rect x="5.3025%" y="229" width="0.0124%" height="15" fill="rgb(215,77,49)" fg:x="2136" fg:w="5"/><text x="5.5525%" y="239.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::beginRenderPass (10 samples, 0.02%)</title><rect x="5.3000%" y="245" width="0.0248%" height="15" fill="rgb(248,100,22)" fg:x="2135" fg:w="10"/><text x="5.5500%" y="255.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (34 samples, 0.08%)</title><rect x="5.2479%" y="261" width="0.0844%" height="15" fill="rgb(208,67,9)" fg:x="2114" fg:w="34"/><text x="5.4979%" y="271.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (43 samples, 0.11%)</title><rect x="5.2479%" y="277" width="0.1067%" height="15" fill="rgb(219,133,21)" fg:x="2114" fg:w="43"/><text x="5.4979%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (6 samples, 0.01%)</title><rect x="5.3571%" y="213" width="0.0149%" height="15" fill="rgb(246,46,29)" fg:x="2158" fg:w="6"/><text x="5.6071%" y="223.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (6 samples, 0.01%)</title><rect x="5.3571%" y="197" width="0.0149%" height="15" fill="rgb(246,185,52)" fg:x="2158" fg:w="6"/><text x="5.6071%" y="207.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (7 samples, 0.02%)</title><rect x="5.3571%" y="229" width="0.0174%" height="15" fill="rgb(252,136,11)" fg:x="2158" fg:w="7"/><text x="5.6071%" y="239.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::buildRenderPassDescriptor (9 samples, 0.02%)</title><rect x="5.3571%" y="277" width="0.0223%" height="15" fill="rgb(219,138,53)" fg:x="2158" fg:w="9"/><text x="5.6071%" y="287.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal setTexture:] (9 samples, 0.02%)</title><rect x="5.3571%" y="261" width="0.0223%" height="15" fill="rgb(211,51,23)" fg:x="2158" fg:w="9"/><text x="5.6071%" y="271.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (9 samples, 0.02%)</title><rect x="5.3571%" y="245" width="0.0223%" height="15" fill="rgb(247,221,28)" fg:x="2158" fg:w="9"/><text x="5.6071%" y="255.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (55 samples, 0.14%)</title><rect x="5.2479%" y="293" width="0.1365%" height="15" fill="rgb(251,222,45)" fg:x="2114" fg:w="55"/><text x="5.4979%" y="303.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDrawFramebuffer (56 samples, 0.14%)</title><rect x="5.2479%" y="309" width="0.1390%" height="15" fill="rgb(217,162,53)" fg:x="2114" fg:w="56"/><text x="5.4979%" y="319.50"></text></g><g><title>OpenGL`CGLSetVirtualScreen (113 samples, 0.28%)</title><rect x="5.1138%" y="373" width="0.2805%" height="15" fill="rgb(229,93,14)" fg:x="2060" fg:w="113"/><text x="5.3638%" y="383.50"></text></g><g><title>OpenGL`0x00000002007c03e4 (113 samples, 0.28%)</title><rect x="5.1138%" y="357" width="0.2805%" height="15" fill="rgb(209,67,49)" fg:x="2060" fg:w="113"/><text x="5.3638%" y="367.50"></text></g><g><title>GLEngine`gliAttachDrawableWithOptions (113 samples, 0.28%)</title><rect x="5.1138%" y="341" width="0.2805%" height="15" fill="rgb(213,87,29)" fg:x="2060" fg:w="113"/><text x="5.3638%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldAttachDrawable (113 samples, 0.28%)</title><rect x="5.1138%" y="325" width="0.2805%" height="15" fill="rgb(205,151,52)" fg:x="2060" fg:w="113"/><text x="5.3638%" y="335.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (118 samples, 0.29%)</title><rect x="5.1039%" y="389" width="0.2929%" height="15" fill="rgb(253,215,39)" fg:x="2056" fg:w="118"/><text x="5.3539%" y="399.50"></text></g><g><title>AppKit`-[NSOpenGLContext update] (126 samples, 0.31%)</title><rect x="5.0989%" y="405" width="0.3128%" height="15" fill="rgb(221,220,41)" fg:x="2054" fg:w="126"/><text x="5.3489%" y="415.50"></text></g><g><title>eguitty`eframe::native::glow_integration::change_gl_context (187 samples, 0.46%)</title><rect x="4.9525%" y="437" width="0.4642%" height="15" fill="rgb(218,133,21)" fg:x="1995" fg:w="187"/><text x="5.2025%" y="447.50"></text></g><g><title>eguitty`&lt;glutin::context::PossiblyCurrentContext as glutin::context::PossiblyCurrentGlContext&gt;::make_not_current (128 samples, 0.32%)</title><rect x="5.0989%" y="421" width="0.3178%" height="15" fill="rgb(221,193,43)" fg:x="2054" fg:w="128"/><text x="5.3489%" y="431.50"></text></g><g><title>eguitty`egui_glow::painter::Painter::paint_and_update_textures (7 samples, 0.02%)</title><rect x="5.4241%" y="437" width="0.0174%" height="15" fill="rgb(240,128,52)" fg:x="2185" fg:w="7"/><text x="5.6741%" y="447.50"></text></g><g><title>eguitty`egui_glow::painter::Painter::paint_primitives (7 samples, 0.02%)</title><rect x="5.4241%" y="421" width="0.0174%" height="15" fill="rgb(253,114,12)" fg:x="2185" fg:w="7"/><text x="5.6741%" y="431.50"></text></g><g><title>eguitty`egui_winit::update_viewport_info (8 samples, 0.02%)</title><rect x="5.4415%" y="437" width="0.0199%" height="15" fill="rgb(215,223,47)" fg:x="2192" fg:w="8"/><text x="5.6915%" y="447.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (6 samples, 0.01%)</title><rect x="5.4614%" y="373" width="0.0149%" height="15" fill="rgb(248,225,23)" fg:x="2200" fg:w="6"/><text x="5.7114%" y="383.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (6 samples, 0.01%)</title><rect x="5.4614%" y="357" width="0.0149%" height="15" fill="rgb(250,108,0)" fg:x="2200" fg:w="6"/><text x="5.7114%" y="367.50"></text></g><g><title>eguitty`glutin::api::cgl::context::ContextInner::flush_buffer (8 samples, 0.02%)</title><rect x="5.4614%" y="437" width="0.0199%" height="15" fill="rgb(228,208,7)" fg:x="2200" fg:w="8"/><text x="5.7114%" y="447.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (8 samples, 0.02%)</title><rect x="5.4614%" y="421" width="0.0199%" height="15" fill="rgb(244,45,10)" fg:x="2200" fg:w="8"/><text x="5.7114%" y="431.50"></text></g><g><title>OpenGL`CGLFlushDrawable (8 samples, 0.02%)</title><rect x="5.4614%" y="405" width="0.0199%" height="15" fill="rgb(207,125,25)" fg:x="2200" fg:w="8"/><text x="5.7114%" y="415.50"></text></g><g><title>GLEngine`glSwap_Exec (8 samples, 0.02%)</title><rect x="5.4614%" y="389" width="0.0199%" height="15" fill="rgb(210,195,18)" fg:x="2200" fg:w="8"/><text x="5.7114%" y="399.50"></text></g><g><title>eguitty`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (2,062 samples, 5.12%)</title><rect x="0.3649%" y="453" width="5.1188%" height="15" fill="rgb(249,80,12)" fg:x="147" fg:w="2062"/><text x="0.6149%" y="463.50">eguitt..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,127 samples, 5.28%)</title><rect x="0.2135%" y="581" width="5.2801%" height="15" fill="rgb(221,65,9)" fg:x="86" fg:w="2127"/><text x="0.4635%" y="591.50">CoreFo..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,127 samples, 5.28%)</title><rect x="0.2135%" y="565" width="5.2801%" height="15" fill="rgb(235,49,36)" fg:x="86" fg:w="2127"/><text x="0.4635%" y="575.50">CoreFo..</text></g><g><title>eguitty`winit::platform_impl::platform::observer::control_flow_end_handler (2,066 samples, 5.13%)</title><rect x="0.3649%" y="549" width="5.1287%" height="15" fill="rgb(225,32,20)" fg:x="147" fg:w="2066"/><text x="0.6149%" y="559.50">eguitt..</text></g><g><title>eguitty`std::panicking::try (2,066 samples, 5.13%)</title><rect x="0.3649%" y="533" width="5.1287%" height="15" fill="rgb(215,141,46)" fg:x="147" fg:w="2066"/><text x="0.6149%" y="543.50">eguitt..</text></g><g><title>eguitty`winit::platform_impl::platform::app_state::AppState::cleared (2,066 samples, 5.13%)</title><rect x="0.3649%" y="517" width="5.1287%" height="15" fill="rgb(250,160,47)" fg:x="147" fg:w="2066"/><text x="0.6149%" y="527.50">eguitt..</text></g><g><title>eguitty`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (2,066 samples, 5.13%)</title><rect x="0.3649%" y="501" width="5.1287%" height="15" fill="rgb(216,222,40)" fg:x="147" fg:w="2066"/><text x="0.6149%" y="511.50">eguitt..</text></g><g><title>eguitty`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (2,066 samples, 5.13%)</title><rect x="0.3649%" y="485" width="5.1287%" height="15" fill="rgb(234,217,39)" fg:x="147" fg:w="2066"/><text x="0.6149%" y="495.50">eguitt..</text></g><g><title>eguitty`eframe::native::run::run_and_return::_{{closure}} (2,066 samples, 5.13%)</title><rect x="0.3649%" y="469" width="5.1287%" height="15" fill="rgb(207,178,40)" fg:x="147" fg:w="2066"/><text x="0.6149%" y="479.50">eguitt..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (2,138 samples, 5.31%)</title><rect x="0.1936%" y="613" width="5.3074%" height="15" fill="rgb(221,136,13)" fg:x="78" fg:w="2138"/><text x="0.4436%" y="623.50">CoreFo..</text></g><g><title>CoreFoundation`__CFRunLoopRun (2,132 samples, 5.29%)</title><rect x="0.2085%" y="597" width="5.2926%" height="15" fill="rgb(249,199,10)" fg:x="84" fg:w="2132"/><text x="0.4585%" y="607.50">CoreFo..</text></g><g><title>AppKit`_DPSNextEvent (2,174 samples, 5.40%)</title><rect x="0.1067%" y="677" width="5.3968%" height="15" fill="rgb(249,222,13)" fg:x="43" fg:w="2174"/><text x="0.3567%" y="687.50">AppKit`..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (2,142 samples, 5.32%)</title><rect x="0.1862%" y="661" width="5.3174%" height="15" fill="rgb(244,185,38)" fg:x="75" fg:w="2142"/><text x="0.4362%" y="671.50">HIToolb..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (2,142 samples, 5.32%)</title><rect x="0.1862%" y="645" width="5.3174%" height="15" fill="rgb(236,202,9)" fg:x="75" fg:w="2142"/><text x="0.4362%" y="655.50">HIToolb..</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (2,139 samples, 5.31%)</title><rect x="0.1936%" y="629" width="5.3099%" height="15" fill="rgb(250,229,37)" fg:x="78" fg:w="2139"/><text x="0.4436%" y="639.50">HITool..</text></g><g><title>eguitty`main (2,215 samples, 5.50%)</title><rect x="0.0074%" y="853" width="5.4986%" height="15" fill="rgb(206,174,23)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="863.50">eguitty..</text></g><g><title>eguitty`std::rt::lang_start_internal (2,215 samples, 5.50%)</title><rect x="0.0074%" y="837" width="5.4986%" height="15" fill="rgb(211,33,43)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="847.50">eguitty..</text></g><g><title>eguitty`std::rt::lang_start::_{{closure}} (2,215 samples, 5.50%)</title><rect x="0.0074%" y="821" width="5.4986%" height="15" fill="rgb(245,58,50)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="831.50">eguitty..</text></g><g><title>eguitty`std::sys_common::backtrace::__rust_begin_short_backtrace (2,215 samples, 5.50%)</title><rect x="0.0074%" y="805" width="5.4986%" height="15" fill="rgb(244,68,36)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="815.50">eguitty..</text></g><g><title>eguitty`eguitty::main (2,215 samples, 5.50%)</title><rect x="0.0074%" y="789" width="5.4986%" height="15" fill="rgb(232,229,15)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="799.50">eguitty..</text></g><g><title>eguitty`eframe::run_native (2,215 samples, 5.50%)</title><rect x="0.0074%" y="773" width="5.4986%" height="15" fill="rgb(254,30,23)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="783.50">eguitty..</text></g><g><title>eguitty`eframe::native::run::run_glow (2,215 samples, 5.50%)</title><rect x="0.0074%" y="757" width="5.4986%" height="15" fill="rgb(235,160,14)" fg:x="3" fg:w="2215"/><text x="0.2574%" y="767.50">eguitty..</text></g><g><title>eguitty`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_on_demand (2,204 samples, 5.47%)</title><rect x="0.0348%" y="741" width="5.4713%" height="15" fill="rgb(212,155,44)" fg:x="14" fg:w="2204"/><text x="0.2848%" y="751.50">eguitty..</text></g><g><title>eguitty`std::panicking::try (2,204 samples, 5.47%)</title><rect x="0.0348%" y="725" width="5.4713%" height="15" fill="rgb(226,2,50)" fg:x="14" fg:w="2204"/><text x="0.2848%" y="735.50">eguitty..</text></g><g><title>AppKit`-[NSApplication run] (2,204 samples, 5.47%)</title><rect x="0.0348%" y="709" width="5.4713%" height="15" fill="rgb(234,177,6)" fg:x="14" fg:w="2204"/><text x="0.2848%" y="719.50">AppKit`..</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (2,184 samples, 5.42%)</title><rect x="0.0844%" y="693" width="5.4216%" height="15" fill="rgb(217,24,9)" fg:x="34" fg:w="2184"/><text x="0.3344%" y="703.50">AppKit`..</text></g><g><title>dyld`start (2,216 samples, 5.50%)</title><rect x="0.0074%" y="869" width="5.5011%" height="15" fill="rgb(220,13,46)" fg:x="3" fg:w="2216"/><text x="0.2574%" y="879.50">dyld`st..</text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (11 samples, 0.03%)</title><rect x="5.5185%" y="869" width="0.0273%" height="15" fill="rgb(239,221,27)" fg:x="2223" fg:w="11"/><text x="5.7685%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (334 samples, 0.83%)</title><rect x="5.6376%" y="853" width="0.8291%" height="15" fill="rgb(222,198,25)" fg:x="2271" fg:w="334"/><text x="5.8876%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (30 samples, 0.07%)</title><rect x="6.5809%" y="805" width="0.0745%" height="15" fill="rgb(211,99,13)" fg:x="2651" fg:w="30"/><text x="6.8309%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (37 samples, 0.09%)</title><rect x="6.5735%" y="821" width="0.0919%" height="15" fill="rgb(232,111,31)" fg:x="2648" fg:w="37"/><text x="6.8235%" y="831.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRTextureResource::dealloc (6 samples, 0.01%)</title><rect x="6.7224%" y="565" width="0.0149%" height="15" fill="rgb(245,82,37)" fg:x="2708" fg:w="6"/><text x="6.9724%" y="575.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDContextRec::flushContextInternal (15 samples, 0.04%)</title><rect x="6.7150%" y="597" width="0.0372%" height="15" fill="rgb(227,149,46)" fg:x="2705" fg:w="15"/><text x="6.9650%" y="607.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResourceList::makeResourcesNotBusyAndReset (12 samples, 0.03%)</title><rect x="6.7224%" y="581" width="0.0298%" height="15" fill="rgb(218,36,50)" fg:x="2708" fg:w="12"/><text x="6.9724%" y="591.50"></text></g><g><title>AppleMetalOpenGLRenderer`std::__1::__hash_table&lt;GLRResource*, std::__1::hash&lt;GLRResource*&gt;, std::__1::equal_to&lt;GLRResource*&gt;, std::__1::allocator&lt;GLRResource*&gt;&gt;::clear (6 samples, 0.01%)</title><rect x="6.7373%" y="565" width="0.0149%" height="15" fill="rgb(226,80,48)" fg:x="2714" fg:w="6"/><text x="6.9873%" y="575.50"></text></g><g><title>Metal`MTLDispatchListApply (22 samples, 0.05%)</title><rect x="6.7150%" y="613" width="0.0546%" height="15" fill="rgb(238,224,15)" fg:x="2705" fg:w="22"/><text x="6.9650%" y="623.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (7 samples, 0.02%)</title><rect x="6.7522%" y="597" width="0.0174%" height="15" fill="rgb(241,136,10)" fg:x="2720" fg:w="7"/><text x="7.0022%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (26 samples, 0.06%)</title><rect x="6.7075%" y="629" width="0.0645%" height="15" fill="rgb(208,32,45)" fg:x="2702" fg:w="26"/><text x="6.9575%" y="639.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (32 samples, 0.08%)</title><rect x="6.6951%" y="661" width="0.0794%" height="15" fill="rgb(207,135,9)" fg:x="2697" fg:w="32"/><text x="6.9451%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (30 samples, 0.07%)</title><rect x="6.7001%" y="645" width="0.0745%" height="15" fill="rgb(206,86,44)" fg:x="2699" fg:w="30"/><text x="6.9501%" y="655.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (7 samples, 0.02%)</title><rect x="6.7746%" y="645" width="0.0174%" height="15" fill="rgb(245,177,15)" fg:x="2729" fg:w="7"/><text x="7.0246%" y="655.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer dealloc] (7 samples, 0.02%)</title><rect x="6.7746%" y="629" width="0.0174%" height="15" fill="rgb(206,64,50)" fg:x="2729" fg:w="7"/><text x="7.0246%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (41 samples, 0.10%)</title><rect x="6.6926%" y="789" width="0.1018%" height="15" fill="rgb(234,36,40)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (41 samples, 0.10%)</title><rect x="6.6926%" y="773" width="0.1018%" height="15" fill="rgb(213,64,8)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (41 samples, 0.10%)</title><rect x="6.6926%" y="757" width="0.1018%" height="15" fill="rgb(210,75,36)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (41 samples, 0.10%)</title><rect x="6.6926%" y="741" width="0.1018%" height="15" fill="rgb(229,88,21)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (41 samples, 0.10%)</title><rect x="6.6926%" y="725" width="0.1018%" height="15" fill="rgb(252,204,47)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (41 samples, 0.10%)</title><rect x="6.6926%" y="709" width="0.1018%" height="15" fill="rgb(208,77,27)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="719.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (41 samples, 0.10%)</title><rect x="6.6926%" y="693" width="0.1018%" height="15" fill="rgb(221,76,26)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="703.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (41 samples, 0.10%)</title><rect x="6.6926%" y="677" width="0.1018%" height="15" fill="rgb(225,139,18)" fg:x="2696" fg:w="41"/><text x="6.9426%" y="687.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (8 samples, 0.02%)</title><rect x="6.7746%" y="661" width="0.0199%" height="15" fill="rgb(230,137,11)" fg:x="2729" fg:w="8"/><text x="7.0246%" y="671.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (5 samples, 0.01%)</title><rect x="6.8093%" y="725" width="0.0124%" height="15" fill="rgb(212,28,1)" fg:x="2743" fg:w="5"/><text x="7.0593%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (103 samples, 0.26%)</title><rect x="6.8217%" y="725" width="0.2557%" height="15" fill="rgb(248,164,17)" fg:x="2748" fg:w="103"/><text x="7.0717%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (102 samples, 0.25%)</title><rect x="6.8242%" y="709" width="0.2532%" height="15" fill="rgb(222,171,42)" fg:x="2749" fg:w="102"/><text x="7.0742%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (101 samples, 0.25%)</title><rect x="6.8267%" y="693" width="0.2507%" height="15" fill="rgb(243,84,45)" fg:x="2750" fg:w="101"/><text x="7.0767%" y="703.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (111 samples, 0.28%)</title><rect x="6.8044%" y="741" width="0.2756%" height="15" fill="rgb(252,49,23)" fg:x="2741" fg:w="111"/><text x="7.0544%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (38 samples, 0.09%)</title><rect x="7.0799%" y="741" width="0.0943%" height="15" fill="rgb(215,19,7)" fg:x="2852" fg:w="38"/><text x="7.3299%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (150 samples, 0.37%)</title><rect x="6.8044%" y="757" width="0.3724%" height="15" fill="rgb(238,81,41)" fg:x="2741" fg:w="150"/><text x="7.0544%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (154 samples, 0.38%)</title><rect x="6.7969%" y="789" width="0.3823%" height="15" fill="rgb(210,199,37)" fg:x="2738" fg:w="154"/><text x="7.0469%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (153 samples, 0.38%)</title><rect x="6.7994%" y="773" width="0.3798%" height="15" fill="rgb(244,192,49)" fg:x="2739" fg:w="153"/><text x="7.0494%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (202 samples, 0.50%)</title><rect x="6.6802%" y="805" width="0.5015%" height="15" fill="rgb(226,211,11)" fg:x="2691" fg:w="202"/><text x="6.9302%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (37 samples, 0.09%)</title><rect x="7.1916%" y="805" width="0.0919%" height="15" fill="rgb(236,162,54)" fg:x="2897" fg:w="37"/><text x="7.4416%" y="815.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (36 samples, 0.09%)</title><rect x="7.1941%" y="789" width="0.0894%" height="15" fill="rgb(220,229,9)" fg:x="2898" fg:w="36"/><text x="7.4441%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (253 samples, 0.63%)</title><rect x="6.6728%" y="821" width="0.6281%" height="15" fill="rgb(250,87,22)" fg:x="2688" fg:w="253"/><text x="6.9228%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (711 samples, 1.77%)</title><rect x="5.5557%" y="869" width="1.7650%" height="15" fill="rgb(239,43,17)" fg:x="2238" fg:w="711"/><text x="5.8057%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (342 samples, 0.85%)</title><rect x="6.4717%" y="853" width="0.8490%" height="15" fill="rgb(231,177,25)" fg:x="2607" fg:w="342"/><text x="6.7217%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (338 samples, 0.84%)</title><rect x="6.4816%" y="837" width="0.8391%" height="15" fill="rgb(219,179,1)" fg:x="2611" fg:w="338"/><text x="6.7316%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (6 samples, 0.01%)</title><rect x="7.3654%" y="693" width="0.0149%" height="15" fill="rgb(238,219,53)" fg:x="2967" fg:w="6"/><text x="7.6154%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.01%)</title><rect x="7.3654%" y="677" width="0.0149%" height="15" fill="rgb(232,167,36)" fg:x="2967" fg:w="6"/><text x="7.6154%" y="687.50"></text></g><g><title>CoreFoundation`_CFRelease (7 samples, 0.02%)</title><rect x="7.3654%" y="741" width="0.0174%" height="15" fill="rgb(244,19,51)" fg:x="2967" fg:w="7"/><text x="7.6154%" y="751.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (7 samples, 0.02%)</title><rect x="7.3654%" y="725" width="0.0174%" height="15" fill="rgb(224,6,22)" fg:x="2967" fg:w="7"/><text x="7.6154%" y="735.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (7 samples, 0.02%)</title><rect x="7.3654%" y="709" width="0.0174%" height="15" fill="rgb(224,145,5)" fg:x="2967" fg:w="7"/><text x="7.6154%" y="719.50"></text></g><g><title>CoreFoundation`CFRunLoopPerformBlock (7 samples, 0.02%)</title><rect x="7.3902%" y="709" width="0.0174%" height="15" fill="rgb(234,130,49)" fg:x="2977" fg:w="7"/><text x="7.6402%" y="719.50"></text></g><g><title>SkyLight`(anonymous namespace)::LogRingBuffer::push_back(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="7.4448%" y="661" width="0.0124%" height="15" fill="rgb(254,6,2)" fg:x="2999" fg:w="5"/><text x="7.6948%" y="671.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (5 samples, 0.01%)</title><rect x="7.4572%" y="645" width="0.0124%" height="15" fill="rgb(208,96,46)" fg:x="3004" fg:w="5"/><text x="7.7072%" y="655.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (8 samples, 0.02%)</title><rect x="7.4572%" y="661" width="0.0199%" height="15" fill="rgb(239,3,39)" fg:x="3004" fg:w="8"/><text x="7.7072%" y="671.50"></text></g><g><title>SkyLight`CGSEventLogEvent (18 samples, 0.04%)</title><rect x="7.4399%" y="677" width="0.0447%" height="15" fill="rgb(233,210,1)" fg:x="2997" fg:w="18"/><text x="7.6899%" y="687.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (7 samples, 0.02%)</title><rect x="7.5143%" y="613" width="0.0174%" height="15" fill="rgb(244,137,37)" fg:x="3027" fg:w="7"/><text x="7.7643%" y="623.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (5 samples, 0.01%)</title><rect x="7.5193%" y="597" width="0.0124%" height="15" fill="rgb(240,136,2)" fg:x="3029" fg:w="5"/><text x="7.7693%" y="607.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (14 samples, 0.03%)</title><rect x="7.5044%" y="629" width="0.0348%" height="15" fill="rgb(239,18,37)" fg:x="3023" fg:w="14"/><text x="7.7544%" y="639.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (18 samples, 0.04%)</title><rect x="7.4994%" y="645" width="0.0447%" height="15" fill="rgb(218,185,22)" fg:x="3021" fg:w="18"/><text x="7.7494%" y="655.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (22 samples, 0.05%)</title><rect x="7.4945%" y="661" width="0.0546%" height="15" fill="rgb(225,218,4)" fg:x="3019" fg:w="22"/><text x="7.7445%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (28 samples, 0.07%)</title><rect x="7.5491%" y="661" width="0.0695%" height="15" fill="rgb(230,182,32)" fg:x="3041" fg:w="28"/><text x="7.7991%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (28 samples, 0.07%)</title><rect x="7.5491%" y="645" width="0.0695%" height="15" fill="rgb(242,56,43)" fg:x="3041" fg:w="28"/><text x="7.7991%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (28 samples, 0.07%)</title><rect x="7.5491%" y="629" width="0.0695%" height="15" fill="rgb(233,99,24)" fg:x="3041" fg:w="28"/><text x="7.7991%" y="639.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (59 samples, 0.15%)</title><rect x="7.4845%" y="677" width="0.1465%" height="15" fill="rgb(234,209,42)" fg:x="3015" fg:w="59"/><text x="7.7345%" y="687.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (82 samples, 0.20%)</title><rect x="7.4299%" y="693" width="0.2036%" height="15" fill="rgb(227,7,12)" fg:x="2993" fg:w="82"/><text x="7.6799%" y="703.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (115 samples, 0.29%)</title><rect x="7.3530%" y="757" width="0.2855%" height="15" fill="rgb(245,203,43)" fg:x="2962" fg:w="115"/><text x="7.6030%" y="767.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (102 samples, 0.25%)</title><rect x="7.3852%" y="741" width="0.2532%" height="15" fill="rgb(238,205,33)" fg:x="2975" fg:w="102"/><text x="7.6352%" y="751.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (100 samples, 0.25%)</title><rect x="7.3902%" y="725" width="0.2482%" height="15" fill="rgb(231,56,7)" fg:x="2977" fg:w="100"/><text x="7.6402%" y="735.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (84 samples, 0.21%)</title><rect x="7.4299%" y="709" width="0.2085%" height="15" fill="rgb(244,186,29)" fg:x="2993" fg:w="84"/><text x="7.6799%" y="719.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (119 samples, 0.30%)</title><rect x="7.3455%" y="789" width="0.2954%" height="15" fill="rgb(234,111,31)" fg:x="2959" fg:w="119"/><text x="7.5955%" y="799.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (116 samples, 0.29%)</title><rect x="7.3530%" y="773" width="0.2880%" height="15" fill="rgb(241,149,10)" fg:x="2962" fg:w="116"/><text x="7.6030%" y="783.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (24 samples, 0.06%)</title><rect x="7.6409%" y="789" width="0.0596%" height="15" fill="rgb(249,206,44)" fg:x="3078" fg:w="24"/><text x="7.8909%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (23 samples, 0.06%)</title><rect x="7.6434%" y="773" width="0.0571%" height="15" fill="rgb(251,153,30)" fg:x="3079" fg:w="23"/><text x="7.8934%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (23 samples, 0.06%)</title><rect x="7.6434%" y="757" width="0.0571%" height="15" fill="rgb(239,152,38)" fg:x="3079" fg:w="23"/><text x="7.8934%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (23 samples, 0.06%)</title><rect x="7.6434%" y="741" width="0.0571%" height="15" fill="rgb(249,139,47)" fg:x="3079" fg:w="23"/><text x="7.8934%" y="751.50"></text></g><g><title>AppKit`_NSEventThread (154 samples, 0.38%)</title><rect x="7.3282%" y="837" width="0.3823%" height="15" fill="rgb(244,64,35)" fg:x="2952" fg:w="154"/><text x="7.5782%" y="847.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (153 samples, 0.38%)</title><rect x="7.3306%" y="821" width="0.3798%" height="15" fill="rgb(216,46,15)" fg:x="2953" fg:w="153"/><text x="7.5806%" y="831.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (152 samples, 0.38%)</title><rect x="7.3331%" y="805" width="0.3773%" height="15" fill="rgb(250,74,19)" fg:x="2954" fg:w="152"/><text x="7.5831%" y="815.50"></text></g><g><title>eguitty`DYLD-STUB$$memcpy (30 samples, 0.07%)</title><rect x="7.7154%" y="805" width="0.0745%" height="15" fill="rgb(249,42,33)" fg:x="3108" fg:w="30"/><text x="7.9654%" y="815.50"></text></g><g><title>eguitty`crossbeam_channel::channel::Sender&lt;T&gt;::send (24 samples, 0.06%)</title><rect x="7.7899%" y="805" width="0.0596%" height="15" fill="rgb(242,149,17)" fg:x="3138" fg:w="24"/><text x="8.0399%" y="815.50"></text></g><g><title>eguitty`std::io::default_read_buf (70 samples, 0.17%)</title><rect x="7.8495%" y="805" width="0.1738%" height="15" fill="rgb(244,29,21)" fg:x="3162" fg:w="70"/><text x="8.0995%" y="815.50"></text></g><g><title>eguitty`DYLD-STUB$$bzero (33 samples, 0.08%)</title><rect x="8.4750%" y="789" width="0.0819%" height="15" fill="rgb(220,130,37)" fg:x="3414" fg:w="33"/><text x="8.7250%" y="799.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;portable_pty::unix::UnixMasterWriter&gt; (8 samples, 0.02%)</title><rect x="8.5570%" y="773" width="0.0199%" height="15" fill="rgb(211,67,2)" fg:x="3447" fg:w="8"/><text x="8.8070%" y="783.50"></text></g><g><title>libsystem_c.dylib`tcgetattr (6 samples, 0.01%)</title><rect x="8.5619%" y="757" width="0.0149%" height="15" fill="rgb(235,68,52)" fg:x="3449" fg:w="6"/><text x="8.8119%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (6 samples, 0.01%)</title><rect x="8.5619%" y="741" width="0.0149%" height="15" fill="rgb(246,142,3)" fg:x="3449" fg:w="6"/><text x="8.8119%" y="751.50"></text></g><g><title>eguitty`core::ptr::drop_in_place&lt;wezterm_term::terminalstate::ThreadedWriter::new::{{closure}}&gt; (16 samples, 0.04%)</title><rect x="8.5570%" y="789" width="0.0397%" height="15" fill="rgb(241,25,7)" fg:x="3447" fg:w="16"/><text x="8.8070%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.02%)</title><rect x="9.5350%" y="725" width="0.0223%" height="15" fill="rgb(242,119,39)" fg:x="3841" fg:w="9"/><text x="9.7850%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (16 samples, 0.04%)</title><rect x="9.5574%" y="725" width="0.0397%" height="15" fill="rgb(241,98,45)" fg:x="3850" fg:w="16"/><text x="9.8074%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.03%)</title><rect x="9.5648%" y="709" width="0.0323%" height="15" fill="rgb(254,28,30)" fg:x="3853" fg:w="13"/><text x="9.8148%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (7 samples, 0.02%)</title><rect x="9.5971%" y="725" width="0.0174%" height="15" fill="rgb(241,142,54)" fg:x="3866" fg:w="7"/><text x="9.8471%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="9.5996%" y="709" width="0.0149%" height="15" fill="rgb(222,85,15)" fg:x="3867" fg:w="6"/><text x="9.8496%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (34 samples, 0.08%)</title><rect x="10.5255%" y="709" width="0.0844%" height="15" fill="rgb(210,85,47)" fg:x="4240" fg:w="34"/><text x="10.7755%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (466 samples, 1.16%)</title><rect x="9.4556%" y="757" width="1.1568%" height="15" fill="rgb(224,206,25)" fg:x="3809" fg:w="466"/><text x="9.7056%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (457 samples, 1.13%)</title><rect x="9.4779%" y="741" width="1.1345%" height="15" fill="rgb(243,201,19)" fg:x="3818" fg:w="457"/><text x="9.7279%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (402 samples, 1.00%)</title><rect x="9.6145%" y="725" width="0.9979%" height="15" fill="rgb(236,59,4)" fg:x="3873" fg:w="402"/><text x="9.8645%" y="735.50"></text></g><g><title>eguitty`crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (754 samples, 1.87%)</title><rect x="8.7456%" y="773" width="1.8718%" height="15" fill="rgb(254,179,45)" fg:x="3523" fg:w="754"/><text x="8.9956%" y="783.50">e..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="10.6174%" y="773" width="0.0199%" height="15" fill="rgb(226,14,10)" fg:x="4277" fg:w="8"/><text x="10.8674%" y="783.50"></text></g><g><title>eguitty`crossbeam_channel::channel::Sender&lt;T&gt;::send (863 samples, 2.14%)</title><rect x="8.5967%" y="789" width="2.1423%" height="15" fill="rgb(244,27,41)" fg:x="3463" fg:w="863"/><text x="8.8467%" y="799.50">e..</text></g><g><title>libsystem_platform.dylib`_platform_memset (39 samples, 0.10%)</title><rect x="10.6422%" y="773" width="0.0968%" height="15" fill="rgb(235,35,32)" fg:x="4287" fg:w="39"/><text x="10.8922%" y="783.50"></text></g><g><title>eguitty`crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (65 samples, 0.16%)</title><rect x="10.7390%" y="789" width="0.1614%" height="15" fill="rgb(218,68,31)" fg:x="4326" fg:w="65"/><text x="10.9890%" y="799.50"></text></g><g><title>eguitty`filedescriptor::unix::_&lt;impl std::io::Read for filedescriptor::FileDescriptor&gt;::read (61 samples, 0.15%)</title><rect x="10.9004%" y="789" width="0.1514%" height="15" fill="rgb(207,120,37)" fg:x="4391" fg:w="61"/><text x="11.1504%" y="799.50"></text></g><g><title>eguitty`DYLD-STUB$$read (26 samples, 0.06%)</title><rect x="11.4639%" y="773" width="0.0645%" height="15" fill="rgb(227,98,0)" fg:x="4618" fg:w="26"/><text x="11.7139%" y="783.50"></text></g><g><title>eguitty`filedescriptor::unix::_&lt;impl std::io::Read for filedescriptor::FileDescriptor&gt;::read (32 samples, 0.08%)</title><rect x="11.5284%" y="773" width="0.0794%" height="15" fill="rgb(207,7,3)" fg:x="4644" fg:w="32"/><text x="11.7784%" y="783.50"></text></g><g><title>eguitty`std::io::default_read_buf (35,373 samples, 87.81%)</title><rect x="11.0518%" y="789" width="87.8112%" height="15" fill="rgb(206,98,19)" fg:x="4452" fg:w="35373"/><text x="11.3018%" y="799.50">eguitty`std::io::default_read_buf</text></g><g><title>libsystem_kernel.dylib`read (35,149 samples, 87.26%)</title><rect x="11.6079%" y="773" width="87.2552%" height="15" fill="rgb(217,5,26)" fg:x="4676" fg:w="35149"/><text x="11.8579%" y="783.50">libsystem_kernel.dylib`read</text></g><g><title>eguitty`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="98.8630%" y="741" width="0.0149%" height="15" fill="rgb(235,190,38)" fg:x="39825" fg:w="6"/><text x="99.1130%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="98.8630%" y="725" width="0.0149%" height="15" fill="rgb(247,86,24)" fg:x="39825" fg:w="6"/><text x="99.1130%" y="735.50"></text></g><g><title>eguitty`std::sync::mpmc::waker::SyncWaker::register (7 samples, 0.02%)</title><rect x="98.8630%" y="757" width="0.0174%" height="15" fill="rgb(205,101,16)" fg:x="39825" fg:w="7"/><text x="99.1130%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_create_slow (5 samples, 0.01%)</title><rect x="98.8829%" y="725" width="0.0124%" height="15" fill="rgb(246,168,33)" fg:x="39833" fg:w="5"/><text x="99.1329%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_os_semaphore_create (5 samples, 0.01%)</title><rect x="98.8829%" y="709" width="0.0124%" height="15" fill="rgb(231,114,1)" fg:x="39833" fg:w="5"/><text x="99.1329%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_create (5 samples, 0.01%)</title><rect x="98.8829%" y="693" width="0.0124%" height="15" fill="rgb(207,184,53)" fg:x="39833" fg:w="5"/><text x="99.1329%" y="703.50"></text></g><g><title>eguitty`std::thread::park (14 samples, 0.03%)</title><rect x="98.8804%" y="757" width="0.0348%" height="15" fill="rgb(224,95,51)" fg:x="39832" fg:w="14"/><text x="99.1304%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (13 samples, 0.03%)</title><rect x="98.8829%" y="741" width="0.0323%" height="15" fill="rgb(212,188,45)" fg:x="39833" fg:w="13"/><text x="99.1329%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (8 samples, 0.02%)</title><rect x="98.8953%" y="725" width="0.0199%" height="15" fill="rgb(223,154,38)" fg:x="39838" fg:w="8"/><text x="99.1453%" y="735.50"></text></g><g><title>eguitty`std::sync::mpmc::list::Channel&lt;T&gt;::recv::_{{closure}} (24 samples, 0.06%)</title><rect x="98.8630%" y="773" width="0.0596%" height="15" fill="rgb(251,22,52)" fg:x="39825" fg:w="24"/><text x="99.1130%" y="783.50"></text></g><g><title>eguitty`std::sync::mpmc::list::Channel&lt;T&gt;::recv (33 samples, 0.08%)</title><rect x="98.8630%" y="789" width="0.0819%" height="15" fill="rgb(229,209,22)" fg:x="39825" fg:w="33"/><text x="99.1130%" y="799.50"></text></g><g><title>eguitty`std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (8 samples, 0.02%)</title><rect x="98.9251%" y="773" width="0.0199%" height="15" fill="rgb(234,138,34)" fg:x="39850" fg:w="8"/><text x="99.1751%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="98.9251%" y="757" width="0.0199%" height="15" fill="rgb(212,95,11)" fg:x="39850" fg:w="8"/><text x="99.1751%" y="767.50"></text></g><g><title>eguitty`termwiz::escape::parser::Parser::parse_as_vec (94 samples, 0.23%)</title><rect x="98.9474%" y="789" width="0.2333%" height="15" fill="rgb(240,179,47)" fg:x="39859" fg:w="94"/><text x="99.1974%" y="799.50"></text></g><g><title>eguitty`vtparse::VTParser::parse (60 samples, 0.15%)</title><rect x="99.1808%" y="789" width="0.1489%" height="15" fill="rgb(240,163,11)" fg:x="39953" fg:w="60"/><text x="99.4308%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_small (13 samples, 0.03%)</title><rect x="99.3297%" y="789" width="0.0323%" height="15" fill="rgb(236,37,12)" fg:x="40013" fg:w="13"/><text x="99.5797%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (13 samples, 0.03%)</title><rect x="99.3297%" y="773" width="0.0323%" height="15" fill="rgb(232,164,16)" fg:x="40013" fg:w="13"/><text x="99.5797%" y="783.50"></text></g><g><title>libsystem_platform.dylib`__bzero (22 samples, 0.05%)</title><rect x="99.3670%" y="789" width="0.0546%" height="15" fill="rgb(244,205,15)" fg:x="40028" fg:w="22"/><text x="99.6170%" y="799.50"></text></g><g><title>eguitty`std::sys_common::backtrace::__rust_begin_short_backtrace (36,846 samples, 91.47%)</title><rect x="8.0232%" y="805" width="91.4679%" height="15" fill="rgb(223,117,47)" fg:x="3232" fg:w="36846"/><text x="8.2732%" y="815.50">eguitty`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`_platform_memset (28 samples, 0.07%)</title><rect x="99.4216%" y="789" width="0.0695%" height="15" fill="rgb(244,107,35)" fg:x="40050" fg:w="28"/><text x="99.6716%" y="799.50"></text></g><g><title>eguitty`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="99.4936%" y="773" width="0.0199%" height="15" fill="rgb(205,140,8)" fg:x="40079" fg:w="8"/><text x="99.7436%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="99.4936%" y="757" width="0.0199%" height="15" fill="rgb(228,84,46)" fg:x="40079" fg:w="8"/><text x="99.7436%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="99.5134%" y="773" width="0.0174%" height="15" fill="rgb(254,188,9)" fg:x="40087" fg:w="7"/><text x="99.7634%" y="783.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread_local_dtor::register_dtor (16 samples, 0.04%)</title><rect x="99.4936%" y="789" width="0.0397%" height="15" fill="rgb(206,112,54)" fg:x="40079" fg:w="16"/><text x="99.7436%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (15 samples, 0.04%)</title><rect x="99.5755%" y="709" width="0.0372%" height="15" fill="rgb(216,84,49)" fg:x="40112" fg:w="15"/><text x="99.8255%" y="719.50"></text></g><g><title>eguitty`std::sys_common::thread_info::set (50 samples, 0.12%)</title><rect x="99.4911%" y="805" width="0.1241%" height="15" fill="rgb(214,194,35)" fg:x="40078" fg:w="50"/><text x="99.7411%" y="815.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (33 samples, 0.08%)</title><rect x="99.5333%" y="789" width="0.0819%" height="15" fill="rgb(249,28,3)" fg:x="40095" fg:w="33"/><text x="99.7833%" y="799.50"></text></g><g><title>dyld`dyld4::RuntimeState::_instantiateTLVs (33 samples, 0.08%)</title><rect x="99.5333%" y="773" width="0.0819%" height="15" fill="rgb(222,56,52)" fg:x="40095" fg:w="33"/><text x="99.7833%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.08%)</title><rect x="99.5333%" y="757" width="0.0819%" height="15" fill="rgb(245,217,50)" fg:x="40095" fg:w="33"/><text x="99.7833%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.08%)</title><rect x="99.5333%" y="741" width="0.0819%" height="15" fill="rgb(213,201,24)" fg:x="40095" fg:w="33"/><text x="99.7833%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.08%)</title><rect x="99.5333%" y="725" width="0.0819%" height="15" fill="rgb(248,116,28)" fg:x="40095" fg:w="33"/><text x="99.7833%" y="735.50"></text></g><g><title>eguitty`termwiz::escape::parser::Parser::parse_as_vec (49 samples, 0.12%)</title><rect x="99.6152%" y="805" width="0.1216%" height="15" fill="rgb(219,72,43)" fg:x="40128" fg:w="49"/><text x="99.8652%" y="815.50"></text></g><g><title>eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}} (37,120 samples, 92.15%)</title><rect x="7.7129%" y="821" width="92.1481%" height="15" fill="rgb(209,138,14)" fg:x="3107" fg:w="37120"/><text x="7.9629%" y="831.50">eguitty`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>libsystem_platform.dylib`_platform_memmove (47 samples, 0.12%)</title><rect x="99.7443%" y="805" width="0.1167%" height="15" fill="rgb(222,18,33)" fg:x="40180" fg:w="47"/><text x="99.9943%" y="815.50"></text></g><g><title>eguitty`std::sys::pal::unix::stack_overflow::imp::make_handler (15 samples, 0.04%)</title><rect x="99.8610%" y="821" width="0.0372%" height="15" fill="rgb(213,199,7)" fg:x="40227" fg:w="15"/><text x="100.1110%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (15 samples, 0.04%)</title><rect x="99.8610%" y="805" width="0.0372%" height="15" fill="rgb(250,110,10)" fg:x="40227" fg:w="15"/><text x="100.1110%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (6 samples, 0.01%)</title><rect x="99.8982%" y="821" width="0.0149%" height="15" fill="rgb(248,123,6)" fg:x="40242" fg:w="6"/><text x="100.1482%" y="831.50"></text></g><g><title>eguitty`std::sys::pal::unix::thread::Thread::new::thread_start (37,144 samples, 92.21%)</title><rect x="7.7104%" y="837" width="92.2076%" height="15" fill="rgb(206,91,31)" fg:x="3106" fg:w="37144"/><text x="7.9604%" y="847.50">eguitty`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>libsystem_kernel.dylib`__munmap (6 samples, 0.01%)</title><rect x="99.9206%" y="837" width="0.0149%" height="15" fill="rgb(211,154,13)" fg:x="40251" fg:w="6"/><text x="100.1706%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (5 samples, 0.01%)</title><rect x="99.9355%" y="837" width="0.0124%" height="15" fill="rgb(225,148,7)" fg:x="40257" fg:w="5"/><text x="100.1855%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="99.9528%" y="821" width="0.0124%" height="15" fill="rgb(220,160,43)" fg:x="40264" fg:w="5"/><text x="100.2028%" y="831.50"></text></g><g><title>dyld`dyld4::RuntimeState::_finalizeListTLV (5 samples, 0.01%)</title><rect x="99.9752%" y="805" width="0.0124%" height="15" fill="rgb(213,52,39)" fg:x="40273" fg:w="5"/><text x="100.2252%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (10 samples, 0.02%)</title><rect x="99.9727%" y="821" width="0.0248%" height="15" fill="rgb(243,137,7)" fg:x="40272" fg:w="10"/><text x="100.2227%" y="831.50"></text></g><g><title>all (40,283 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(230,79,13)" fg:x="0" fg:w="40283"/><text x="0.2500%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (37,334 samples, 92.68%)</title><rect x="7.3207%" y="869" width="92.6793%" height="15" fill="rgb(247,105,23)" fg:x="2949" fg:w="37334"/><text x="7.5707%" y="879.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (37,331 samples, 92.67%)</title><rect x="7.3282%" y="853" width="92.6718%" height="15" fill="rgb(223,179,41)" fg:x="2952" fg:w="37331"/><text x="7.5782%" y="863.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_exit (21 samples, 0.05%)</title><rect x="99.9479%" y="837" width="0.0521%" height="15" fill="rgb(218,9,34)" fg:x="40262" fg:w="21"/><text x="100.1979%" y="847.50"></text></g></svg></svg>